
Atmega2560_CrashWarningSystem_MCU2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800200  00001076  000010ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001076  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         0000096c  00000000  00000000  000010f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000080c  00000000  00000000  00001a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000226c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000023ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000251c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00004165  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00005050  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00005e00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00005f60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  000061ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000069bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      44:	0c 94 b9 07 	jmp	0xf72	; 0xf72 <__vector_17>
      48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      80:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      8c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e6 e7       	ldi	r30, 0x76	; 118
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
     10e:	0e 94 84 06 	call	0xd08	; 0xd08 <main>
     112:	0c 94 39 08 	jmp	0x1072	; 0x1072 <_exit>

00000116 <__bad_interrupt>:
     116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <__fixunssfsi>:
     11a:	ef 92       	push	r14
     11c:	ff 92       	push	r15
     11e:	0f 93       	push	r16
     120:	1f 93       	push	r17
     122:	7b 01       	movw	r14, r22
     124:	8c 01       	movw	r16, r24
     126:	20 e0       	ldi	r18, 0x00	; 0
     128:	30 e0       	ldi	r19, 0x00	; 0
     12a:	40 e0       	ldi	r20, 0x00	; 0
     12c:	5f e4       	ldi	r21, 0x4F	; 79
     12e:	0e 94 8d 03 	call	0x71a	; 0x71a <__gesf2>
     132:	88 23       	and	r24, r24
     134:	8c f0       	brlt	.+34     	; 0x158 <__fixunssfsi+0x3e>
     136:	c8 01       	movw	r24, r16
     138:	b7 01       	movw	r22, r14
     13a:	20 e0       	ldi	r18, 0x00	; 0
     13c:	30 e0       	ldi	r19, 0x00	; 0
     13e:	40 e0       	ldi	r20, 0x00	; 0
     140:	5f e4       	ldi	r21, 0x4F	; 79
     142:	0e 94 05 02 	call	0x40a	; 0x40a <__subsf3>
     146:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixsfsi>
     14a:	9b 01       	movw	r18, r22
     14c:	ac 01       	movw	r20, r24
     14e:	20 50       	subi	r18, 0x00	; 0
     150:	30 40       	sbci	r19, 0x00	; 0
     152:	40 40       	sbci	r20, 0x00	; 0
     154:	50 48       	sbci	r21, 0x80	; 128
     156:	06 c0       	rjmp	.+12     	; 0x164 <__fixunssfsi+0x4a>
     158:	c8 01       	movw	r24, r16
     15a:	b7 01       	movw	r22, r14
     15c:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixsfsi>
     160:	9b 01       	movw	r18, r22
     162:	ac 01       	movw	r20, r24
     164:	b9 01       	movw	r22, r18
     166:	ca 01       	movw	r24, r20
     168:	1f 91       	pop	r17
     16a:	0f 91       	pop	r16
     16c:	ff 90       	pop	r15
     16e:	ef 90       	pop	r14
     170:	08 95       	ret

00000172 <_fpadd_parts>:
     172:	a0 e0       	ldi	r26, 0x00	; 0
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	ef eb       	ldi	r30, 0xBF	; 191
     178:	f0 e0       	ldi	r31, 0x00	; 0
     17a:	0c 94 02 08 	jmp	0x1004	; 0x1004 <__prologue_saves__>
     17e:	dc 01       	movw	r26, r24
     180:	2b 01       	movw	r4, r22
     182:	fa 01       	movw	r30, r20
     184:	9c 91       	ld	r25, X
     186:	92 30       	cpi	r25, 0x02	; 2
     188:	08 f4       	brcc	.+2      	; 0x18c <_fpadd_parts+0x1a>
     18a:	39 c1       	rjmp	.+626    	; 0x3fe <_fpadd_parts+0x28c>
     18c:	eb 01       	movw	r28, r22
     18e:	88 81       	ld	r24, Y
     190:	82 30       	cpi	r24, 0x02	; 2
     192:	08 f4       	brcc	.+2      	; 0x196 <_fpadd_parts+0x24>
     194:	33 c1       	rjmp	.+614    	; 0x3fc <_fpadd_parts+0x28a>
     196:	94 30       	cpi	r25, 0x04	; 4
     198:	69 f4       	brne	.+26     	; 0x1b4 <_fpadd_parts+0x42>
     19a:	84 30       	cpi	r24, 0x04	; 4
     19c:	09 f0       	breq	.+2      	; 0x1a0 <_fpadd_parts+0x2e>
     19e:	2f c1       	rjmp	.+606    	; 0x3fe <_fpadd_parts+0x28c>
     1a0:	11 96       	adiw	r26, 0x01	; 1
     1a2:	9c 91       	ld	r25, X
     1a4:	11 97       	sbiw	r26, 0x01	; 1
     1a6:	89 81       	ldd	r24, Y+1	; 0x01
     1a8:	98 17       	cp	r25, r24
     1aa:	09 f4       	brne	.+2      	; 0x1ae <_fpadd_parts+0x3c>
     1ac:	28 c1       	rjmp	.+592    	; 0x3fe <_fpadd_parts+0x28c>
     1ae:	a0 e0       	ldi	r26, 0x00	; 0
     1b0:	b2 e0       	ldi	r27, 0x02	; 2
     1b2:	25 c1       	rjmp	.+586    	; 0x3fe <_fpadd_parts+0x28c>
     1b4:	84 30       	cpi	r24, 0x04	; 4
     1b6:	09 f4       	brne	.+2      	; 0x1ba <_fpadd_parts+0x48>
     1b8:	21 c1       	rjmp	.+578    	; 0x3fc <_fpadd_parts+0x28a>
     1ba:	82 30       	cpi	r24, 0x02	; 2
     1bc:	a9 f4       	brne	.+42     	; 0x1e8 <_fpadd_parts+0x76>
     1be:	92 30       	cpi	r25, 0x02	; 2
     1c0:	09 f0       	breq	.+2      	; 0x1c4 <_fpadd_parts+0x52>
     1c2:	1d c1       	rjmp	.+570    	; 0x3fe <_fpadd_parts+0x28c>
     1c4:	9a 01       	movw	r18, r20
     1c6:	ad 01       	movw	r20, r26
     1c8:	88 e0       	ldi	r24, 0x08	; 8
     1ca:	ea 01       	movw	r28, r20
     1cc:	09 90       	ld	r0, Y+
     1ce:	ae 01       	movw	r20, r28
     1d0:	e9 01       	movw	r28, r18
     1d2:	09 92       	st	Y+, r0
     1d4:	9e 01       	movw	r18, r28
     1d6:	81 50       	subi	r24, 0x01	; 1
     1d8:	c1 f7       	brne	.-16     	; 0x1ca <_fpadd_parts+0x58>
     1da:	e2 01       	movw	r28, r4
     1dc:	89 81       	ldd	r24, Y+1	; 0x01
     1de:	11 96       	adiw	r26, 0x01	; 1
     1e0:	9c 91       	ld	r25, X
     1e2:	89 23       	and	r24, r25
     1e4:	81 83       	std	Z+1, r24	; 0x01
     1e6:	08 c1       	rjmp	.+528    	; 0x3f8 <_fpadd_parts+0x286>
     1e8:	92 30       	cpi	r25, 0x02	; 2
     1ea:	09 f4       	brne	.+2      	; 0x1ee <_fpadd_parts+0x7c>
     1ec:	07 c1       	rjmp	.+526    	; 0x3fc <_fpadd_parts+0x28a>
     1ee:	12 96       	adiw	r26, 0x02	; 2
     1f0:	2d 90       	ld	r2, X+
     1f2:	3c 90       	ld	r3, X
     1f4:	13 97       	sbiw	r26, 0x03	; 3
     1f6:	eb 01       	movw	r28, r22
     1f8:	8a 81       	ldd	r24, Y+2	; 0x02
     1fa:	9b 81       	ldd	r25, Y+3	; 0x03
     1fc:	14 96       	adiw	r26, 0x04	; 4
     1fe:	ad 90       	ld	r10, X+
     200:	bd 90       	ld	r11, X+
     202:	cd 90       	ld	r12, X+
     204:	dc 90       	ld	r13, X
     206:	17 97       	sbiw	r26, 0x07	; 7
     208:	ec 80       	ldd	r14, Y+4	; 0x04
     20a:	fd 80       	ldd	r15, Y+5	; 0x05
     20c:	0e 81       	ldd	r16, Y+6	; 0x06
     20e:	1f 81       	ldd	r17, Y+7	; 0x07
     210:	91 01       	movw	r18, r2
     212:	28 1b       	sub	r18, r24
     214:	39 0b       	sbc	r19, r25
     216:	b9 01       	movw	r22, r18
     218:	37 ff       	sbrs	r19, 7
     21a:	04 c0       	rjmp	.+8      	; 0x224 <_fpadd_parts+0xb2>
     21c:	66 27       	eor	r22, r22
     21e:	77 27       	eor	r23, r23
     220:	62 1b       	sub	r22, r18
     222:	73 0b       	sbc	r23, r19
     224:	60 32       	cpi	r22, 0x20	; 32
     226:	71 05       	cpc	r23, r1
     228:	0c f0       	brlt	.+2      	; 0x22c <_fpadd_parts+0xba>
     22a:	61 c0       	rjmp	.+194    	; 0x2ee <_fpadd_parts+0x17c>
     22c:	12 16       	cp	r1, r18
     22e:	13 06       	cpc	r1, r19
     230:	6c f5       	brge	.+90     	; 0x28c <_fpadd_parts+0x11a>
     232:	37 01       	movw	r6, r14
     234:	48 01       	movw	r8, r16
     236:	06 2e       	mov	r0, r22
     238:	04 c0       	rjmp	.+8      	; 0x242 <_fpadd_parts+0xd0>
     23a:	96 94       	lsr	r9
     23c:	87 94       	ror	r8
     23e:	77 94       	ror	r7
     240:	67 94       	ror	r6
     242:	0a 94       	dec	r0
     244:	d2 f7       	brpl	.-12     	; 0x23a <_fpadd_parts+0xc8>
     246:	21 e0       	ldi	r18, 0x01	; 1
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	40 e0       	ldi	r20, 0x00	; 0
     24c:	50 e0       	ldi	r21, 0x00	; 0
     24e:	04 c0       	rjmp	.+8      	; 0x258 <_fpadd_parts+0xe6>
     250:	22 0f       	add	r18, r18
     252:	33 1f       	adc	r19, r19
     254:	44 1f       	adc	r20, r20
     256:	55 1f       	adc	r21, r21
     258:	6a 95       	dec	r22
     25a:	d2 f7       	brpl	.-12     	; 0x250 <_fpadd_parts+0xde>
     25c:	21 50       	subi	r18, 0x01	; 1
     25e:	30 40       	sbci	r19, 0x00	; 0
     260:	40 40       	sbci	r20, 0x00	; 0
     262:	50 40       	sbci	r21, 0x00	; 0
     264:	2e 21       	and	r18, r14
     266:	3f 21       	and	r19, r15
     268:	40 23       	and	r20, r16
     26a:	51 23       	and	r21, r17
     26c:	21 15       	cp	r18, r1
     26e:	31 05       	cpc	r19, r1
     270:	41 05       	cpc	r20, r1
     272:	51 05       	cpc	r21, r1
     274:	21 f0       	breq	.+8      	; 0x27e <_fpadd_parts+0x10c>
     276:	21 e0       	ldi	r18, 0x01	; 1
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	40 e0       	ldi	r20, 0x00	; 0
     27c:	50 e0       	ldi	r21, 0x00	; 0
     27e:	79 01       	movw	r14, r18
     280:	8a 01       	movw	r16, r20
     282:	e6 28       	or	r14, r6
     284:	f7 28       	or	r15, r7
     286:	08 29       	or	r16, r8
     288:	19 29       	or	r17, r9
     28a:	3c c0       	rjmp	.+120    	; 0x304 <_fpadd_parts+0x192>
     28c:	23 2b       	or	r18, r19
     28e:	d1 f1       	breq	.+116    	; 0x304 <_fpadd_parts+0x192>
     290:	26 0e       	add	r2, r22
     292:	37 1e       	adc	r3, r23
     294:	35 01       	movw	r6, r10
     296:	46 01       	movw	r8, r12
     298:	06 2e       	mov	r0, r22
     29a:	04 c0       	rjmp	.+8      	; 0x2a4 <_fpadd_parts+0x132>
     29c:	96 94       	lsr	r9
     29e:	87 94       	ror	r8
     2a0:	77 94       	ror	r7
     2a2:	67 94       	ror	r6
     2a4:	0a 94       	dec	r0
     2a6:	d2 f7       	brpl	.-12     	; 0x29c <_fpadd_parts+0x12a>
     2a8:	21 e0       	ldi	r18, 0x01	; 1
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	50 e0       	ldi	r21, 0x00	; 0
     2b0:	04 c0       	rjmp	.+8      	; 0x2ba <_fpadd_parts+0x148>
     2b2:	22 0f       	add	r18, r18
     2b4:	33 1f       	adc	r19, r19
     2b6:	44 1f       	adc	r20, r20
     2b8:	55 1f       	adc	r21, r21
     2ba:	6a 95       	dec	r22
     2bc:	d2 f7       	brpl	.-12     	; 0x2b2 <_fpadd_parts+0x140>
     2be:	21 50       	subi	r18, 0x01	; 1
     2c0:	30 40       	sbci	r19, 0x00	; 0
     2c2:	40 40       	sbci	r20, 0x00	; 0
     2c4:	50 40       	sbci	r21, 0x00	; 0
     2c6:	2a 21       	and	r18, r10
     2c8:	3b 21       	and	r19, r11
     2ca:	4c 21       	and	r20, r12
     2cc:	5d 21       	and	r21, r13
     2ce:	21 15       	cp	r18, r1
     2d0:	31 05       	cpc	r19, r1
     2d2:	41 05       	cpc	r20, r1
     2d4:	51 05       	cpc	r21, r1
     2d6:	21 f0       	breq	.+8      	; 0x2e0 <_fpadd_parts+0x16e>
     2d8:	21 e0       	ldi	r18, 0x01	; 1
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	40 e0       	ldi	r20, 0x00	; 0
     2de:	50 e0       	ldi	r21, 0x00	; 0
     2e0:	59 01       	movw	r10, r18
     2e2:	6a 01       	movw	r12, r20
     2e4:	a6 28       	or	r10, r6
     2e6:	b7 28       	or	r11, r7
     2e8:	c8 28       	or	r12, r8
     2ea:	d9 28       	or	r13, r9
     2ec:	0b c0       	rjmp	.+22     	; 0x304 <_fpadd_parts+0x192>
     2ee:	82 15       	cp	r24, r2
     2f0:	93 05       	cpc	r25, r3
     2f2:	2c f0       	brlt	.+10     	; 0x2fe <_fpadd_parts+0x18c>
     2f4:	1c 01       	movw	r2, r24
     2f6:	aa 24       	eor	r10, r10
     2f8:	bb 24       	eor	r11, r11
     2fa:	65 01       	movw	r12, r10
     2fc:	03 c0       	rjmp	.+6      	; 0x304 <_fpadd_parts+0x192>
     2fe:	ee 24       	eor	r14, r14
     300:	ff 24       	eor	r15, r15
     302:	87 01       	movw	r16, r14
     304:	11 96       	adiw	r26, 0x01	; 1
     306:	9c 91       	ld	r25, X
     308:	d2 01       	movw	r26, r4
     30a:	11 96       	adiw	r26, 0x01	; 1
     30c:	8c 91       	ld	r24, X
     30e:	98 17       	cp	r25, r24
     310:	09 f4       	brne	.+2      	; 0x314 <_fpadd_parts+0x1a2>
     312:	45 c0       	rjmp	.+138    	; 0x39e <_fpadd_parts+0x22c>
     314:	99 23       	and	r25, r25
     316:	39 f0       	breq	.+14     	; 0x326 <_fpadd_parts+0x1b4>
     318:	a8 01       	movw	r20, r16
     31a:	97 01       	movw	r18, r14
     31c:	2a 19       	sub	r18, r10
     31e:	3b 09       	sbc	r19, r11
     320:	4c 09       	sbc	r20, r12
     322:	5d 09       	sbc	r21, r13
     324:	06 c0       	rjmp	.+12     	; 0x332 <_fpadd_parts+0x1c0>
     326:	a6 01       	movw	r20, r12
     328:	95 01       	movw	r18, r10
     32a:	2e 19       	sub	r18, r14
     32c:	3f 09       	sbc	r19, r15
     32e:	40 0b       	sbc	r20, r16
     330:	51 0b       	sbc	r21, r17
     332:	57 fd       	sbrc	r21, 7
     334:	08 c0       	rjmp	.+16     	; 0x346 <_fpadd_parts+0x1d4>
     336:	11 82       	std	Z+1, r1	; 0x01
     338:	33 82       	std	Z+3, r3	; 0x03
     33a:	22 82       	std	Z+2, r2	; 0x02
     33c:	24 83       	std	Z+4, r18	; 0x04
     33e:	35 83       	std	Z+5, r19	; 0x05
     340:	46 83       	std	Z+6, r20	; 0x06
     342:	57 83       	std	Z+7, r21	; 0x07
     344:	1d c0       	rjmp	.+58     	; 0x380 <_fpadd_parts+0x20e>
     346:	81 e0       	ldi	r24, 0x01	; 1
     348:	81 83       	std	Z+1, r24	; 0x01
     34a:	33 82       	std	Z+3, r3	; 0x03
     34c:	22 82       	std	Z+2, r2	; 0x02
     34e:	88 27       	eor	r24, r24
     350:	99 27       	eor	r25, r25
     352:	dc 01       	movw	r26, r24
     354:	82 1b       	sub	r24, r18
     356:	93 0b       	sbc	r25, r19
     358:	a4 0b       	sbc	r26, r20
     35a:	b5 0b       	sbc	r27, r21
     35c:	84 83       	std	Z+4, r24	; 0x04
     35e:	95 83       	std	Z+5, r25	; 0x05
     360:	a6 83       	std	Z+6, r26	; 0x06
     362:	b7 83       	std	Z+7, r27	; 0x07
     364:	0d c0       	rjmp	.+26     	; 0x380 <_fpadd_parts+0x20e>
     366:	22 0f       	add	r18, r18
     368:	33 1f       	adc	r19, r19
     36a:	44 1f       	adc	r20, r20
     36c:	55 1f       	adc	r21, r21
     36e:	24 83       	std	Z+4, r18	; 0x04
     370:	35 83       	std	Z+5, r19	; 0x05
     372:	46 83       	std	Z+6, r20	; 0x06
     374:	57 83       	std	Z+7, r21	; 0x07
     376:	82 81       	ldd	r24, Z+2	; 0x02
     378:	93 81       	ldd	r25, Z+3	; 0x03
     37a:	01 97       	sbiw	r24, 0x01	; 1
     37c:	93 83       	std	Z+3, r25	; 0x03
     37e:	82 83       	std	Z+2, r24	; 0x02
     380:	24 81       	ldd	r18, Z+4	; 0x04
     382:	35 81       	ldd	r19, Z+5	; 0x05
     384:	46 81       	ldd	r20, Z+6	; 0x06
     386:	57 81       	ldd	r21, Z+7	; 0x07
     388:	da 01       	movw	r26, r20
     38a:	c9 01       	movw	r24, r18
     38c:	01 97       	sbiw	r24, 0x01	; 1
     38e:	a1 09       	sbc	r26, r1
     390:	b1 09       	sbc	r27, r1
     392:	8f 5f       	subi	r24, 0xFF	; 255
     394:	9f 4f       	sbci	r25, 0xFF	; 255
     396:	af 4f       	sbci	r26, 0xFF	; 255
     398:	bf 43       	sbci	r27, 0x3F	; 63
     39a:	28 f3       	brcs	.-54     	; 0x366 <_fpadd_parts+0x1f4>
     39c:	0b c0       	rjmp	.+22     	; 0x3b4 <_fpadd_parts+0x242>
     39e:	91 83       	std	Z+1, r25	; 0x01
     3a0:	33 82       	std	Z+3, r3	; 0x03
     3a2:	22 82       	std	Z+2, r2	; 0x02
     3a4:	ea 0c       	add	r14, r10
     3a6:	fb 1c       	adc	r15, r11
     3a8:	0c 1d       	adc	r16, r12
     3aa:	1d 1d       	adc	r17, r13
     3ac:	e4 82       	std	Z+4, r14	; 0x04
     3ae:	f5 82       	std	Z+5, r15	; 0x05
     3b0:	06 83       	std	Z+6, r16	; 0x06
     3b2:	17 83       	std	Z+7, r17	; 0x07
     3b4:	83 e0       	ldi	r24, 0x03	; 3
     3b6:	80 83       	st	Z, r24
     3b8:	24 81       	ldd	r18, Z+4	; 0x04
     3ba:	35 81       	ldd	r19, Z+5	; 0x05
     3bc:	46 81       	ldd	r20, Z+6	; 0x06
     3be:	57 81       	ldd	r21, Z+7	; 0x07
     3c0:	57 ff       	sbrs	r21, 7
     3c2:	1a c0       	rjmp	.+52     	; 0x3f8 <_fpadd_parts+0x286>
     3c4:	c9 01       	movw	r24, r18
     3c6:	aa 27       	eor	r26, r26
     3c8:	97 fd       	sbrc	r25, 7
     3ca:	a0 95       	com	r26
     3cc:	ba 2f       	mov	r27, r26
     3ce:	81 70       	andi	r24, 0x01	; 1
     3d0:	90 70       	andi	r25, 0x00	; 0
     3d2:	a0 70       	andi	r26, 0x00	; 0
     3d4:	b0 70       	andi	r27, 0x00	; 0
     3d6:	56 95       	lsr	r21
     3d8:	47 95       	ror	r20
     3da:	37 95       	ror	r19
     3dc:	27 95       	ror	r18
     3de:	82 2b       	or	r24, r18
     3e0:	93 2b       	or	r25, r19
     3e2:	a4 2b       	or	r26, r20
     3e4:	b5 2b       	or	r27, r21
     3e6:	84 83       	std	Z+4, r24	; 0x04
     3e8:	95 83       	std	Z+5, r25	; 0x05
     3ea:	a6 83       	std	Z+6, r26	; 0x06
     3ec:	b7 83       	std	Z+7, r27	; 0x07
     3ee:	82 81       	ldd	r24, Z+2	; 0x02
     3f0:	93 81       	ldd	r25, Z+3	; 0x03
     3f2:	01 96       	adiw	r24, 0x01	; 1
     3f4:	93 83       	std	Z+3, r25	; 0x03
     3f6:	82 83       	std	Z+2, r24	; 0x02
     3f8:	df 01       	movw	r26, r30
     3fa:	01 c0       	rjmp	.+2      	; 0x3fe <_fpadd_parts+0x28c>
     3fc:	d2 01       	movw	r26, r4
     3fe:	cd 01       	movw	r24, r26
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
     404:	e2 e1       	ldi	r30, 0x12	; 18
     406:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__epilogue_restores__>

0000040a <__subsf3>:
     40a:	a0 e2       	ldi	r26, 0x20	; 32
     40c:	b0 e0       	ldi	r27, 0x00	; 0
     40e:	eb e0       	ldi	r30, 0x0B	; 11
     410:	f2 e0       	ldi	r31, 0x02	; 2
     412:	0c 94 0e 08 	jmp	0x101c	; 0x101c <__prologue_saves__+0x18>
     416:	69 83       	std	Y+1, r22	; 0x01
     418:	7a 83       	std	Y+2, r23	; 0x02
     41a:	8b 83       	std	Y+3, r24	; 0x03
     41c:	9c 83       	std	Y+4, r25	; 0x04
     41e:	2d 83       	std	Y+5, r18	; 0x05
     420:	3e 83       	std	Y+6, r19	; 0x06
     422:	4f 83       	std	Y+7, r20	; 0x07
     424:	58 87       	std	Y+8, r21	; 0x08
     426:	e9 e0       	ldi	r30, 0x09	; 9
     428:	ee 2e       	mov	r14, r30
     42a:	f1 2c       	mov	r15, r1
     42c:	ec 0e       	add	r14, r28
     42e:	fd 1e       	adc	r15, r29
     430:	ce 01       	movw	r24, r28
     432:	01 96       	adiw	r24, 0x01	; 1
     434:	b7 01       	movw	r22, r14
     436:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     43a:	8e 01       	movw	r16, r28
     43c:	0f 5e       	subi	r16, 0xEF	; 239
     43e:	1f 4f       	sbci	r17, 0xFF	; 255
     440:	ce 01       	movw	r24, r28
     442:	05 96       	adiw	r24, 0x05	; 5
     444:	b8 01       	movw	r22, r16
     446:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     44a:	8a 89       	ldd	r24, Y+18	; 0x12
     44c:	91 e0       	ldi	r25, 0x01	; 1
     44e:	89 27       	eor	r24, r25
     450:	8a 8b       	std	Y+18, r24	; 0x12
     452:	c7 01       	movw	r24, r14
     454:	b8 01       	movw	r22, r16
     456:	ae 01       	movw	r20, r28
     458:	47 5e       	subi	r20, 0xE7	; 231
     45a:	5f 4f       	sbci	r21, 0xFF	; 255
     45c:	0e 94 b9 00 	call	0x172	; 0x172 <_fpadd_parts>
     460:	0e 94 41 04 	call	0x882	; 0x882 <__pack_f>
     464:	a0 96       	adiw	r28, 0x20	; 32
     466:	e6 e0       	ldi	r30, 0x06	; 6
     468:	0c 94 2a 08 	jmp	0x1054	; 0x1054 <__epilogue_restores__+0x18>

0000046c <__addsf3>:
     46c:	a0 e2       	ldi	r26, 0x20	; 32
     46e:	b0 e0       	ldi	r27, 0x00	; 0
     470:	ec e3       	ldi	r30, 0x3C	; 60
     472:	f2 e0       	ldi	r31, 0x02	; 2
     474:	0c 94 0e 08 	jmp	0x101c	; 0x101c <__prologue_saves__+0x18>
     478:	69 83       	std	Y+1, r22	; 0x01
     47a:	7a 83       	std	Y+2, r23	; 0x02
     47c:	8b 83       	std	Y+3, r24	; 0x03
     47e:	9c 83       	std	Y+4, r25	; 0x04
     480:	2d 83       	std	Y+5, r18	; 0x05
     482:	3e 83       	std	Y+6, r19	; 0x06
     484:	4f 83       	std	Y+7, r20	; 0x07
     486:	58 87       	std	Y+8, r21	; 0x08
     488:	f9 e0       	ldi	r31, 0x09	; 9
     48a:	ef 2e       	mov	r14, r31
     48c:	f1 2c       	mov	r15, r1
     48e:	ec 0e       	add	r14, r28
     490:	fd 1e       	adc	r15, r29
     492:	ce 01       	movw	r24, r28
     494:	01 96       	adiw	r24, 0x01	; 1
     496:	b7 01       	movw	r22, r14
     498:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     49c:	8e 01       	movw	r16, r28
     49e:	0f 5e       	subi	r16, 0xEF	; 239
     4a0:	1f 4f       	sbci	r17, 0xFF	; 255
     4a2:	ce 01       	movw	r24, r28
     4a4:	05 96       	adiw	r24, 0x05	; 5
     4a6:	b8 01       	movw	r22, r16
     4a8:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     4ac:	c7 01       	movw	r24, r14
     4ae:	b8 01       	movw	r22, r16
     4b0:	ae 01       	movw	r20, r28
     4b2:	47 5e       	subi	r20, 0xE7	; 231
     4b4:	5f 4f       	sbci	r21, 0xFF	; 255
     4b6:	0e 94 b9 00 	call	0x172	; 0x172 <_fpadd_parts>
     4ba:	0e 94 41 04 	call	0x882	; 0x882 <__pack_f>
     4be:	a0 96       	adiw	r28, 0x20	; 32
     4c0:	e6 e0       	ldi	r30, 0x06	; 6
     4c2:	0c 94 2a 08 	jmp	0x1054	; 0x1054 <__epilogue_restores__+0x18>

000004c6 <__mulsf3>:
     4c6:	a0 e2       	ldi	r26, 0x20	; 32
     4c8:	b0 e0       	ldi	r27, 0x00	; 0
     4ca:	e9 e6       	ldi	r30, 0x69	; 105
     4cc:	f2 e0       	ldi	r31, 0x02	; 2
     4ce:	0c 94 02 08 	jmp	0x1004	; 0x1004 <__prologue_saves__>
     4d2:	69 83       	std	Y+1, r22	; 0x01
     4d4:	7a 83       	std	Y+2, r23	; 0x02
     4d6:	8b 83       	std	Y+3, r24	; 0x03
     4d8:	9c 83       	std	Y+4, r25	; 0x04
     4da:	2d 83       	std	Y+5, r18	; 0x05
     4dc:	3e 83       	std	Y+6, r19	; 0x06
     4de:	4f 83       	std	Y+7, r20	; 0x07
     4e0:	58 87       	std	Y+8, r21	; 0x08
     4e2:	ce 01       	movw	r24, r28
     4e4:	01 96       	adiw	r24, 0x01	; 1
     4e6:	be 01       	movw	r22, r28
     4e8:	67 5f       	subi	r22, 0xF7	; 247
     4ea:	7f 4f       	sbci	r23, 0xFF	; 255
     4ec:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     4f0:	ce 01       	movw	r24, r28
     4f2:	05 96       	adiw	r24, 0x05	; 5
     4f4:	be 01       	movw	r22, r28
     4f6:	6f 5e       	subi	r22, 0xEF	; 239
     4f8:	7f 4f       	sbci	r23, 0xFF	; 255
     4fa:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     4fe:	99 85       	ldd	r25, Y+9	; 0x09
     500:	92 30       	cpi	r25, 0x02	; 2
     502:	88 f0       	brcs	.+34     	; 0x526 <__mulsf3+0x60>
     504:	89 89       	ldd	r24, Y+17	; 0x11
     506:	82 30       	cpi	r24, 0x02	; 2
     508:	c8 f0       	brcs	.+50     	; 0x53c <__mulsf3+0x76>
     50a:	94 30       	cpi	r25, 0x04	; 4
     50c:	19 f4       	brne	.+6      	; 0x514 <__mulsf3+0x4e>
     50e:	82 30       	cpi	r24, 0x02	; 2
     510:	51 f4       	brne	.+20     	; 0x526 <__mulsf3+0x60>
     512:	04 c0       	rjmp	.+8      	; 0x51c <__mulsf3+0x56>
     514:	84 30       	cpi	r24, 0x04	; 4
     516:	29 f4       	brne	.+10     	; 0x522 <__mulsf3+0x5c>
     518:	92 30       	cpi	r25, 0x02	; 2
     51a:	81 f4       	brne	.+32     	; 0x53c <__mulsf3+0x76>
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	92 e0       	ldi	r25, 0x02	; 2
     520:	c6 c0       	rjmp	.+396    	; 0x6ae <__mulsf3+0x1e8>
     522:	92 30       	cpi	r25, 0x02	; 2
     524:	49 f4       	brne	.+18     	; 0x538 <__mulsf3+0x72>
     526:	20 e0       	ldi	r18, 0x00	; 0
     528:	9a 85       	ldd	r25, Y+10	; 0x0a
     52a:	8a 89       	ldd	r24, Y+18	; 0x12
     52c:	98 13       	cpse	r25, r24
     52e:	21 e0       	ldi	r18, 0x01	; 1
     530:	2a 87       	std	Y+10, r18	; 0x0a
     532:	ce 01       	movw	r24, r28
     534:	09 96       	adiw	r24, 0x09	; 9
     536:	bb c0       	rjmp	.+374    	; 0x6ae <__mulsf3+0x1e8>
     538:	82 30       	cpi	r24, 0x02	; 2
     53a:	49 f4       	brne	.+18     	; 0x54e <__mulsf3+0x88>
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	9a 85       	ldd	r25, Y+10	; 0x0a
     540:	8a 89       	ldd	r24, Y+18	; 0x12
     542:	98 13       	cpse	r25, r24
     544:	21 e0       	ldi	r18, 0x01	; 1
     546:	2a 8b       	std	Y+18, r18	; 0x12
     548:	ce 01       	movw	r24, r28
     54a:	41 96       	adiw	r24, 0x11	; 17
     54c:	b0 c0       	rjmp	.+352    	; 0x6ae <__mulsf3+0x1e8>
     54e:	2d 84       	ldd	r2, Y+13	; 0x0d
     550:	3e 84       	ldd	r3, Y+14	; 0x0e
     552:	4f 84       	ldd	r4, Y+15	; 0x0f
     554:	58 88       	ldd	r5, Y+16	; 0x10
     556:	6d 88       	ldd	r6, Y+21	; 0x15
     558:	7e 88       	ldd	r7, Y+22	; 0x16
     55a:	8f 88       	ldd	r8, Y+23	; 0x17
     55c:	98 8c       	ldd	r9, Y+24	; 0x18
     55e:	ee 24       	eor	r14, r14
     560:	ff 24       	eor	r15, r15
     562:	87 01       	movw	r16, r14
     564:	aa 24       	eor	r10, r10
     566:	bb 24       	eor	r11, r11
     568:	65 01       	movw	r12, r10
     56a:	40 e0       	ldi	r20, 0x00	; 0
     56c:	50 e0       	ldi	r21, 0x00	; 0
     56e:	60 e0       	ldi	r22, 0x00	; 0
     570:	70 e0       	ldi	r23, 0x00	; 0
     572:	e0 e0       	ldi	r30, 0x00	; 0
     574:	f0 e0       	ldi	r31, 0x00	; 0
     576:	c1 01       	movw	r24, r2
     578:	81 70       	andi	r24, 0x01	; 1
     57a:	90 70       	andi	r25, 0x00	; 0
     57c:	89 2b       	or	r24, r25
     57e:	e9 f0       	breq	.+58     	; 0x5ba <__mulsf3+0xf4>
     580:	e6 0c       	add	r14, r6
     582:	f7 1c       	adc	r15, r7
     584:	08 1d       	adc	r16, r8
     586:	19 1d       	adc	r17, r9
     588:	9a 01       	movw	r18, r20
     58a:	ab 01       	movw	r20, r22
     58c:	2a 0d       	add	r18, r10
     58e:	3b 1d       	adc	r19, r11
     590:	4c 1d       	adc	r20, r12
     592:	5d 1d       	adc	r21, r13
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	a0 e0       	ldi	r26, 0x00	; 0
     59a:	b0 e0       	ldi	r27, 0x00	; 0
     59c:	e6 14       	cp	r14, r6
     59e:	f7 04       	cpc	r15, r7
     5a0:	08 05       	cpc	r16, r8
     5a2:	19 05       	cpc	r17, r9
     5a4:	20 f4       	brcc	.+8      	; 0x5ae <__mulsf3+0xe8>
     5a6:	81 e0       	ldi	r24, 0x01	; 1
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	a0 e0       	ldi	r26, 0x00	; 0
     5ac:	b0 e0       	ldi	r27, 0x00	; 0
     5ae:	ba 01       	movw	r22, r20
     5b0:	a9 01       	movw	r20, r18
     5b2:	48 0f       	add	r20, r24
     5b4:	59 1f       	adc	r21, r25
     5b6:	6a 1f       	adc	r22, r26
     5b8:	7b 1f       	adc	r23, r27
     5ba:	aa 0c       	add	r10, r10
     5bc:	bb 1c       	adc	r11, r11
     5be:	cc 1c       	adc	r12, r12
     5c0:	dd 1c       	adc	r13, r13
     5c2:	97 fe       	sbrs	r9, 7
     5c4:	08 c0       	rjmp	.+16     	; 0x5d6 <__mulsf3+0x110>
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	a0 e0       	ldi	r26, 0x00	; 0
     5cc:	b0 e0       	ldi	r27, 0x00	; 0
     5ce:	a8 2a       	or	r10, r24
     5d0:	b9 2a       	or	r11, r25
     5d2:	ca 2a       	or	r12, r26
     5d4:	db 2a       	or	r13, r27
     5d6:	31 96       	adiw	r30, 0x01	; 1
     5d8:	e0 32       	cpi	r30, 0x20	; 32
     5da:	f1 05       	cpc	r31, r1
     5dc:	49 f0       	breq	.+18     	; 0x5f0 <__mulsf3+0x12a>
     5de:	66 0c       	add	r6, r6
     5e0:	77 1c       	adc	r7, r7
     5e2:	88 1c       	adc	r8, r8
     5e4:	99 1c       	adc	r9, r9
     5e6:	56 94       	lsr	r5
     5e8:	47 94       	ror	r4
     5ea:	37 94       	ror	r3
     5ec:	27 94       	ror	r2
     5ee:	c3 cf       	rjmp	.-122    	; 0x576 <__mulsf3+0xb0>
     5f0:	fa 85       	ldd	r31, Y+10	; 0x0a
     5f2:	ea 89       	ldd	r30, Y+18	; 0x12
     5f4:	2b 89       	ldd	r18, Y+19	; 0x13
     5f6:	3c 89       	ldd	r19, Y+20	; 0x14
     5f8:	8b 85       	ldd	r24, Y+11	; 0x0b
     5fa:	9c 85       	ldd	r25, Y+12	; 0x0c
     5fc:	28 0f       	add	r18, r24
     5fe:	39 1f       	adc	r19, r25
     600:	2e 5f       	subi	r18, 0xFE	; 254
     602:	3f 4f       	sbci	r19, 0xFF	; 255
     604:	17 c0       	rjmp	.+46     	; 0x634 <__mulsf3+0x16e>
     606:	ca 01       	movw	r24, r20
     608:	81 70       	andi	r24, 0x01	; 1
     60a:	90 70       	andi	r25, 0x00	; 0
     60c:	89 2b       	or	r24, r25
     60e:	61 f0       	breq	.+24     	; 0x628 <__mulsf3+0x162>
     610:	16 95       	lsr	r17
     612:	07 95       	ror	r16
     614:	f7 94       	ror	r15
     616:	e7 94       	ror	r14
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	a0 e0       	ldi	r26, 0x00	; 0
     61e:	b0 e8       	ldi	r27, 0x80	; 128
     620:	e8 2a       	or	r14, r24
     622:	f9 2a       	or	r15, r25
     624:	0a 2b       	or	r16, r26
     626:	1b 2b       	or	r17, r27
     628:	76 95       	lsr	r23
     62a:	67 95       	ror	r22
     62c:	57 95       	ror	r21
     62e:	47 95       	ror	r20
     630:	2f 5f       	subi	r18, 0xFF	; 255
     632:	3f 4f       	sbci	r19, 0xFF	; 255
     634:	77 fd       	sbrc	r23, 7
     636:	e7 cf       	rjmp	.-50     	; 0x606 <__mulsf3+0x140>
     638:	0c c0       	rjmp	.+24     	; 0x652 <__mulsf3+0x18c>
     63a:	44 0f       	add	r20, r20
     63c:	55 1f       	adc	r21, r21
     63e:	66 1f       	adc	r22, r22
     640:	77 1f       	adc	r23, r23
     642:	17 fd       	sbrc	r17, 7
     644:	41 60       	ori	r20, 0x01	; 1
     646:	ee 0c       	add	r14, r14
     648:	ff 1c       	adc	r15, r15
     64a:	00 1f       	adc	r16, r16
     64c:	11 1f       	adc	r17, r17
     64e:	21 50       	subi	r18, 0x01	; 1
     650:	30 40       	sbci	r19, 0x00	; 0
     652:	40 30       	cpi	r20, 0x00	; 0
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	59 07       	cpc	r21, r25
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	69 07       	cpc	r22, r25
     65c:	90 e4       	ldi	r25, 0x40	; 64
     65e:	79 07       	cpc	r23, r25
     660:	60 f3       	brcs	.-40     	; 0x63a <__mulsf3+0x174>
     662:	2b 8f       	std	Y+27, r18	; 0x1b
     664:	3c 8f       	std	Y+28, r19	; 0x1c
     666:	db 01       	movw	r26, r22
     668:	ca 01       	movw	r24, r20
     66a:	8f 77       	andi	r24, 0x7F	; 127
     66c:	90 70       	andi	r25, 0x00	; 0
     66e:	a0 70       	andi	r26, 0x00	; 0
     670:	b0 70       	andi	r27, 0x00	; 0
     672:	80 34       	cpi	r24, 0x40	; 64
     674:	91 05       	cpc	r25, r1
     676:	a1 05       	cpc	r26, r1
     678:	b1 05       	cpc	r27, r1
     67a:	61 f4       	brne	.+24     	; 0x694 <__mulsf3+0x1ce>
     67c:	47 fd       	sbrc	r20, 7
     67e:	0a c0       	rjmp	.+20     	; 0x694 <__mulsf3+0x1ce>
     680:	e1 14       	cp	r14, r1
     682:	f1 04       	cpc	r15, r1
     684:	01 05       	cpc	r16, r1
     686:	11 05       	cpc	r17, r1
     688:	29 f0       	breq	.+10     	; 0x694 <__mulsf3+0x1ce>
     68a:	40 5c       	subi	r20, 0xC0	; 192
     68c:	5f 4f       	sbci	r21, 0xFF	; 255
     68e:	6f 4f       	sbci	r22, 0xFF	; 255
     690:	7f 4f       	sbci	r23, 0xFF	; 255
     692:	40 78       	andi	r20, 0x80	; 128
     694:	1a 8e       	std	Y+26, r1	; 0x1a
     696:	fe 17       	cp	r31, r30
     698:	11 f0       	breq	.+4      	; 0x69e <__mulsf3+0x1d8>
     69a:	81 e0       	ldi	r24, 0x01	; 1
     69c:	8a 8f       	std	Y+26, r24	; 0x1a
     69e:	4d 8f       	std	Y+29, r20	; 0x1d
     6a0:	5e 8f       	std	Y+30, r21	; 0x1e
     6a2:	6f 8f       	std	Y+31, r22	; 0x1f
     6a4:	78 a3       	std	Y+32, r23	; 0x20
     6a6:	83 e0       	ldi	r24, 0x03	; 3
     6a8:	89 8f       	std	Y+25, r24	; 0x19
     6aa:	ce 01       	movw	r24, r28
     6ac:	49 96       	adiw	r24, 0x19	; 25
     6ae:	0e 94 41 04 	call	0x882	; 0x882 <__pack_f>
     6b2:	a0 96       	adiw	r28, 0x20	; 32
     6b4:	e2 e1       	ldi	r30, 0x12	; 18
     6b6:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__epilogue_restores__>

000006ba <__gtsf2>:
     6ba:	a8 e1       	ldi	r26, 0x18	; 24
     6bc:	b0 e0       	ldi	r27, 0x00	; 0
     6be:	e3 e6       	ldi	r30, 0x63	; 99
     6c0:	f3 e0       	ldi	r31, 0x03	; 3
     6c2:	0c 94 0e 08 	jmp	0x101c	; 0x101c <__prologue_saves__+0x18>
     6c6:	69 83       	std	Y+1, r22	; 0x01
     6c8:	7a 83       	std	Y+2, r23	; 0x02
     6ca:	8b 83       	std	Y+3, r24	; 0x03
     6cc:	9c 83       	std	Y+4, r25	; 0x04
     6ce:	2d 83       	std	Y+5, r18	; 0x05
     6d0:	3e 83       	std	Y+6, r19	; 0x06
     6d2:	4f 83       	std	Y+7, r20	; 0x07
     6d4:	58 87       	std	Y+8, r21	; 0x08
     6d6:	89 e0       	ldi	r24, 0x09	; 9
     6d8:	e8 2e       	mov	r14, r24
     6da:	f1 2c       	mov	r15, r1
     6dc:	ec 0e       	add	r14, r28
     6de:	fd 1e       	adc	r15, r29
     6e0:	ce 01       	movw	r24, r28
     6e2:	01 96       	adiw	r24, 0x01	; 1
     6e4:	b7 01       	movw	r22, r14
     6e6:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     6ea:	8e 01       	movw	r16, r28
     6ec:	0f 5e       	subi	r16, 0xEF	; 239
     6ee:	1f 4f       	sbci	r17, 0xFF	; 255
     6f0:	ce 01       	movw	r24, r28
     6f2:	05 96       	adiw	r24, 0x05	; 5
     6f4:	b8 01       	movw	r22, r16
     6f6:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     6fa:	89 85       	ldd	r24, Y+9	; 0x09
     6fc:	82 30       	cpi	r24, 0x02	; 2
     6fe:	40 f0       	brcs	.+16     	; 0x710 <__gtsf2+0x56>
     700:	89 89       	ldd	r24, Y+17	; 0x11
     702:	82 30       	cpi	r24, 0x02	; 2
     704:	28 f0       	brcs	.+10     	; 0x710 <__gtsf2+0x56>
     706:	c7 01       	movw	r24, r14
     708:	b8 01       	movw	r22, r16
     70a:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__fpcmp_parts_f>
     70e:	01 c0       	rjmp	.+2      	; 0x712 <__gtsf2+0x58>
     710:	8f ef       	ldi	r24, 0xFF	; 255
     712:	68 96       	adiw	r28, 0x18	; 24
     714:	e6 e0       	ldi	r30, 0x06	; 6
     716:	0c 94 2a 08 	jmp	0x1054	; 0x1054 <__epilogue_restores__+0x18>

0000071a <__gesf2>:
     71a:	a8 e1       	ldi	r26, 0x18	; 24
     71c:	b0 e0       	ldi	r27, 0x00	; 0
     71e:	e3 e9       	ldi	r30, 0x93	; 147
     720:	f3 e0       	ldi	r31, 0x03	; 3
     722:	0c 94 0e 08 	jmp	0x101c	; 0x101c <__prologue_saves__+0x18>
     726:	69 83       	std	Y+1, r22	; 0x01
     728:	7a 83       	std	Y+2, r23	; 0x02
     72a:	8b 83       	std	Y+3, r24	; 0x03
     72c:	9c 83       	std	Y+4, r25	; 0x04
     72e:	2d 83       	std	Y+5, r18	; 0x05
     730:	3e 83       	std	Y+6, r19	; 0x06
     732:	4f 83       	std	Y+7, r20	; 0x07
     734:	58 87       	std	Y+8, r21	; 0x08
     736:	89 e0       	ldi	r24, 0x09	; 9
     738:	e8 2e       	mov	r14, r24
     73a:	f1 2c       	mov	r15, r1
     73c:	ec 0e       	add	r14, r28
     73e:	fd 1e       	adc	r15, r29
     740:	ce 01       	movw	r24, r28
     742:	01 96       	adiw	r24, 0x01	; 1
     744:	b7 01       	movw	r22, r14
     746:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     74a:	8e 01       	movw	r16, r28
     74c:	0f 5e       	subi	r16, 0xEF	; 239
     74e:	1f 4f       	sbci	r17, 0xFF	; 255
     750:	ce 01       	movw	r24, r28
     752:	05 96       	adiw	r24, 0x05	; 5
     754:	b8 01       	movw	r22, r16
     756:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     75a:	89 85       	ldd	r24, Y+9	; 0x09
     75c:	82 30       	cpi	r24, 0x02	; 2
     75e:	40 f0       	brcs	.+16     	; 0x770 <__gesf2+0x56>
     760:	89 89       	ldd	r24, Y+17	; 0x11
     762:	82 30       	cpi	r24, 0x02	; 2
     764:	28 f0       	brcs	.+10     	; 0x770 <__gesf2+0x56>
     766:	c7 01       	movw	r24, r14
     768:	b8 01       	movw	r22, r16
     76a:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__fpcmp_parts_f>
     76e:	01 c0       	rjmp	.+2      	; 0x772 <__gesf2+0x58>
     770:	8f ef       	ldi	r24, 0xFF	; 255
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	e6 e0       	ldi	r30, 0x06	; 6
     776:	0c 94 2a 08 	jmp	0x1054	; 0x1054 <__epilogue_restores__+0x18>

0000077a <__ltsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 0e 08 	jmp	0x101c	; 0x101c <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__ltsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__ltsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__ltsf2+0x58>
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 2a 08 	jmp	0x1054	; 0x1054 <__epilogue_restores__+0x18>

000007da <__fixsfsi>:
     7da:	ac e0       	ldi	r26, 0x0C	; 12
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 12 08 	jmp	0x1024	; 0x1024 <__prologue_saves__+0x20>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	ce 01       	movw	r24, r28
     7f0:	01 96       	adiw	r24, 0x01	; 1
     7f2:	be 01       	movw	r22, r28
     7f4:	6b 5f       	subi	r22, 0xFB	; 251
     7f6:	7f 4f       	sbci	r23, 0xFF	; 255
     7f8:	0e 94 16 05 	call	0xa2c	; 0xa2c <__unpack_f>
     7fc:	8d 81       	ldd	r24, Y+5	; 0x05
     7fe:	82 30       	cpi	r24, 0x02	; 2
     800:	61 f1       	breq	.+88     	; 0x85a <__fixsfsi+0x80>
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	50 f1       	brcs	.+84     	; 0x85a <__fixsfsi+0x80>
     806:	84 30       	cpi	r24, 0x04	; 4
     808:	21 f4       	brne	.+8      	; 0x812 <__fixsfsi+0x38>
     80a:	8e 81       	ldd	r24, Y+6	; 0x06
     80c:	88 23       	and	r24, r24
     80e:	51 f1       	breq	.+84     	; 0x864 <__fixsfsi+0x8a>
     810:	2e c0       	rjmp	.+92     	; 0x86e <__fixsfsi+0x94>
     812:	2f 81       	ldd	r18, Y+7	; 0x07
     814:	38 85       	ldd	r19, Y+8	; 0x08
     816:	37 fd       	sbrc	r19, 7
     818:	20 c0       	rjmp	.+64     	; 0x85a <__fixsfsi+0x80>
     81a:	6e 81       	ldd	r22, Y+6	; 0x06
     81c:	2f 31       	cpi	r18, 0x1F	; 31
     81e:	31 05       	cpc	r19, r1
     820:	1c f0       	brlt	.+6      	; 0x828 <__fixsfsi+0x4e>
     822:	66 23       	and	r22, r22
     824:	f9 f0       	breq	.+62     	; 0x864 <__fixsfsi+0x8a>
     826:	23 c0       	rjmp	.+70     	; 0x86e <__fixsfsi+0x94>
     828:	8e e1       	ldi	r24, 0x1E	; 30
     82a:	90 e0       	ldi	r25, 0x00	; 0
     82c:	82 1b       	sub	r24, r18
     82e:	93 0b       	sbc	r25, r19
     830:	29 85       	ldd	r18, Y+9	; 0x09
     832:	3a 85       	ldd	r19, Y+10	; 0x0a
     834:	4b 85       	ldd	r20, Y+11	; 0x0b
     836:	5c 85       	ldd	r21, Y+12	; 0x0c
     838:	04 c0       	rjmp	.+8      	; 0x842 <__fixsfsi+0x68>
     83a:	56 95       	lsr	r21
     83c:	47 95       	ror	r20
     83e:	37 95       	ror	r19
     840:	27 95       	ror	r18
     842:	8a 95       	dec	r24
     844:	d2 f7       	brpl	.-12     	; 0x83a <__fixsfsi+0x60>
     846:	66 23       	and	r22, r22
     848:	b1 f0       	breq	.+44     	; 0x876 <__fixsfsi+0x9c>
     84a:	50 95       	com	r21
     84c:	40 95       	com	r20
     84e:	30 95       	com	r19
     850:	21 95       	neg	r18
     852:	3f 4f       	sbci	r19, 0xFF	; 255
     854:	4f 4f       	sbci	r20, 0xFF	; 255
     856:	5f 4f       	sbci	r21, 0xFF	; 255
     858:	0e c0       	rjmp	.+28     	; 0x876 <__fixsfsi+0x9c>
     85a:	20 e0       	ldi	r18, 0x00	; 0
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	40 e0       	ldi	r20, 0x00	; 0
     860:	50 e0       	ldi	r21, 0x00	; 0
     862:	09 c0       	rjmp	.+18     	; 0x876 <__fixsfsi+0x9c>
     864:	2f ef       	ldi	r18, 0xFF	; 255
     866:	3f ef       	ldi	r19, 0xFF	; 255
     868:	4f ef       	ldi	r20, 0xFF	; 255
     86a:	5f e7       	ldi	r21, 0x7F	; 127
     86c:	04 c0       	rjmp	.+8      	; 0x876 <__fixsfsi+0x9c>
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	40 e0       	ldi	r20, 0x00	; 0
     874:	50 e8       	ldi	r21, 0x80	; 128
     876:	b9 01       	movw	r22, r18
     878:	ca 01       	movw	r24, r20
     87a:	2c 96       	adiw	r28, 0x0c	; 12
     87c:	e2 e0       	ldi	r30, 0x02	; 2
     87e:	0c 94 2e 08 	jmp	0x105c	; 0x105c <__epilogue_restores__+0x20>

00000882 <__pack_f>:
     882:	df 92       	push	r13
     884:	ef 92       	push	r14
     886:	ff 92       	push	r15
     888:	0f 93       	push	r16
     88a:	1f 93       	push	r17
     88c:	fc 01       	movw	r30, r24
     88e:	e4 80       	ldd	r14, Z+4	; 0x04
     890:	f5 80       	ldd	r15, Z+5	; 0x05
     892:	06 81       	ldd	r16, Z+6	; 0x06
     894:	17 81       	ldd	r17, Z+7	; 0x07
     896:	d1 80       	ldd	r13, Z+1	; 0x01
     898:	80 81       	ld	r24, Z
     89a:	82 30       	cpi	r24, 0x02	; 2
     89c:	48 f4       	brcc	.+18     	; 0x8b0 <__pack_f+0x2e>
     89e:	80 e0       	ldi	r24, 0x00	; 0
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	a0 e1       	ldi	r26, 0x10	; 16
     8a4:	b0 e0       	ldi	r27, 0x00	; 0
     8a6:	e8 2a       	or	r14, r24
     8a8:	f9 2a       	or	r15, r25
     8aa:	0a 2b       	or	r16, r26
     8ac:	1b 2b       	or	r17, r27
     8ae:	a5 c0       	rjmp	.+330    	; 0x9fa <__pack_f+0x178>
     8b0:	84 30       	cpi	r24, 0x04	; 4
     8b2:	09 f4       	brne	.+2      	; 0x8b6 <__pack_f+0x34>
     8b4:	9f c0       	rjmp	.+318    	; 0x9f4 <__pack_f+0x172>
     8b6:	82 30       	cpi	r24, 0x02	; 2
     8b8:	21 f4       	brne	.+8      	; 0x8c2 <__pack_f+0x40>
     8ba:	ee 24       	eor	r14, r14
     8bc:	ff 24       	eor	r15, r15
     8be:	87 01       	movw	r16, r14
     8c0:	05 c0       	rjmp	.+10     	; 0x8cc <__pack_f+0x4a>
     8c2:	e1 14       	cp	r14, r1
     8c4:	f1 04       	cpc	r15, r1
     8c6:	01 05       	cpc	r16, r1
     8c8:	11 05       	cpc	r17, r1
     8ca:	19 f4       	brne	.+6      	; 0x8d2 <__pack_f+0x50>
     8cc:	e0 e0       	ldi	r30, 0x00	; 0
     8ce:	f0 e0       	ldi	r31, 0x00	; 0
     8d0:	96 c0       	rjmp	.+300    	; 0x9fe <__pack_f+0x17c>
     8d2:	62 81       	ldd	r22, Z+2	; 0x02
     8d4:	73 81       	ldd	r23, Z+3	; 0x03
     8d6:	9f ef       	ldi	r25, 0xFF	; 255
     8d8:	62 38       	cpi	r22, 0x82	; 130
     8da:	79 07       	cpc	r23, r25
     8dc:	0c f0       	brlt	.+2      	; 0x8e0 <__pack_f+0x5e>
     8de:	5b c0       	rjmp	.+182    	; 0x996 <__pack_f+0x114>
     8e0:	22 e8       	ldi	r18, 0x82	; 130
     8e2:	3f ef       	ldi	r19, 0xFF	; 255
     8e4:	26 1b       	sub	r18, r22
     8e6:	37 0b       	sbc	r19, r23
     8e8:	2a 31       	cpi	r18, 0x1A	; 26
     8ea:	31 05       	cpc	r19, r1
     8ec:	2c f0       	brlt	.+10     	; 0x8f8 <__pack_f+0x76>
     8ee:	20 e0       	ldi	r18, 0x00	; 0
     8f0:	30 e0       	ldi	r19, 0x00	; 0
     8f2:	40 e0       	ldi	r20, 0x00	; 0
     8f4:	50 e0       	ldi	r21, 0x00	; 0
     8f6:	2a c0       	rjmp	.+84     	; 0x94c <__pack_f+0xca>
     8f8:	b8 01       	movw	r22, r16
     8fa:	a7 01       	movw	r20, r14
     8fc:	02 2e       	mov	r0, r18
     8fe:	04 c0       	rjmp	.+8      	; 0x908 <__pack_f+0x86>
     900:	76 95       	lsr	r23
     902:	67 95       	ror	r22
     904:	57 95       	ror	r21
     906:	47 95       	ror	r20
     908:	0a 94       	dec	r0
     90a:	d2 f7       	brpl	.-12     	; 0x900 <__pack_f+0x7e>
     90c:	81 e0       	ldi	r24, 0x01	; 1
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	a0 e0       	ldi	r26, 0x00	; 0
     912:	b0 e0       	ldi	r27, 0x00	; 0
     914:	04 c0       	rjmp	.+8      	; 0x91e <__pack_f+0x9c>
     916:	88 0f       	add	r24, r24
     918:	99 1f       	adc	r25, r25
     91a:	aa 1f       	adc	r26, r26
     91c:	bb 1f       	adc	r27, r27
     91e:	2a 95       	dec	r18
     920:	d2 f7       	brpl	.-12     	; 0x916 <__pack_f+0x94>
     922:	01 97       	sbiw	r24, 0x01	; 1
     924:	a1 09       	sbc	r26, r1
     926:	b1 09       	sbc	r27, r1
     928:	8e 21       	and	r24, r14
     92a:	9f 21       	and	r25, r15
     92c:	a0 23       	and	r26, r16
     92e:	b1 23       	and	r27, r17
     930:	00 97       	sbiw	r24, 0x00	; 0
     932:	a1 05       	cpc	r26, r1
     934:	b1 05       	cpc	r27, r1
     936:	21 f0       	breq	.+8      	; 0x940 <__pack_f+0xbe>
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	a0 e0       	ldi	r26, 0x00	; 0
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	9a 01       	movw	r18, r20
     942:	ab 01       	movw	r20, r22
     944:	28 2b       	or	r18, r24
     946:	39 2b       	or	r19, r25
     948:	4a 2b       	or	r20, r26
     94a:	5b 2b       	or	r21, r27
     94c:	da 01       	movw	r26, r20
     94e:	c9 01       	movw	r24, r18
     950:	8f 77       	andi	r24, 0x7F	; 127
     952:	90 70       	andi	r25, 0x00	; 0
     954:	a0 70       	andi	r26, 0x00	; 0
     956:	b0 70       	andi	r27, 0x00	; 0
     958:	80 34       	cpi	r24, 0x40	; 64
     95a:	91 05       	cpc	r25, r1
     95c:	a1 05       	cpc	r26, r1
     95e:	b1 05       	cpc	r27, r1
     960:	39 f4       	brne	.+14     	; 0x970 <__pack_f+0xee>
     962:	27 ff       	sbrs	r18, 7
     964:	09 c0       	rjmp	.+18     	; 0x978 <__pack_f+0xf6>
     966:	20 5c       	subi	r18, 0xC0	; 192
     968:	3f 4f       	sbci	r19, 0xFF	; 255
     96a:	4f 4f       	sbci	r20, 0xFF	; 255
     96c:	5f 4f       	sbci	r21, 0xFF	; 255
     96e:	04 c0       	rjmp	.+8      	; 0x978 <__pack_f+0xf6>
     970:	21 5c       	subi	r18, 0xC1	; 193
     972:	3f 4f       	sbci	r19, 0xFF	; 255
     974:	4f 4f       	sbci	r20, 0xFF	; 255
     976:	5f 4f       	sbci	r21, 0xFF	; 255
     978:	e0 e0       	ldi	r30, 0x00	; 0
     97a:	f0 e0       	ldi	r31, 0x00	; 0
     97c:	20 30       	cpi	r18, 0x00	; 0
     97e:	a0 e0       	ldi	r26, 0x00	; 0
     980:	3a 07       	cpc	r19, r26
     982:	a0 e0       	ldi	r26, 0x00	; 0
     984:	4a 07       	cpc	r20, r26
     986:	a0 e4       	ldi	r26, 0x40	; 64
     988:	5a 07       	cpc	r21, r26
     98a:	10 f0       	brcs	.+4      	; 0x990 <__pack_f+0x10e>
     98c:	e1 e0       	ldi	r30, 0x01	; 1
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	79 01       	movw	r14, r18
     992:	8a 01       	movw	r16, r20
     994:	27 c0       	rjmp	.+78     	; 0x9e4 <__pack_f+0x162>
     996:	60 38       	cpi	r22, 0x80	; 128
     998:	71 05       	cpc	r23, r1
     99a:	64 f5       	brge	.+88     	; 0x9f4 <__pack_f+0x172>
     99c:	fb 01       	movw	r30, r22
     99e:	e1 58       	subi	r30, 0x81	; 129
     9a0:	ff 4f       	sbci	r31, 0xFF	; 255
     9a2:	d8 01       	movw	r26, r16
     9a4:	c7 01       	movw	r24, r14
     9a6:	8f 77       	andi	r24, 0x7F	; 127
     9a8:	90 70       	andi	r25, 0x00	; 0
     9aa:	a0 70       	andi	r26, 0x00	; 0
     9ac:	b0 70       	andi	r27, 0x00	; 0
     9ae:	80 34       	cpi	r24, 0x40	; 64
     9b0:	91 05       	cpc	r25, r1
     9b2:	a1 05       	cpc	r26, r1
     9b4:	b1 05       	cpc	r27, r1
     9b6:	39 f4       	brne	.+14     	; 0x9c6 <__pack_f+0x144>
     9b8:	e7 fe       	sbrs	r14, 7
     9ba:	0d c0       	rjmp	.+26     	; 0x9d6 <__pack_f+0x154>
     9bc:	80 e4       	ldi	r24, 0x40	; 64
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e0       	ldi	r26, 0x00	; 0
     9c2:	b0 e0       	ldi	r27, 0x00	; 0
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__pack_f+0x14c>
     9c6:	8f e3       	ldi	r24, 0x3F	; 63
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	a0 e0       	ldi	r26, 0x00	; 0
     9cc:	b0 e0       	ldi	r27, 0x00	; 0
     9ce:	e8 0e       	add	r14, r24
     9d0:	f9 1e       	adc	r15, r25
     9d2:	0a 1f       	adc	r16, r26
     9d4:	1b 1f       	adc	r17, r27
     9d6:	17 ff       	sbrs	r17, 7
     9d8:	05 c0       	rjmp	.+10     	; 0x9e4 <__pack_f+0x162>
     9da:	16 95       	lsr	r17
     9dc:	07 95       	ror	r16
     9de:	f7 94       	ror	r15
     9e0:	e7 94       	ror	r14
     9e2:	31 96       	adiw	r30, 0x01	; 1
     9e4:	87 e0       	ldi	r24, 0x07	; 7
     9e6:	16 95       	lsr	r17
     9e8:	07 95       	ror	r16
     9ea:	f7 94       	ror	r15
     9ec:	e7 94       	ror	r14
     9ee:	8a 95       	dec	r24
     9f0:	d1 f7       	brne	.-12     	; 0x9e6 <__pack_f+0x164>
     9f2:	05 c0       	rjmp	.+10     	; 0x9fe <__pack_f+0x17c>
     9f4:	ee 24       	eor	r14, r14
     9f6:	ff 24       	eor	r15, r15
     9f8:	87 01       	movw	r16, r14
     9fa:	ef ef       	ldi	r30, 0xFF	; 255
     9fc:	f0 e0       	ldi	r31, 0x00	; 0
     9fe:	6e 2f       	mov	r22, r30
     a00:	67 95       	ror	r22
     a02:	66 27       	eor	r22, r22
     a04:	67 95       	ror	r22
     a06:	90 2f       	mov	r25, r16
     a08:	9f 77       	andi	r25, 0x7F	; 127
     a0a:	d7 94       	ror	r13
     a0c:	dd 24       	eor	r13, r13
     a0e:	d7 94       	ror	r13
     a10:	8e 2f       	mov	r24, r30
     a12:	86 95       	lsr	r24
     a14:	49 2f       	mov	r20, r25
     a16:	46 2b       	or	r20, r22
     a18:	58 2f       	mov	r21, r24
     a1a:	5d 29       	or	r21, r13
     a1c:	b7 01       	movw	r22, r14
     a1e:	ca 01       	movw	r24, r20
     a20:	1f 91       	pop	r17
     a22:	0f 91       	pop	r16
     a24:	ff 90       	pop	r15
     a26:	ef 90       	pop	r14
     a28:	df 90       	pop	r13
     a2a:	08 95       	ret

00000a2c <__unpack_f>:
     a2c:	fc 01       	movw	r30, r24
     a2e:	db 01       	movw	r26, r22
     a30:	40 81       	ld	r20, Z
     a32:	51 81       	ldd	r21, Z+1	; 0x01
     a34:	22 81       	ldd	r18, Z+2	; 0x02
     a36:	62 2f       	mov	r22, r18
     a38:	6f 77       	andi	r22, 0x7F	; 127
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	22 1f       	adc	r18, r18
     a3e:	22 27       	eor	r18, r18
     a40:	22 1f       	adc	r18, r18
     a42:	93 81       	ldd	r25, Z+3	; 0x03
     a44:	89 2f       	mov	r24, r25
     a46:	88 0f       	add	r24, r24
     a48:	82 2b       	or	r24, r18
     a4a:	28 2f       	mov	r18, r24
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	99 1f       	adc	r25, r25
     a50:	99 27       	eor	r25, r25
     a52:	99 1f       	adc	r25, r25
     a54:	11 96       	adiw	r26, 0x01	; 1
     a56:	9c 93       	st	X, r25
     a58:	11 97       	sbiw	r26, 0x01	; 1
     a5a:	21 15       	cp	r18, r1
     a5c:	31 05       	cpc	r19, r1
     a5e:	a9 f5       	brne	.+106    	; 0xaca <__unpack_f+0x9e>
     a60:	41 15       	cp	r20, r1
     a62:	51 05       	cpc	r21, r1
     a64:	61 05       	cpc	r22, r1
     a66:	71 05       	cpc	r23, r1
     a68:	11 f4       	brne	.+4      	; 0xa6e <__unpack_f+0x42>
     a6a:	82 e0       	ldi	r24, 0x02	; 2
     a6c:	37 c0       	rjmp	.+110    	; 0xadc <__unpack_f+0xb0>
     a6e:	82 e8       	ldi	r24, 0x82	; 130
     a70:	9f ef       	ldi	r25, 0xFF	; 255
     a72:	13 96       	adiw	r26, 0x03	; 3
     a74:	9c 93       	st	X, r25
     a76:	8e 93       	st	-X, r24
     a78:	12 97       	sbiw	r26, 0x02	; 2
     a7a:	9a 01       	movw	r18, r20
     a7c:	ab 01       	movw	r20, r22
     a7e:	67 e0       	ldi	r22, 0x07	; 7
     a80:	22 0f       	add	r18, r18
     a82:	33 1f       	adc	r19, r19
     a84:	44 1f       	adc	r20, r20
     a86:	55 1f       	adc	r21, r21
     a88:	6a 95       	dec	r22
     a8a:	d1 f7       	brne	.-12     	; 0xa80 <__unpack_f+0x54>
     a8c:	83 e0       	ldi	r24, 0x03	; 3
     a8e:	8c 93       	st	X, r24
     a90:	0d c0       	rjmp	.+26     	; 0xaac <__unpack_f+0x80>
     a92:	22 0f       	add	r18, r18
     a94:	33 1f       	adc	r19, r19
     a96:	44 1f       	adc	r20, r20
     a98:	55 1f       	adc	r21, r21
     a9a:	12 96       	adiw	r26, 0x02	; 2
     a9c:	8d 91       	ld	r24, X+
     a9e:	9c 91       	ld	r25, X
     aa0:	13 97       	sbiw	r26, 0x03	; 3
     aa2:	01 97       	sbiw	r24, 0x01	; 1
     aa4:	13 96       	adiw	r26, 0x03	; 3
     aa6:	9c 93       	st	X, r25
     aa8:	8e 93       	st	-X, r24
     aaa:	12 97       	sbiw	r26, 0x02	; 2
     aac:	20 30       	cpi	r18, 0x00	; 0
     aae:	80 e0       	ldi	r24, 0x00	; 0
     ab0:	38 07       	cpc	r19, r24
     ab2:	80 e0       	ldi	r24, 0x00	; 0
     ab4:	48 07       	cpc	r20, r24
     ab6:	80 e4       	ldi	r24, 0x40	; 64
     ab8:	58 07       	cpc	r21, r24
     aba:	58 f3       	brcs	.-42     	; 0xa92 <__unpack_f+0x66>
     abc:	14 96       	adiw	r26, 0x04	; 4
     abe:	2d 93       	st	X+, r18
     ac0:	3d 93       	st	X+, r19
     ac2:	4d 93       	st	X+, r20
     ac4:	5c 93       	st	X, r21
     ac6:	17 97       	sbiw	r26, 0x07	; 7
     ac8:	08 95       	ret
     aca:	2f 3f       	cpi	r18, 0xFF	; 255
     acc:	31 05       	cpc	r19, r1
     ace:	79 f4       	brne	.+30     	; 0xaee <__unpack_f+0xc2>
     ad0:	41 15       	cp	r20, r1
     ad2:	51 05       	cpc	r21, r1
     ad4:	61 05       	cpc	r22, r1
     ad6:	71 05       	cpc	r23, r1
     ad8:	19 f4       	brne	.+6      	; 0xae0 <__unpack_f+0xb4>
     ada:	84 e0       	ldi	r24, 0x04	; 4
     adc:	8c 93       	st	X, r24
     ade:	08 95       	ret
     ae0:	64 ff       	sbrs	r22, 4
     ae2:	03 c0       	rjmp	.+6      	; 0xaea <__unpack_f+0xbe>
     ae4:	81 e0       	ldi	r24, 0x01	; 1
     ae6:	8c 93       	st	X, r24
     ae8:	12 c0       	rjmp	.+36     	; 0xb0e <__unpack_f+0xe2>
     aea:	1c 92       	st	X, r1
     aec:	10 c0       	rjmp	.+32     	; 0xb0e <__unpack_f+0xe2>
     aee:	2f 57       	subi	r18, 0x7F	; 127
     af0:	30 40       	sbci	r19, 0x00	; 0
     af2:	13 96       	adiw	r26, 0x03	; 3
     af4:	3c 93       	st	X, r19
     af6:	2e 93       	st	-X, r18
     af8:	12 97       	sbiw	r26, 0x02	; 2
     afa:	83 e0       	ldi	r24, 0x03	; 3
     afc:	8c 93       	st	X, r24
     afe:	87 e0       	ldi	r24, 0x07	; 7
     b00:	44 0f       	add	r20, r20
     b02:	55 1f       	adc	r21, r21
     b04:	66 1f       	adc	r22, r22
     b06:	77 1f       	adc	r23, r23
     b08:	8a 95       	dec	r24
     b0a:	d1 f7       	brne	.-12     	; 0xb00 <__unpack_f+0xd4>
     b0c:	70 64       	ori	r23, 0x40	; 64
     b0e:	14 96       	adiw	r26, 0x04	; 4
     b10:	4d 93       	st	X+, r20
     b12:	5d 93       	st	X+, r21
     b14:	6d 93       	st	X+, r22
     b16:	7c 93       	st	X, r23
     b18:	17 97       	sbiw	r26, 0x07	; 7
     b1a:	08 95       	ret

00000b1c <__fpcmp_parts_f>:
     b1c:	1f 93       	push	r17
     b1e:	dc 01       	movw	r26, r24
     b20:	fb 01       	movw	r30, r22
     b22:	9c 91       	ld	r25, X
     b24:	92 30       	cpi	r25, 0x02	; 2
     b26:	08 f4       	brcc	.+2      	; 0xb2a <__fpcmp_parts_f+0xe>
     b28:	47 c0       	rjmp	.+142    	; 0xbb8 <__fpcmp_parts_f+0x9c>
     b2a:	80 81       	ld	r24, Z
     b2c:	82 30       	cpi	r24, 0x02	; 2
     b2e:	08 f4       	brcc	.+2      	; 0xb32 <__fpcmp_parts_f+0x16>
     b30:	43 c0       	rjmp	.+134    	; 0xbb8 <__fpcmp_parts_f+0x9c>
     b32:	94 30       	cpi	r25, 0x04	; 4
     b34:	51 f4       	brne	.+20     	; 0xb4a <__fpcmp_parts_f+0x2e>
     b36:	11 96       	adiw	r26, 0x01	; 1
     b38:	1c 91       	ld	r17, X
     b3a:	84 30       	cpi	r24, 0x04	; 4
     b3c:	99 f5       	brne	.+102    	; 0xba4 <__fpcmp_parts_f+0x88>
     b3e:	81 81       	ldd	r24, Z+1	; 0x01
     b40:	68 2f       	mov	r22, r24
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	61 1b       	sub	r22, r17
     b46:	71 09       	sbc	r23, r1
     b48:	3f c0       	rjmp	.+126    	; 0xbc8 <__fpcmp_parts_f+0xac>
     b4a:	84 30       	cpi	r24, 0x04	; 4
     b4c:	21 f0       	breq	.+8      	; 0xb56 <__fpcmp_parts_f+0x3a>
     b4e:	92 30       	cpi	r25, 0x02	; 2
     b50:	31 f4       	brne	.+12     	; 0xb5e <__fpcmp_parts_f+0x42>
     b52:	82 30       	cpi	r24, 0x02	; 2
     b54:	b9 f1       	breq	.+110    	; 0xbc4 <__fpcmp_parts_f+0xa8>
     b56:	81 81       	ldd	r24, Z+1	; 0x01
     b58:	88 23       	and	r24, r24
     b5a:	89 f1       	breq	.+98     	; 0xbbe <__fpcmp_parts_f+0xa2>
     b5c:	2d c0       	rjmp	.+90     	; 0xbb8 <__fpcmp_parts_f+0x9c>
     b5e:	11 96       	adiw	r26, 0x01	; 1
     b60:	1c 91       	ld	r17, X
     b62:	11 97       	sbiw	r26, 0x01	; 1
     b64:	82 30       	cpi	r24, 0x02	; 2
     b66:	f1 f0       	breq	.+60     	; 0xba4 <__fpcmp_parts_f+0x88>
     b68:	81 81       	ldd	r24, Z+1	; 0x01
     b6a:	18 17       	cp	r17, r24
     b6c:	d9 f4       	brne	.+54     	; 0xba4 <__fpcmp_parts_f+0x88>
     b6e:	12 96       	adiw	r26, 0x02	; 2
     b70:	2d 91       	ld	r18, X+
     b72:	3c 91       	ld	r19, X
     b74:	13 97       	sbiw	r26, 0x03	; 3
     b76:	82 81       	ldd	r24, Z+2	; 0x02
     b78:	93 81       	ldd	r25, Z+3	; 0x03
     b7a:	82 17       	cp	r24, r18
     b7c:	93 07       	cpc	r25, r19
     b7e:	94 f0       	brlt	.+36     	; 0xba4 <__fpcmp_parts_f+0x88>
     b80:	28 17       	cp	r18, r24
     b82:	39 07       	cpc	r19, r25
     b84:	bc f0       	brlt	.+46     	; 0xbb4 <__fpcmp_parts_f+0x98>
     b86:	14 96       	adiw	r26, 0x04	; 4
     b88:	8d 91       	ld	r24, X+
     b8a:	9d 91       	ld	r25, X+
     b8c:	0d 90       	ld	r0, X+
     b8e:	bc 91       	ld	r27, X
     b90:	a0 2d       	mov	r26, r0
     b92:	24 81       	ldd	r18, Z+4	; 0x04
     b94:	35 81       	ldd	r19, Z+5	; 0x05
     b96:	46 81       	ldd	r20, Z+6	; 0x06
     b98:	57 81       	ldd	r21, Z+7	; 0x07
     b9a:	28 17       	cp	r18, r24
     b9c:	39 07       	cpc	r19, r25
     b9e:	4a 07       	cpc	r20, r26
     ba0:	5b 07       	cpc	r21, r27
     ba2:	18 f4       	brcc	.+6      	; 0xbaa <__fpcmp_parts_f+0x8e>
     ba4:	11 23       	and	r17, r17
     ba6:	41 f0       	breq	.+16     	; 0xbb8 <__fpcmp_parts_f+0x9c>
     ba8:	0a c0       	rjmp	.+20     	; 0xbbe <__fpcmp_parts_f+0xa2>
     baa:	82 17       	cp	r24, r18
     bac:	93 07       	cpc	r25, r19
     bae:	a4 07       	cpc	r26, r20
     bb0:	b5 07       	cpc	r27, r21
     bb2:	40 f4       	brcc	.+16     	; 0xbc4 <__fpcmp_parts_f+0xa8>
     bb4:	11 23       	and	r17, r17
     bb6:	19 f0       	breq	.+6      	; 0xbbe <__fpcmp_parts_f+0xa2>
     bb8:	61 e0       	ldi	r22, 0x01	; 1
     bba:	70 e0       	ldi	r23, 0x00	; 0
     bbc:	05 c0       	rjmp	.+10     	; 0xbc8 <__fpcmp_parts_f+0xac>
     bbe:	6f ef       	ldi	r22, 0xFF	; 255
     bc0:	7f ef       	ldi	r23, 0xFF	; 255
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <__fpcmp_parts_f+0xac>
     bc4:	60 e0       	ldi	r22, 0x00	; 0
     bc6:	70 e0       	ldi	r23, 0x00	; 0
     bc8:	cb 01       	movw	r24, r22
     bca:	1f 91       	pop	r17
     bcc:	08 95       	ret

00000bce <Timer1_Init>:
 *      Author: seif alrahman
 */
#include <avr/io.h>
#include <avr/interrupt.h>
void Timer1_Init()
{
     bce:	df 93       	push	r29
     bd0:	cf 93       	push	r28
     bd2:	cd b7       	in	r28, 0x3d	; 61
     bd4:	de b7       	in	r29, 0x3e	; 62
    // Set Timer1 to normal mode
    TCCR1A = 0;
     bd6:	e0 e8       	ldi	r30, 0x80	; 128
     bd8:	f0 e0       	ldi	r31, 0x00	; 0
     bda:	10 82       	st	Z, r1
    TCCR1B = 0;
     bdc:	e1 e8       	ldi	r30, 0x81	; 129
     bde:	f0 e0       	ldi	r31, 0x00	; 0
     be0:	10 82       	st	Z, r1

    // Set prescaler to 256
    TCCR1B |= (1 << CS12);
     be2:	a1 e8       	ldi	r26, 0x81	; 129
     be4:	b0 e0       	ldi	r27, 0x00	; 0
     be6:	e1 e8       	ldi	r30, 0x81	; 129
     be8:	f0 e0       	ldi	r31, 0x00	; 0
     bea:	80 81       	ld	r24, Z
     bec:	84 60       	ori	r24, 0x04	; 4
     bee:	8c 93       	st	X, r24



    TCNT1 = 0;
     bf0:	e4 e8       	ldi	r30, 0x84	; 132
     bf2:	f0 e0       	ldi	r31, 0x00	; 0
     bf4:	11 82       	std	Z+1, r1	; 0x01
     bf6:	10 82       	st	Z, r1


}
     bf8:	cf 91       	pop	r28
     bfa:	df 91       	pop	r29
     bfc:	08 95       	ret

00000bfe <Timer1_Init_CTC>:
void Timer1_Init_CTC(unsigned char distance)
{
     bfe:	df 93       	push	r29
     c00:	cf 93       	push	r28
     c02:	00 d0       	rcall	.+0      	; 0xc04 <Timer1_Init_CTC+0x6>
     c04:	0f 92       	push	r0
     c06:	0f 92       	push	r0
     c08:	cd b7       	in	r28, 0x3d	; 61
     c0a:	de b7       	in	r29, 0x3e	; 62
     c0c:	8d 83       	std	Y+5, r24	; 0x05
    // Set Timer1 to CTC (Compare) mode
    unsigned long compareValue = (distance*10 * 8000UL) / 256UL;
     c0e:	8d 81       	ldd	r24, Y+5	; 0x05
     c10:	88 2f       	mov	r24, r24
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	a0 e0       	ldi	r26, 0x00	; 0
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	20 e8       	ldi	r18, 0x80	; 128
     c1a:	38 e3       	ldi	r19, 0x38	; 56
     c1c:	41 e0       	ldi	r20, 0x01	; 1
     c1e:	50 e0       	ldi	r21, 0x00	; 0
     c20:	bc 01       	movw	r22, r24
     c22:	cd 01       	movw	r24, r26
     c24:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__mulsi3>
     c28:	dc 01       	movw	r26, r24
     c2a:	cb 01       	movw	r24, r22
     c2c:	89 2f       	mov	r24, r25
     c2e:	9a 2f       	mov	r25, r26
     c30:	ab 2f       	mov	r26, r27
     c32:	bb 27       	eor	r27, r27
     c34:	89 83       	std	Y+1, r24	; 0x01
     c36:	9a 83       	std	Y+2, r25	; 0x02
     c38:	ab 83       	std	Y+3, r26	; 0x03
     c3a:	bc 83       	std	Y+4, r27	; 0x04
    TCCR1A = 0;
     c3c:	e0 e8       	ldi	r30, 0x80	; 128
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	10 82       	st	Z, r1
    TCCR1B = 0;
     c42:	e1 e8       	ldi	r30, 0x81	; 129
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	10 82       	st	Z, r1
    TCCR1B |= (1 << WGM12);
     c48:	a1 e8       	ldi	r26, 0x81	; 129
     c4a:	b0 e0       	ldi	r27, 0x00	; 0
     c4c:	e1 e8       	ldi	r30, 0x81	; 129
     c4e:	f0 e0       	ldi	r31, 0x00	; 0
     c50:	80 81       	ld	r24, Z
     c52:	88 60       	ori	r24, 0x08	; 8
     c54:	8c 93       	st	X, r24

    // Set prescaler to 256
    TCCR1B |= (1 << CS12);
     c56:	a1 e8       	ldi	r26, 0x81	; 129
     c58:	b0 e0       	ldi	r27, 0x00	; 0
     c5a:	e1 e8       	ldi	r30, 0x81	; 129
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	80 81       	ld	r24, Z
     c60:	84 60       	ori	r24, 0x04	; 4
     c62:	8c 93       	st	X, r24


    OCR1A = (unsigned int)compareValue;
     c64:	e8 e8       	ldi	r30, 0x88	; 136
     c66:	f0 e0       	ldi	r31, 0x00	; 0
     c68:	89 81       	ldd	r24, Y+1	; 0x01
     c6a:	9a 81       	ldd	r25, Y+2	; 0x02
     c6c:	91 83       	std	Z+1, r25	; 0x01
     c6e:	80 83       	st	Z, r24
    // Enable Timer1 compare interrupt
    TIMSK1 |= (1 << OCIE1A);
     c70:	af e6       	ldi	r26, 0x6F	; 111
     c72:	b0 e0       	ldi	r27, 0x00	; 0
     c74:	ef e6       	ldi	r30, 0x6F	; 111
     c76:	f0 e0       	ldi	r31, 0x00	; 0
     c78:	80 81       	ld	r24, Z
     c7a:	82 60       	ori	r24, 0x02	; 2
     c7c:	8c 93       	st	X, r24

    // Enable global interrupts
    sei();
     c7e:	78 94       	sei
}
     c80:	0f 90       	pop	r0
     c82:	0f 90       	pop	r0
     c84:	0f 90       	pop	r0
     c86:	0f 90       	pop	r0
     c88:	0f 90       	pop	r0
     c8a:	cf 91       	pop	r28
     c8c:	df 91       	pop	r29
     c8e:	08 95       	ret

00000c90 <UART_Init>:
#include <avr/io.h>

// UART initialization
void UART_Init()
{
     c90:	df 93       	push	r29
     c92:	cf 93       	push	r28
     c94:	cd b7       	in	r28, 0x3d	; 61
     c96:	de b7       	in	r29, 0x3e	; 62
    // Set baud rate to 9600 (F_CPU = 8MHz)
    UBRR0H = 0;
     c98:	e5 ec       	ldi	r30, 0xC5	; 197
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	10 82       	st	Z, r1
    UBRR0L = 51;
     c9e:	e4 ec       	ldi	r30, 0xC4	; 196
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	83 e3       	ldi	r24, 0x33	; 51
     ca4:	80 83       	st	Z, r24

    // Enable receiver and transmitter
    UCSR0B = (1 << RXEN0) | (1 << TXEN0);
     ca6:	e1 ec       	ldi	r30, 0xC1	; 193
     ca8:	f0 e0       	ldi	r31, 0x00	; 0
     caa:	88 e1       	ldi	r24, 0x18	; 24
     cac:	80 83       	st	Z, r24

    // Set frame format: 8-bit data, 1 stop bit
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     cae:	e2 ec       	ldi	r30, 0xC2	; 194
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	86 e0       	ldi	r24, 0x06	; 6
     cb4:	80 83       	st	Z, r24
}
     cb6:	cf 91       	pop	r28
     cb8:	df 91       	pop	r29
     cba:	08 95       	ret

00000cbc <UART_Transmit>:

// UART transmit data
void UART_Transmit(unsigned char data)
{
     cbc:	df 93       	push	r29
     cbe:	cf 93       	push	r28
     cc0:	0f 92       	push	r0
     cc2:	cd b7       	in	r28, 0x3d	; 61
     cc4:	de b7       	in	r29, 0x3e	; 62
     cc6:	89 83       	std	Y+1, r24	; 0x01
    // Wait for empty transmit buffer
    while (!(UCSR0A & (1 << UDRE0)));
     cc8:	e0 ec       	ldi	r30, 0xC0	; 192
     cca:	f0 e0       	ldi	r31, 0x00	; 0
     ccc:	80 81       	ld	r24, Z
     cce:	88 2f       	mov	r24, r24
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	80 72       	andi	r24, 0x20	; 32
     cd4:	90 70       	andi	r25, 0x00	; 0
     cd6:	00 97       	sbiw	r24, 0x00	; 0
     cd8:	b9 f3       	breq	.-18     	; 0xcc8 <UART_Transmit+0xc>

    // Put data into buffer, sends the data
    UDR0 = data;
     cda:	e6 ec       	ldi	r30, 0xC6	; 198
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	89 81       	ldd	r24, Y+1	; 0x01
     ce0:	80 83       	st	Z, r24
}
     ce2:	0f 90       	pop	r0
     ce4:	cf 91       	pop	r28
     ce6:	df 91       	pop	r29
     ce8:	08 95       	ret

00000cea <UART_Receive>:

// UART receive data
unsigned char UART_Receive()
{
     cea:	df 93       	push	r29
     cec:	cf 93       	push	r28
     cee:	cd b7       	in	r28, 0x3d	; 61
     cf0:	de b7       	in	r29, 0x3e	; 62
    // Wait for data to be received
    while (!(UCSR0A & (1 << RXC0)));
     cf2:	e0 ec       	ldi	r30, 0xC0	; 192
     cf4:	f0 e0       	ldi	r31, 0x00	; 0
     cf6:	80 81       	ld	r24, Z
     cf8:	88 23       	and	r24, r24
     cfa:	dc f7       	brge	.-10     	; 0xcf2 <UART_Receive+0x8>

    // Get and return received data from buffer
    return UDR0;
     cfc:	e6 ec       	ldi	r30, 0xC6	; 198
     cfe:	f0 e0       	ldi	r31, 0x00	; 0
     d00:	80 81       	ld	r24, Z
}
     d02:	cf 91       	pop	r28
     d04:	df 91       	pop	r29
     d06:	08 95       	ret

00000d08 <main>:
#include <avr/io.h>
#include<avr/interrupt.h>
#include <avr/delay.h>

#include "UART.h"
int main (void){
     d08:	df 93       	push	r29
     d0a:	cf 93       	push	r28
     d0c:	cd b7       	in	r28, 0x3d	; 61
     d0e:	de b7       	in	r29, 0x3e	; 62
     d10:	6e 97       	sbiw	r28, 0x1e	; 30
     d12:	0f b6       	in	r0, 0x3f	; 63
     d14:	f8 94       	cli
     d16:	de bf       	out	0x3e, r29	; 62
     d18:	0f be       	out	0x3f, r0	; 63
     d1a:	cd bf       	out	0x3d, r28	; 61
	DDRD &= ~(1 << PD0);
     d1c:	aa e2       	ldi	r26, 0x2A	; 42
     d1e:	b0 e0       	ldi	r27, 0x00	; 0
     d20:	ea e2       	ldi	r30, 0x2A	; 42
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	80 81       	ld	r24, Z
     d26:	8e 7f       	andi	r24, 0xFE	; 254
     d28:	8c 93       	st	X, r24
	DDRD |= (1 << PD1);
     d2a:	aa e2       	ldi	r26, 0x2A	; 42
     d2c:	b0 e0       	ldi	r27, 0x00	; 0
     d2e:	ea e2       	ldi	r30, 0x2A	; 42
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	80 81       	ld	r24, Z
     d34:	82 60       	ori	r24, 0x02	; 2
     d36:	8c 93       	st	X, r24

	DDRC|=(1<<0);
     d38:	a7 e2       	ldi	r26, 0x27	; 39
     d3a:	b0 e0       	ldi	r27, 0x00	; 0
     d3c:	e7 e2       	ldi	r30, 0x27	; 39
     d3e:	f0 e0       	ldi	r31, 0x00	; 0
     d40:	80 81       	ld	r24, Z
     d42:	81 60       	ori	r24, 0x01	; 1
     d44:	8c 93       	st	X, r24
	DDRC|=(1<<1);
     d46:	a7 e2       	ldi	r26, 0x27	; 39
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	e7 e2       	ldi	r30, 0x27	; 39
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 81       	ld	r24, Z
     d50:	82 60       	ori	r24, 0x02	; 2
     d52:	8c 93       	st	X, r24
	//PORTD |= (1 << PD0);
	PORTC&=~3 ;
     d54:	a8 e2       	ldi	r26, 0x28	; 40
     d56:	b0 e0       	ldi	r27, 0x00	; 0
     d58:	e8 e2       	ldi	r30, 0x28	; 40
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	80 81       	ld	r24, Z
     d5e:	8c 7f       	andi	r24, 0xFC	; 252
     d60:	8c 93       	st	X, r24
	UART_Init();
     d62:	0e 94 48 06 	call	0xc90	; 0xc90 <UART_Init>
	Timer1_Init_CTC();
     d66:	0e 94 ff 05 	call	0xbfe	; 0xbfe <Timer1_Init_CTC>
	while(1){
		TCCR1A = 0;
     d6a:	e0 e8       	ldi	r30, 0x80	; 128
     d6c:	f0 e0       	ldi	r31, 0x00	; 0
     d6e:	10 82       	st	Z, r1
		TCCR1B = 0;
     d70:	e1 e8       	ldi	r30, 0x81	; 129
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	10 82       	st	Z, r1
		unsigned char  warning=UART_Receive();
     d76:	0e 94 75 06 	call	0xcea	; 0xcea <UART_Receive>
     d7a:	8e 8f       	std	Y+30, r24	; 0x1e
		unsigned char distance =UART_Receive();
     d7c:	0e 94 75 06 	call	0xcea	; 0xcea <UART_Receive>
     d80:	8d 8f       	std	Y+29, r24	; 0x1d
		if(warning==1){
     d82:	8e 8d       	ldd	r24, Y+30	; 0x1e
     d84:	81 30       	cpi	r24, 0x01	; 1
     d86:	89 f7       	brne	.-30     	; 0xd6a <main+0x62>
			Timer1_Init_CTC();
     d88:	0e 94 ff 05 	call	0xbfe	; 0xbfe <Timer1_Init_CTC>
			PORTC|=(1<<0) ;
     d8c:	a8 e2       	ldi	r26, 0x28	; 40
     d8e:	b0 e0       	ldi	r27, 0x00	; 0
     d90:	e8 e2       	ldi	r30, 0x28	; 40
     d92:	f0 e0       	ldi	r31, 0x00	; 0
     d94:	80 81       	ld	r24, Z
     d96:	81 60       	ori	r24, 0x01	; 1
     d98:	8c 93       	st	X, r24
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	aa ef       	ldi	r26, 0xFA	; 250
     da0:	b3 e4       	ldi	r27, 0x43	; 67
     da2:	89 8f       	std	Y+25, r24	; 0x19
     da4:	9a 8f       	std	Y+26, r25	; 0x1a
     da6:	ab 8f       	std	Y+27, r26	; 0x1b
     da8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     daa:	69 8d       	ldd	r22, Y+25	; 0x19
     dac:	7a 8d       	ldd	r23, Y+26	; 0x1a
     dae:	8b 8d       	ldd	r24, Y+27	; 0x1b
     db0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     db2:	20 e0       	ldi	r18, 0x00	; 0
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	4a ef       	ldi	r20, 0xFA	; 250
     db8:	54 e4       	ldi	r21, 0x44	; 68
     dba:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__mulsf3>
     dbe:	dc 01       	movw	r26, r24
     dc0:	cb 01       	movw	r24, r22
     dc2:	8d 8b       	std	Y+21, r24	; 0x15
     dc4:	9e 8b       	std	Y+22, r25	; 0x16
     dc6:	af 8b       	std	Y+23, r26	; 0x17
     dc8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     dca:	6d 89       	ldd	r22, Y+21	; 0x15
     dcc:	7e 89       	ldd	r23, Y+22	; 0x16
     dce:	8f 89       	ldd	r24, Y+23	; 0x17
     dd0:	98 8d       	ldd	r25, Y+24	; 0x18
     dd2:	20 e0       	ldi	r18, 0x00	; 0
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	40 e8       	ldi	r20, 0x80	; 128
     dd8:	5f e3       	ldi	r21, 0x3F	; 63
     dda:	0e 94 bd 03 	call	0x77a	; 0x77a <__ltsf2>
     dde:	88 23       	and	r24, r24
     de0:	2c f4       	brge	.+10     	; 0xdec <main+0xe4>
		__ticks = 1;
     de2:	81 e0       	ldi	r24, 0x01	; 1
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	9c 8b       	std	Y+20, r25	; 0x14
     de8:	8b 8b       	std	Y+19, r24	; 0x13
     dea:	3f c0       	rjmp	.+126    	; 0xe6a <main+0x162>
	else if (__tmp > 65535)
     dec:	6d 89       	ldd	r22, Y+21	; 0x15
     dee:	7e 89       	ldd	r23, Y+22	; 0x16
     df0:	8f 89       	ldd	r24, Y+23	; 0x17
     df2:	98 8d       	ldd	r25, Y+24	; 0x18
     df4:	20 e0       	ldi	r18, 0x00	; 0
     df6:	3f ef       	ldi	r19, 0xFF	; 255
     df8:	4f e7       	ldi	r20, 0x7F	; 127
     dfa:	57 e4       	ldi	r21, 0x47	; 71
     dfc:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__gtsf2>
     e00:	18 16       	cp	r1, r24
     e02:	4c f5       	brge	.+82     	; 0xe56 <main+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e04:	69 8d       	ldd	r22, Y+25	; 0x19
     e06:	7a 8d       	ldd	r23, Y+26	; 0x1a
     e08:	8b 8d       	ldd	r24, Y+27	; 0x1b
     e0a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e0c:	20 e0       	ldi	r18, 0x00	; 0
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	40 e2       	ldi	r20, 0x20	; 32
     e12:	51 e4       	ldi	r21, 0x41	; 65
     e14:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__mulsf3>
     e18:	dc 01       	movw	r26, r24
     e1a:	cb 01       	movw	r24, r22
     e1c:	bc 01       	movw	r22, r24
     e1e:	cd 01       	movw	r24, r26
     e20:	0e 94 8d 00 	call	0x11a	; 0x11a <__fixunssfsi>
     e24:	dc 01       	movw	r26, r24
     e26:	cb 01       	movw	r24, r22
     e28:	9c 8b       	std	Y+20, r25	; 0x14
     e2a:	8b 8b       	std	Y+19, r24	; 0x13
     e2c:	0f c0       	rjmp	.+30     	; 0xe4c <main+0x144>
     e2e:	88 ec       	ldi	r24, 0xC8	; 200
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	9a 8b       	std	Y+18, r25	; 0x12
     e34:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     e36:	89 89       	ldd	r24, Y+17	; 0x11
     e38:	9a 89       	ldd	r25, Y+18	; 0x12
     e3a:	01 97       	sbiw	r24, 0x01	; 1
     e3c:	f1 f7       	brne	.-4      	; 0xe3a <main+0x132>
     e3e:	9a 8b       	std	Y+18, r25	; 0x12
     e40:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e42:	8b 89       	ldd	r24, Y+19	; 0x13
     e44:	9c 89       	ldd	r25, Y+20	; 0x14
     e46:	01 97       	sbiw	r24, 0x01	; 1
     e48:	9c 8b       	std	Y+20, r25	; 0x14
     e4a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e4c:	8b 89       	ldd	r24, Y+19	; 0x13
     e4e:	9c 89       	ldd	r25, Y+20	; 0x14
     e50:	00 97       	sbiw	r24, 0x00	; 0
     e52:	69 f7       	brne	.-38     	; 0xe2e <main+0x126>
     e54:	14 c0       	rjmp	.+40     	; 0xe7e <main+0x176>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e56:	6d 89       	ldd	r22, Y+21	; 0x15
     e58:	7e 89       	ldd	r23, Y+22	; 0x16
     e5a:	8f 89       	ldd	r24, Y+23	; 0x17
     e5c:	98 8d       	ldd	r25, Y+24	; 0x18
     e5e:	0e 94 8d 00 	call	0x11a	; 0x11a <__fixunssfsi>
     e62:	dc 01       	movw	r26, r24
     e64:	cb 01       	movw	r24, r22
     e66:	9c 8b       	std	Y+20, r25	; 0x14
     e68:	8b 8b       	std	Y+19, r24	; 0x13
     e6a:	8b 89       	ldd	r24, Y+19	; 0x13
     e6c:	9c 89       	ldd	r25, Y+20	; 0x14
     e6e:	98 8b       	std	Y+16, r25	; 0x10
     e70:	8f 87       	std	Y+15, r24	; 0x0f
     e72:	8f 85       	ldd	r24, Y+15	; 0x0f
     e74:	98 89       	ldd	r25, Y+16	; 0x10
     e76:	01 97       	sbiw	r24, 0x01	; 1
     e78:	f1 f7       	brne	.-4      	; 0xe76 <main+0x16e>
     e7a:	98 8b       	std	Y+16, r25	; 0x10
     e7c:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(500) ;

			PORTC&=~(1<<0) ;
     e7e:	a8 e2       	ldi	r26, 0x28	; 40
     e80:	b0 e0       	ldi	r27, 0x00	; 0
     e82:	e8 e2       	ldi	r30, 0x28	; 40
     e84:	f0 e0       	ldi	r31, 0x00	; 0
     e86:	80 81       	ld	r24, Z
     e88:	8e 7f       	andi	r24, 0xFE	; 254
     e8a:	8c 93       	st	X, r24
     e8c:	80 e0       	ldi	r24, 0x00	; 0
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	aa ef       	ldi	r26, 0xFA	; 250
     e92:	b3 e4       	ldi	r27, 0x43	; 67
     e94:	8b 87       	std	Y+11, r24	; 0x0b
     e96:	9c 87       	std	Y+12, r25	; 0x0c
     e98:	ad 87       	std	Y+13, r26	; 0x0d
     e9a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e9c:	6b 85       	ldd	r22, Y+11	; 0x0b
     e9e:	7c 85       	ldd	r23, Y+12	; 0x0c
     ea0:	8d 85       	ldd	r24, Y+13	; 0x0d
     ea2:	9e 85       	ldd	r25, Y+14	; 0x0e
     ea4:	20 e0       	ldi	r18, 0x00	; 0
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	4a ef       	ldi	r20, 0xFA	; 250
     eaa:	54 e4       	ldi	r21, 0x44	; 68
     eac:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__mulsf3>
     eb0:	dc 01       	movw	r26, r24
     eb2:	cb 01       	movw	r24, r22
     eb4:	8f 83       	std	Y+7, r24	; 0x07
     eb6:	98 87       	std	Y+8, r25	; 0x08
     eb8:	a9 87       	std	Y+9, r26	; 0x09
     eba:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     ebc:	6f 81       	ldd	r22, Y+7	; 0x07
     ebe:	78 85       	ldd	r23, Y+8	; 0x08
     ec0:	89 85       	ldd	r24, Y+9	; 0x09
     ec2:	9a 85       	ldd	r25, Y+10	; 0x0a
     ec4:	20 e0       	ldi	r18, 0x00	; 0
     ec6:	30 e0       	ldi	r19, 0x00	; 0
     ec8:	40 e8       	ldi	r20, 0x80	; 128
     eca:	5f e3       	ldi	r21, 0x3F	; 63
     ecc:	0e 94 bd 03 	call	0x77a	; 0x77a <__ltsf2>
     ed0:	88 23       	and	r24, r24
     ed2:	2c f4       	brge	.+10     	; 0xede <main+0x1d6>
		__ticks = 1;
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	9e 83       	std	Y+6, r25	; 0x06
     eda:	8d 83       	std	Y+5, r24	; 0x05
     edc:	3f c0       	rjmp	.+126    	; 0xf5c <main+0x254>
	else if (__tmp > 65535)
     ede:	6f 81       	ldd	r22, Y+7	; 0x07
     ee0:	78 85       	ldd	r23, Y+8	; 0x08
     ee2:	89 85       	ldd	r24, Y+9	; 0x09
     ee4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ee6:	20 e0       	ldi	r18, 0x00	; 0
     ee8:	3f ef       	ldi	r19, 0xFF	; 255
     eea:	4f e7       	ldi	r20, 0x7F	; 127
     eec:	57 e4       	ldi	r21, 0x47	; 71
     eee:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__gtsf2>
     ef2:	18 16       	cp	r1, r24
     ef4:	4c f5       	brge	.+82     	; 0xf48 <main+0x240>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ef6:	6b 85       	ldd	r22, Y+11	; 0x0b
     ef8:	7c 85       	ldd	r23, Y+12	; 0x0c
     efa:	8d 85       	ldd	r24, Y+13	; 0x0d
     efc:	9e 85       	ldd	r25, Y+14	; 0x0e
     efe:	20 e0       	ldi	r18, 0x00	; 0
     f00:	30 e0       	ldi	r19, 0x00	; 0
     f02:	40 e2       	ldi	r20, 0x20	; 32
     f04:	51 e4       	ldi	r21, 0x41	; 65
     f06:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__mulsf3>
     f0a:	dc 01       	movw	r26, r24
     f0c:	cb 01       	movw	r24, r22
     f0e:	bc 01       	movw	r22, r24
     f10:	cd 01       	movw	r24, r26
     f12:	0e 94 8d 00 	call	0x11a	; 0x11a <__fixunssfsi>
     f16:	dc 01       	movw	r26, r24
     f18:	cb 01       	movw	r24, r22
     f1a:	9e 83       	std	Y+6, r25	; 0x06
     f1c:	8d 83       	std	Y+5, r24	; 0x05
     f1e:	0f c0       	rjmp	.+30     	; 0xf3e <main+0x236>
     f20:	88 ec       	ldi	r24, 0xC8	; 200
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	9c 83       	std	Y+4, r25	; 0x04
     f26:	8b 83       	std	Y+3, r24	; 0x03
     f28:	8b 81       	ldd	r24, Y+3	; 0x03
     f2a:	9c 81       	ldd	r25, Y+4	; 0x04
     f2c:	01 97       	sbiw	r24, 0x01	; 1
     f2e:	f1 f7       	brne	.-4      	; 0xf2c <main+0x224>
     f30:	9c 83       	std	Y+4, r25	; 0x04
     f32:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f34:	8d 81       	ldd	r24, Y+5	; 0x05
     f36:	9e 81       	ldd	r25, Y+6	; 0x06
     f38:	01 97       	sbiw	r24, 0x01	; 1
     f3a:	9e 83       	std	Y+6, r25	; 0x06
     f3c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f3e:	8d 81       	ldd	r24, Y+5	; 0x05
     f40:	9e 81       	ldd	r25, Y+6	; 0x06
     f42:	00 97       	sbiw	r24, 0x00	; 0
     f44:	69 f7       	brne	.-38     	; 0xf20 <main+0x218>
     f46:	11 cf       	rjmp	.-478    	; 0xd6a <main+0x62>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f48:	6f 81       	ldd	r22, Y+7	; 0x07
     f4a:	78 85       	ldd	r23, Y+8	; 0x08
     f4c:	89 85       	ldd	r24, Y+9	; 0x09
     f4e:	9a 85       	ldd	r25, Y+10	; 0x0a
     f50:	0e 94 8d 00 	call	0x11a	; 0x11a <__fixunssfsi>
     f54:	dc 01       	movw	r26, r24
     f56:	cb 01       	movw	r24, r22
     f58:	9e 83       	std	Y+6, r25	; 0x06
     f5a:	8d 83       	std	Y+5, r24	; 0x05
     f5c:	8d 81       	ldd	r24, Y+5	; 0x05
     f5e:	9e 81       	ldd	r25, Y+6	; 0x06
     f60:	9a 83       	std	Y+2, r25	; 0x02
     f62:	89 83       	std	Y+1, r24	; 0x01
     f64:	89 81       	ldd	r24, Y+1	; 0x01
     f66:	9a 81       	ldd	r25, Y+2	; 0x02
     f68:	01 97       	sbiw	r24, 0x01	; 1
     f6a:	f1 f7       	brne	.-4      	; 0xf68 <main+0x260>
     f6c:	9a 83       	std	Y+2, r25	; 0x02
     f6e:	89 83       	std	Y+1, r24	; 0x01
     f70:	fc ce       	rjmp	.-520    	; 0xd6a <main+0x62>

00000f72 <__vector_17>:
		}
	}

}
ISR(TIMER1_COMPA_vect)
{
     f72:	1f 92       	push	r1
     f74:	0f 92       	push	r0
     f76:	0f b6       	in	r0, 0x3f	; 63
     f78:	0f 92       	push	r0
     f7a:	00 90 5b 00 	lds	r0, 0x005B
     f7e:	0f 92       	push	r0
     f80:	11 24       	eor	r1, r1
     f82:	8f 93       	push	r24
     f84:	9f 93       	push	r25
     f86:	af 93       	push	r26
     f88:	bf 93       	push	r27
     f8a:	ef 93       	push	r30
     f8c:	ff 93       	push	r31
     f8e:	df 93       	push	r29
     f90:	cf 93       	push	r28
     f92:	cd b7       	in	r28, 0x3d	; 61
     f94:	de b7       	in	r29, 0x3e	; 62
	PORTC^=(1<<1);
     f96:	a8 e2       	ldi	r26, 0x28	; 40
     f98:	b0 e0       	ldi	r27, 0x00	; 0
     f9a:	e8 e2       	ldi	r30, 0x28	; 40
     f9c:	f0 e0       	ldi	r31, 0x00	; 0
     f9e:	90 81       	ld	r25, Z
     fa0:	82 e0       	ldi	r24, 0x02	; 2
     fa2:	89 27       	eor	r24, r25
     fa4:	8c 93       	st	X, r24
}
     fa6:	cf 91       	pop	r28
     fa8:	df 91       	pop	r29
     faa:	ff 91       	pop	r31
     fac:	ef 91       	pop	r30
     fae:	bf 91       	pop	r27
     fb0:	af 91       	pop	r26
     fb2:	9f 91       	pop	r25
     fb4:	8f 91       	pop	r24
     fb6:	0f 90       	pop	r0
     fb8:	00 92 5b 00 	sts	0x005B, r0
     fbc:	0f 90       	pop	r0
     fbe:	0f be       	out	0x3f, r0	; 63
     fc0:	0f 90       	pop	r0
     fc2:	1f 90       	pop	r1
     fc4:	18 95       	reti

00000fc6 <__mulsi3>:
     fc6:	62 9f       	mul	r22, r18
     fc8:	d0 01       	movw	r26, r0
     fca:	73 9f       	mul	r23, r19
     fcc:	f0 01       	movw	r30, r0
     fce:	82 9f       	mul	r24, r18
     fd0:	e0 0d       	add	r30, r0
     fd2:	f1 1d       	adc	r31, r1
     fd4:	64 9f       	mul	r22, r20
     fd6:	e0 0d       	add	r30, r0
     fd8:	f1 1d       	adc	r31, r1
     fda:	92 9f       	mul	r25, r18
     fdc:	f0 0d       	add	r31, r0
     fde:	83 9f       	mul	r24, r19
     fe0:	f0 0d       	add	r31, r0
     fe2:	74 9f       	mul	r23, r20
     fe4:	f0 0d       	add	r31, r0
     fe6:	65 9f       	mul	r22, r21
     fe8:	f0 0d       	add	r31, r0
     fea:	99 27       	eor	r25, r25
     fec:	72 9f       	mul	r23, r18
     fee:	b0 0d       	add	r27, r0
     ff0:	e1 1d       	adc	r30, r1
     ff2:	f9 1f       	adc	r31, r25
     ff4:	63 9f       	mul	r22, r19
     ff6:	b0 0d       	add	r27, r0
     ff8:	e1 1d       	adc	r30, r1
     ffa:	f9 1f       	adc	r31, r25
     ffc:	bd 01       	movw	r22, r26
     ffe:	cf 01       	movw	r24, r30
    1000:	11 24       	eor	r1, r1
    1002:	08 95       	ret

00001004 <__prologue_saves__>:
    1004:	2f 92       	push	r2
    1006:	3f 92       	push	r3
    1008:	4f 92       	push	r4
    100a:	5f 92       	push	r5
    100c:	6f 92       	push	r6
    100e:	7f 92       	push	r7
    1010:	8f 92       	push	r8
    1012:	9f 92       	push	r9
    1014:	af 92       	push	r10
    1016:	bf 92       	push	r11
    1018:	cf 92       	push	r12
    101a:	df 92       	push	r13
    101c:	ef 92       	push	r14
    101e:	ff 92       	push	r15
    1020:	0f 93       	push	r16
    1022:	1f 93       	push	r17
    1024:	cf 93       	push	r28
    1026:	df 93       	push	r29
    1028:	cd b7       	in	r28, 0x3d	; 61
    102a:	de b7       	in	r29, 0x3e	; 62
    102c:	ca 1b       	sub	r28, r26
    102e:	db 0b       	sbc	r29, r27
    1030:	0f b6       	in	r0, 0x3f	; 63
    1032:	f8 94       	cli
    1034:	de bf       	out	0x3e, r29	; 62
    1036:	0f be       	out	0x3f, r0	; 63
    1038:	cd bf       	out	0x3d, r28	; 61
    103a:	19 94       	eijmp

0000103c <__epilogue_restores__>:
    103c:	2a 88       	ldd	r2, Y+18	; 0x12
    103e:	39 88       	ldd	r3, Y+17	; 0x11
    1040:	48 88       	ldd	r4, Y+16	; 0x10
    1042:	5f 84       	ldd	r5, Y+15	; 0x0f
    1044:	6e 84       	ldd	r6, Y+14	; 0x0e
    1046:	7d 84       	ldd	r7, Y+13	; 0x0d
    1048:	8c 84       	ldd	r8, Y+12	; 0x0c
    104a:	9b 84       	ldd	r9, Y+11	; 0x0b
    104c:	aa 84       	ldd	r10, Y+10	; 0x0a
    104e:	b9 84       	ldd	r11, Y+9	; 0x09
    1050:	c8 84       	ldd	r12, Y+8	; 0x08
    1052:	df 80       	ldd	r13, Y+7	; 0x07
    1054:	ee 80       	ldd	r14, Y+6	; 0x06
    1056:	fd 80       	ldd	r15, Y+5	; 0x05
    1058:	0c 81       	ldd	r16, Y+4	; 0x04
    105a:	1b 81       	ldd	r17, Y+3	; 0x03
    105c:	aa 81       	ldd	r26, Y+2	; 0x02
    105e:	b9 81       	ldd	r27, Y+1	; 0x01
    1060:	ce 0f       	add	r28, r30
    1062:	d1 1d       	adc	r29, r1
    1064:	0f b6       	in	r0, 0x3f	; 63
    1066:	f8 94       	cli
    1068:	de bf       	out	0x3e, r29	; 62
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	cd bf       	out	0x3d, r28	; 61
    106e:	ed 01       	movw	r28, r26
    1070:	08 95       	ret

00001072 <_exit>:
    1072:	f8 94       	cli

00001074 <__stop_program>:
    1074:	ff cf       	rjmp	.-2      	; 0x1074 <__stop_program>
