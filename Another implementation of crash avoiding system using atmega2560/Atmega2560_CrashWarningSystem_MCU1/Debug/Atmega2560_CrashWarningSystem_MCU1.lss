
Atmega2560_CrashWarningSystem_MCU1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011e  00800200  0000279c  00002830  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000279c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080031e  0080031e  0000294e  2**0
                  ALLOC
  3 .stab         00001c44  00000000  00000000  00002950  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000c35  00000000  00000000  00004594  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  000051c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f2  00000000  00000000  00005369  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240b  00000000  00000000  0000555b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001386  00000000  00000000  00007966  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d6  00000000  00000000  00008cec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00009ec4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f6  00000000  00000000  0000a084  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000096e  00000000  00000000  0000a37a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000ace8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 24 13 	jmp	0x2648	; 0x2648 <__vector_1>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec e9       	ldi	r30, 0x9C	; 156
      fc:	f7 e2       	ldi	r31, 0x27	; 39
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 31       	cpi	r26, 0x1E	; 30
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	13 e0       	ldi	r17, 0x03	; 3
     110:	ae e1       	ldi	r26, 0x1E	; 30
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a5 32       	cpi	r26, 0x25	; 37
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 3e 12 	call	0x247c	; 0x247c <main>
     122:	0c 94 cc 13 	jmp	0x2798	; 0x2798 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <__fixunssfsi>:
     12a:	ef 92       	push	r14
     12c:	ff 92       	push	r15
     12e:	0f 93       	push	r16
     130:	1f 93       	push	r17
     132:	7b 01       	movw	r14, r22
     134:	8c 01       	movw	r16, r24
     136:	20 e0       	ldi	r18, 0x00	; 0
     138:	30 e0       	ldi	r19, 0x00	; 0
     13a:	40 e0       	ldi	r20, 0x00	; 0
     13c:	5f e4       	ldi	r21, 0x4F	; 79
     13e:	0e 94 41 04 	call	0x882	; 0x882 <__gesf2>
     142:	88 23       	and	r24, r24
     144:	8c f0       	brlt	.+34     	; 0x168 <__fixunssfsi+0x3e>
     146:	c8 01       	movw	r24, r16
     148:	b7 01       	movw	r22, r14
     14a:	20 e0       	ldi	r18, 0x00	; 0
     14c:	30 e0       	ldi	r19, 0x00	; 0
     14e:	40 e0       	ldi	r20, 0x00	; 0
     150:	5f e4       	ldi	r21, 0x4F	; 79
     152:	0e 94 0d 02 	call	0x41a	; 0x41a <__subsf3>
     156:	0e 94 a1 04 	call	0x942	; 0x942 <__fixsfsi>
     15a:	9b 01       	movw	r18, r22
     15c:	ac 01       	movw	r20, r24
     15e:	20 50       	subi	r18, 0x00	; 0
     160:	30 40       	sbci	r19, 0x00	; 0
     162:	40 40       	sbci	r20, 0x00	; 0
     164:	50 48       	sbci	r21, 0x80	; 128
     166:	06 c0       	rjmp	.+12     	; 0x174 <__fixunssfsi+0x4a>
     168:	c8 01       	movw	r24, r16
     16a:	b7 01       	movw	r22, r14
     16c:	0e 94 a1 04 	call	0x942	; 0x942 <__fixsfsi>
     170:	9b 01       	movw	r18, r22
     172:	ac 01       	movw	r20, r24
     174:	b9 01       	movw	r22, r18
     176:	ca 01       	movw	r24, r20
     178:	1f 91       	pop	r17
     17a:	0f 91       	pop	r16
     17c:	ff 90       	pop	r15
     17e:	ef 90       	pop	r14
     180:	08 95       	ret

00000182 <_fpadd_parts>:
     182:	a0 e0       	ldi	r26, 0x00	; 0
     184:	b0 e0       	ldi	r27, 0x00	; 0
     186:	e7 ec       	ldi	r30, 0xC7	; 199
     188:	f0 e0       	ldi	r31, 0x00	; 0
     18a:	0c 94 95 13 	jmp	0x272a	; 0x272a <__prologue_saves__>
     18e:	dc 01       	movw	r26, r24
     190:	2b 01       	movw	r4, r22
     192:	fa 01       	movw	r30, r20
     194:	9c 91       	ld	r25, X
     196:	92 30       	cpi	r25, 0x02	; 2
     198:	08 f4       	brcc	.+2      	; 0x19c <_fpadd_parts+0x1a>
     19a:	39 c1       	rjmp	.+626    	; 0x40e <_fpadd_parts+0x28c>
     19c:	eb 01       	movw	r28, r22
     19e:	88 81       	ld	r24, Y
     1a0:	82 30       	cpi	r24, 0x02	; 2
     1a2:	08 f4       	brcc	.+2      	; 0x1a6 <_fpadd_parts+0x24>
     1a4:	33 c1       	rjmp	.+614    	; 0x40c <_fpadd_parts+0x28a>
     1a6:	94 30       	cpi	r25, 0x04	; 4
     1a8:	69 f4       	brne	.+26     	; 0x1c4 <_fpadd_parts+0x42>
     1aa:	84 30       	cpi	r24, 0x04	; 4
     1ac:	09 f0       	breq	.+2      	; 0x1b0 <_fpadd_parts+0x2e>
     1ae:	2f c1       	rjmp	.+606    	; 0x40e <_fpadd_parts+0x28c>
     1b0:	11 96       	adiw	r26, 0x01	; 1
     1b2:	9c 91       	ld	r25, X
     1b4:	11 97       	sbiw	r26, 0x01	; 1
     1b6:	89 81       	ldd	r24, Y+1	; 0x01
     1b8:	98 17       	cp	r25, r24
     1ba:	09 f4       	brne	.+2      	; 0x1be <_fpadd_parts+0x3c>
     1bc:	28 c1       	rjmp	.+592    	; 0x40e <_fpadd_parts+0x28c>
     1be:	a5 e1       	ldi	r26, 0x15	; 21
     1c0:	b2 e0       	ldi	r27, 0x02	; 2
     1c2:	25 c1       	rjmp	.+586    	; 0x40e <_fpadd_parts+0x28c>
     1c4:	84 30       	cpi	r24, 0x04	; 4
     1c6:	09 f4       	brne	.+2      	; 0x1ca <_fpadd_parts+0x48>
     1c8:	21 c1       	rjmp	.+578    	; 0x40c <_fpadd_parts+0x28a>
     1ca:	82 30       	cpi	r24, 0x02	; 2
     1cc:	a9 f4       	brne	.+42     	; 0x1f8 <_fpadd_parts+0x76>
     1ce:	92 30       	cpi	r25, 0x02	; 2
     1d0:	09 f0       	breq	.+2      	; 0x1d4 <_fpadd_parts+0x52>
     1d2:	1d c1       	rjmp	.+570    	; 0x40e <_fpadd_parts+0x28c>
     1d4:	9a 01       	movw	r18, r20
     1d6:	ad 01       	movw	r20, r26
     1d8:	88 e0       	ldi	r24, 0x08	; 8
     1da:	ea 01       	movw	r28, r20
     1dc:	09 90       	ld	r0, Y+
     1de:	ae 01       	movw	r20, r28
     1e0:	e9 01       	movw	r28, r18
     1e2:	09 92       	st	Y+, r0
     1e4:	9e 01       	movw	r18, r28
     1e6:	81 50       	subi	r24, 0x01	; 1
     1e8:	c1 f7       	brne	.-16     	; 0x1da <_fpadd_parts+0x58>
     1ea:	e2 01       	movw	r28, r4
     1ec:	89 81       	ldd	r24, Y+1	; 0x01
     1ee:	11 96       	adiw	r26, 0x01	; 1
     1f0:	9c 91       	ld	r25, X
     1f2:	89 23       	and	r24, r25
     1f4:	81 83       	std	Z+1, r24	; 0x01
     1f6:	08 c1       	rjmp	.+528    	; 0x408 <_fpadd_parts+0x286>
     1f8:	92 30       	cpi	r25, 0x02	; 2
     1fa:	09 f4       	brne	.+2      	; 0x1fe <_fpadd_parts+0x7c>
     1fc:	07 c1       	rjmp	.+526    	; 0x40c <_fpadd_parts+0x28a>
     1fe:	12 96       	adiw	r26, 0x02	; 2
     200:	2d 90       	ld	r2, X+
     202:	3c 90       	ld	r3, X
     204:	13 97       	sbiw	r26, 0x03	; 3
     206:	eb 01       	movw	r28, r22
     208:	8a 81       	ldd	r24, Y+2	; 0x02
     20a:	9b 81       	ldd	r25, Y+3	; 0x03
     20c:	14 96       	adiw	r26, 0x04	; 4
     20e:	ad 90       	ld	r10, X+
     210:	bd 90       	ld	r11, X+
     212:	cd 90       	ld	r12, X+
     214:	dc 90       	ld	r13, X
     216:	17 97       	sbiw	r26, 0x07	; 7
     218:	ec 80       	ldd	r14, Y+4	; 0x04
     21a:	fd 80       	ldd	r15, Y+5	; 0x05
     21c:	0e 81       	ldd	r16, Y+6	; 0x06
     21e:	1f 81       	ldd	r17, Y+7	; 0x07
     220:	91 01       	movw	r18, r2
     222:	28 1b       	sub	r18, r24
     224:	39 0b       	sbc	r19, r25
     226:	b9 01       	movw	r22, r18
     228:	37 ff       	sbrs	r19, 7
     22a:	04 c0       	rjmp	.+8      	; 0x234 <_fpadd_parts+0xb2>
     22c:	66 27       	eor	r22, r22
     22e:	77 27       	eor	r23, r23
     230:	62 1b       	sub	r22, r18
     232:	73 0b       	sbc	r23, r19
     234:	60 32       	cpi	r22, 0x20	; 32
     236:	71 05       	cpc	r23, r1
     238:	0c f0       	brlt	.+2      	; 0x23c <_fpadd_parts+0xba>
     23a:	61 c0       	rjmp	.+194    	; 0x2fe <_fpadd_parts+0x17c>
     23c:	12 16       	cp	r1, r18
     23e:	13 06       	cpc	r1, r19
     240:	6c f5       	brge	.+90     	; 0x29c <_fpadd_parts+0x11a>
     242:	37 01       	movw	r6, r14
     244:	48 01       	movw	r8, r16
     246:	06 2e       	mov	r0, r22
     248:	04 c0       	rjmp	.+8      	; 0x252 <_fpadd_parts+0xd0>
     24a:	96 94       	lsr	r9
     24c:	87 94       	ror	r8
     24e:	77 94       	ror	r7
     250:	67 94       	ror	r6
     252:	0a 94       	dec	r0
     254:	d2 f7       	brpl	.-12     	; 0x24a <_fpadd_parts+0xc8>
     256:	21 e0       	ldi	r18, 0x01	; 1
     258:	30 e0       	ldi	r19, 0x00	; 0
     25a:	40 e0       	ldi	r20, 0x00	; 0
     25c:	50 e0       	ldi	r21, 0x00	; 0
     25e:	04 c0       	rjmp	.+8      	; 0x268 <_fpadd_parts+0xe6>
     260:	22 0f       	add	r18, r18
     262:	33 1f       	adc	r19, r19
     264:	44 1f       	adc	r20, r20
     266:	55 1f       	adc	r21, r21
     268:	6a 95       	dec	r22
     26a:	d2 f7       	brpl	.-12     	; 0x260 <_fpadd_parts+0xde>
     26c:	21 50       	subi	r18, 0x01	; 1
     26e:	30 40       	sbci	r19, 0x00	; 0
     270:	40 40       	sbci	r20, 0x00	; 0
     272:	50 40       	sbci	r21, 0x00	; 0
     274:	2e 21       	and	r18, r14
     276:	3f 21       	and	r19, r15
     278:	40 23       	and	r20, r16
     27a:	51 23       	and	r21, r17
     27c:	21 15       	cp	r18, r1
     27e:	31 05       	cpc	r19, r1
     280:	41 05       	cpc	r20, r1
     282:	51 05       	cpc	r21, r1
     284:	21 f0       	breq	.+8      	; 0x28e <_fpadd_parts+0x10c>
     286:	21 e0       	ldi	r18, 0x01	; 1
     288:	30 e0       	ldi	r19, 0x00	; 0
     28a:	40 e0       	ldi	r20, 0x00	; 0
     28c:	50 e0       	ldi	r21, 0x00	; 0
     28e:	79 01       	movw	r14, r18
     290:	8a 01       	movw	r16, r20
     292:	e6 28       	or	r14, r6
     294:	f7 28       	or	r15, r7
     296:	08 29       	or	r16, r8
     298:	19 29       	or	r17, r9
     29a:	3c c0       	rjmp	.+120    	; 0x314 <_fpadd_parts+0x192>
     29c:	23 2b       	or	r18, r19
     29e:	d1 f1       	breq	.+116    	; 0x314 <_fpadd_parts+0x192>
     2a0:	26 0e       	add	r2, r22
     2a2:	37 1e       	adc	r3, r23
     2a4:	35 01       	movw	r6, r10
     2a6:	46 01       	movw	r8, r12
     2a8:	06 2e       	mov	r0, r22
     2aa:	04 c0       	rjmp	.+8      	; 0x2b4 <_fpadd_parts+0x132>
     2ac:	96 94       	lsr	r9
     2ae:	87 94       	ror	r8
     2b0:	77 94       	ror	r7
     2b2:	67 94       	ror	r6
     2b4:	0a 94       	dec	r0
     2b6:	d2 f7       	brpl	.-12     	; 0x2ac <_fpadd_parts+0x12a>
     2b8:	21 e0       	ldi	r18, 0x01	; 1
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	40 e0       	ldi	r20, 0x00	; 0
     2be:	50 e0       	ldi	r21, 0x00	; 0
     2c0:	04 c0       	rjmp	.+8      	; 0x2ca <_fpadd_parts+0x148>
     2c2:	22 0f       	add	r18, r18
     2c4:	33 1f       	adc	r19, r19
     2c6:	44 1f       	adc	r20, r20
     2c8:	55 1f       	adc	r21, r21
     2ca:	6a 95       	dec	r22
     2cc:	d2 f7       	brpl	.-12     	; 0x2c2 <_fpadd_parts+0x140>
     2ce:	21 50       	subi	r18, 0x01	; 1
     2d0:	30 40       	sbci	r19, 0x00	; 0
     2d2:	40 40       	sbci	r20, 0x00	; 0
     2d4:	50 40       	sbci	r21, 0x00	; 0
     2d6:	2a 21       	and	r18, r10
     2d8:	3b 21       	and	r19, r11
     2da:	4c 21       	and	r20, r12
     2dc:	5d 21       	and	r21, r13
     2de:	21 15       	cp	r18, r1
     2e0:	31 05       	cpc	r19, r1
     2e2:	41 05       	cpc	r20, r1
     2e4:	51 05       	cpc	r21, r1
     2e6:	21 f0       	breq	.+8      	; 0x2f0 <_fpadd_parts+0x16e>
     2e8:	21 e0       	ldi	r18, 0x01	; 1
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	40 e0       	ldi	r20, 0x00	; 0
     2ee:	50 e0       	ldi	r21, 0x00	; 0
     2f0:	59 01       	movw	r10, r18
     2f2:	6a 01       	movw	r12, r20
     2f4:	a6 28       	or	r10, r6
     2f6:	b7 28       	or	r11, r7
     2f8:	c8 28       	or	r12, r8
     2fa:	d9 28       	or	r13, r9
     2fc:	0b c0       	rjmp	.+22     	; 0x314 <_fpadd_parts+0x192>
     2fe:	82 15       	cp	r24, r2
     300:	93 05       	cpc	r25, r3
     302:	2c f0       	brlt	.+10     	; 0x30e <_fpadd_parts+0x18c>
     304:	1c 01       	movw	r2, r24
     306:	aa 24       	eor	r10, r10
     308:	bb 24       	eor	r11, r11
     30a:	65 01       	movw	r12, r10
     30c:	03 c0       	rjmp	.+6      	; 0x314 <_fpadd_parts+0x192>
     30e:	ee 24       	eor	r14, r14
     310:	ff 24       	eor	r15, r15
     312:	87 01       	movw	r16, r14
     314:	11 96       	adiw	r26, 0x01	; 1
     316:	9c 91       	ld	r25, X
     318:	d2 01       	movw	r26, r4
     31a:	11 96       	adiw	r26, 0x01	; 1
     31c:	8c 91       	ld	r24, X
     31e:	98 17       	cp	r25, r24
     320:	09 f4       	brne	.+2      	; 0x324 <_fpadd_parts+0x1a2>
     322:	45 c0       	rjmp	.+138    	; 0x3ae <_fpadd_parts+0x22c>
     324:	99 23       	and	r25, r25
     326:	39 f0       	breq	.+14     	; 0x336 <_fpadd_parts+0x1b4>
     328:	a8 01       	movw	r20, r16
     32a:	97 01       	movw	r18, r14
     32c:	2a 19       	sub	r18, r10
     32e:	3b 09       	sbc	r19, r11
     330:	4c 09       	sbc	r20, r12
     332:	5d 09       	sbc	r21, r13
     334:	06 c0       	rjmp	.+12     	; 0x342 <_fpadd_parts+0x1c0>
     336:	a6 01       	movw	r20, r12
     338:	95 01       	movw	r18, r10
     33a:	2e 19       	sub	r18, r14
     33c:	3f 09       	sbc	r19, r15
     33e:	40 0b       	sbc	r20, r16
     340:	51 0b       	sbc	r21, r17
     342:	57 fd       	sbrc	r21, 7
     344:	08 c0       	rjmp	.+16     	; 0x356 <_fpadd_parts+0x1d4>
     346:	11 82       	std	Z+1, r1	; 0x01
     348:	33 82       	std	Z+3, r3	; 0x03
     34a:	22 82       	std	Z+2, r2	; 0x02
     34c:	24 83       	std	Z+4, r18	; 0x04
     34e:	35 83       	std	Z+5, r19	; 0x05
     350:	46 83       	std	Z+6, r20	; 0x06
     352:	57 83       	std	Z+7, r21	; 0x07
     354:	1d c0       	rjmp	.+58     	; 0x390 <_fpadd_parts+0x20e>
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	81 83       	std	Z+1, r24	; 0x01
     35a:	33 82       	std	Z+3, r3	; 0x03
     35c:	22 82       	std	Z+2, r2	; 0x02
     35e:	88 27       	eor	r24, r24
     360:	99 27       	eor	r25, r25
     362:	dc 01       	movw	r26, r24
     364:	82 1b       	sub	r24, r18
     366:	93 0b       	sbc	r25, r19
     368:	a4 0b       	sbc	r26, r20
     36a:	b5 0b       	sbc	r27, r21
     36c:	84 83       	std	Z+4, r24	; 0x04
     36e:	95 83       	std	Z+5, r25	; 0x05
     370:	a6 83       	std	Z+6, r26	; 0x06
     372:	b7 83       	std	Z+7, r27	; 0x07
     374:	0d c0       	rjmp	.+26     	; 0x390 <_fpadd_parts+0x20e>
     376:	22 0f       	add	r18, r18
     378:	33 1f       	adc	r19, r19
     37a:	44 1f       	adc	r20, r20
     37c:	55 1f       	adc	r21, r21
     37e:	24 83       	std	Z+4, r18	; 0x04
     380:	35 83       	std	Z+5, r19	; 0x05
     382:	46 83       	std	Z+6, r20	; 0x06
     384:	57 83       	std	Z+7, r21	; 0x07
     386:	82 81       	ldd	r24, Z+2	; 0x02
     388:	93 81       	ldd	r25, Z+3	; 0x03
     38a:	01 97       	sbiw	r24, 0x01	; 1
     38c:	93 83       	std	Z+3, r25	; 0x03
     38e:	82 83       	std	Z+2, r24	; 0x02
     390:	24 81       	ldd	r18, Z+4	; 0x04
     392:	35 81       	ldd	r19, Z+5	; 0x05
     394:	46 81       	ldd	r20, Z+6	; 0x06
     396:	57 81       	ldd	r21, Z+7	; 0x07
     398:	da 01       	movw	r26, r20
     39a:	c9 01       	movw	r24, r18
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	a1 09       	sbc	r26, r1
     3a0:	b1 09       	sbc	r27, r1
     3a2:	8f 5f       	subi	r24, 0xFF	; 255
     3a4:	9f 4f       	sbci	r25, 0xFF	; 255
     3a6:	af 4f       	sbci	r26, 0xFF	; 255
     3a8:	bf 43       	sbci	r27, 0x3F	; 63
     3aa:	28 f3       	brcs	.-54     	; 0x376 <_fpadd_parts+0x1f4>
     3ac:	0b c0       	rjmp	.+22     	; 0x3c4 <_fpadd_parts+0x242>
     3ae:	91 83       	std	Z+1, r25	; 0x01
     3b0:	33 82       	std	Z+3, r3	; 0x03
     3b2:	22 82       	std	Z+2, r2	; 0x02
     3b4:	ea 0c       	add	r14, r10
     3b6:	fb 1c       	adc	r15, r11
     3b8:	0c 1d       	adc	r16, r12
     3ba:	1d 1d       	adc	r17, r13
     3bc:	e4 82       	std	Z+4, r14	; 0x04
     3be:	f5 82       	std	Z+5, r15	; 0x05
     3c0:	06 83       	std	Z+6, r16	; 0x06
     3c2:	17 83       	std	Z+7, r17	; 0x07
     3c4:	83 e0       	ldi	r24, 0x03	; 3
     3c6:	80 83       	st	Z, r24
     3c8:	24 81       	ldd	r18, Z+4	; 0x04
     3ca:	35 81       	ldd	r19, Z+5	; 0x05
     3cc:	46 81       	ldd	r20, Z+6	; 0x06
     3ce:	57 81       	ldd	r21, Z+7	; 0x07
     3d0:	57 ff       	sbrs	r21, 7
     3d2:	1a c0       	rjmp	.+52     	; 0x408 <_fpadd_parts+0x286>
     3d4:	c9 01       	movw	r24, r18
     3d6:	aa 27       	eor	r26, r26
     3d8:	97 fd       	sbrc	r25, 7
     3da:	a0 95       	com	r26
     3dc:	ba 2f       	mov	r27, r26
     3de:	81 70       	andi	r24, 0x01	; 1
     3e0:	90 70       	andi	r25, 0x00	; 0
     3e2:	a0 70       	andi	r26, 0x00	; 0
     3e4:	b0 70       	andi	r27, 0x00	; 0
     3e6:	56 95       	lsr	r21
     3e8:	47 95       	ror	r20
     3ea:	37 95       	ror	r19
     3ec:	27 95       	ror	r18
     3ee:	82 2b       	or	r24, r18
     3f0:	93 2b       	or	r25, r19
     3f2:	a4 2b       	or	r26, r20
     3f4:	b5 2b       	or	r27, r21
     3f6:	84 83       	std	Z+4, r24	; 0x04
     3f8:	95 83       	std	Z+5, r25	; 0x05
     3fa:	a6 83       	std	Z+6, r26	; 0x06
     3fc:	b7 83       	std	Z+7, r27	; 0x07
     3fe:	82 81       	ldd	r24, Z+2	; 0x02
     400:	93 81       	ldd	r25, Z+3	; 0x03
     402:	01 96       	adiw	r24, 0x01	; 1
     404:	93 83       	std	Z+3, r25	; 0x03
     406:	82 83       	std	Z+2, r24	; 0x02
     408:	df 01       	movw	r26, r30
     40a:	01 c0       	rjmp	.+2      	; 0x40e <_fpadd_parts+0x28c>
     40c:	d2 01       	movw	r26, r4
     40e:	cd 01       	movw	r24, r26
     410:	cd b7       	in	r28, 0x3d	; 61
     412:	de b7       	in	r29, 0x3e	; 62
     414:	e2 e1       	ldi	r30, 0x12	; 18
     416:	0c 94 b1 13 	jmp	0x2762	; 0x2762 <__epilogue_restores__>

0000041a <__subsf3>:
     41a:	a0 e2       	ldi	r26, 0x20	; 32
     41c:	b0 e0       	ldi	r27, 0x00	; 0
     41e:	e3 e1       	ldi	r30, 0x13	; 19
     420:	f2 e0       	ldi	r31, 0x02	; 2
     422:	0c 94 a1 13 	jmp	0x2742	; 0x2742 <__prologue_saves__+0x18>
     426:	69 83       	std	Y+1, r22	; 0x01
     428:	7a 83       	std	Y+2, r23	; 0x02
     42a:	8b 83       	std	Y+3, r24	; 0x03
     42c:	9c 83       	std	Y+4, r25	; 0x04
     42e:	2d 83       	std	Y+5, r18	; 0x05
     430:	3e 83       	std	Y+6, r19	; 0x06
     432:	4f 83       	std	Y+7, r20	; 0x07
     434:	58 87       	std	Y+8, r21	; 0x08
     436:	e9 e0       	ldi	r30, 0x09	; 9
     438:	ee 2e       	mov	r14, r30
     43a:	f1 2c       	mov	r15, r1
     43c:	ec 0e       	add	r14, r28
     43e:	fd 1e       	adc	r15, r29
     440:	ce 01       	movw	r24, r28
     442:	01 96       	adiw	r24, 0x01	; 1
     444:	b7 01       	movw	r22, r14
     446:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     44a:	8e 01       	movw	r16, r28
     44c:	0f 5e       	subi	r16, 0xEF	; 239
     44e:	1f 4f       	sbci	r17, 0xFF	; 255
     450:	ce 01       	movw	r24, r28
     452:	05 96       	adiw	r24, 0x05	; 5
     454:	b8 01       	movw	r22, r16
     456:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     45a:	8a 89       	ldd	r24, Y+18	; 0x12
     45c:	91 e0       	ldi	r25, 0x01	; 1
     45e:	89 27       	eor	r24, r25
     460:	8a 8b       	std	Y+18, r24	; 0x12
     462:	c7 01       	movw	r24, r14
     464:	b8 01       	movw	r22, r16
     466:	ae 01       	movw	r20, r28
     468:	47 5e       	subi	r20, 0xE7	; 231
     46a:	5f 4f       	sbci	r21, 0xFF	; 255
     46c:	0e 94 c1 00 	call	0x182	; 0x182 <_fpadd_parts>
     470:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__pack_f>
     474:	a0 96       	adiw	r28, 0x20	; 32
     476:	e6 e0       	ldi	r30, 0x06	; 6
     478:	0c 94 bd 13 	jmp	0x277a	; 0x277a <__epilogue_restores__+0x18>

0000047c <__addsf3>:
     47c:	a0 e2       	ldi	r26, 0x20	; 32
     47e:	b0 e0       	ldi	r27, 0x00	; 0
     480:	e4 e4       	ldi	r30, 0x44	; 68
     482:	f2 e0       	ldi	r31, 0x02	; 2
     484:	0c 94 a1 13 	jmp	0x2742	; 0x2742 <__prologue_saves__+0x18>
     488:	69 83       	std	Y+1, r22	; 0x01
     48a:	7a 83       	std	Y+2, r23	; 0x02
     48c:	8b 83       	std	Y+3, r24	; 0x03
     48e:	9c 83       	std	Y+4, r25	; 0x04
     490:	2d 83       	std	Y+5, r18	; 0x05
     492:	3e 83       	std	Y+6, r19	; 0x06
     494:	4f 83       	std	Y+7, r20	; 0x07
     496:	58 87       	std	Y+8, r21	; 0x08
     498:	f9 e0       	ldi	r31, 0x09	; 9
     49a:	ef 2e       	mov	r14, r31
     49c:	f1 2c       	mov	r15, r1
     49e:	ec 0e       	add	r14, r28
     4a0:	fd 1e       	adc	r15, r29
     4a2:	ce 01       	movw	r24, r28
     4a4:	01 96       	adiw	r24, 0x01	; 1
     4a6:	b7 01       	movw	r22, r14
     4a8:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     4ac:	8e 01       	movw	r16, r28
     4ae:	0f 5e       	subi	r16, 0xEF	; 239
     4b0:	1f 4f       	sbci	r17, 0xFF	; 255
     4b2:	ce 01       	movw	r24, r28
     4b4:	05 96       	adiw	r24, 0x05	; 5
     4b6:	b8 01       	movw	r22, r16
     4b8:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     4bc:	c7 01       	movw	r24, r14
     4be:	b8 01       	movw	r22, r16
     4c0:	ae 01       	movw	r20, r28
     4c2:	47 5e       	subi	r20, 0xE7	; 231
     4c4:	5f 4f       	sbci	r21, 0xFF	; 255
     4c6:	0e 94 c1 00 	call	0x182	; 0x182 <_fpadd_parts>
     4ca:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__pack_f>
     4ce:	a0 96       	adiw	r28, 0x20	; 32
     4d0:	e6 e0       	ldi	r30, 0x06	; 6
     4d2:	0c 94 bd 13 	jmp	0x277a	; 0x277a <__epilogue_restores__+0x18>

000004d6 <__mulsf3>:
     4d6:	a0 e2       	ldi	r26, 0x20	; 32
     4d8:	b0 e0       	ldi	r27, 0x00	; 0
     4da:	e1 e7       	ldi	r30, 0x71	; 113
     4dc:	f2 e0       	ldi	r31, 0x02	; 2
     4de:	0c 94 95 13 	jmp	0x272a	; 0x272a <__prologue_saves__>
     4e2:	69 83       	std	Y+1, r22	; 0x01
     4e4:	7a 83       	std	Y+2, r23	; 0x02
     4e6:	8b 83       	std	Y+3, r24	; 0x03
     4e8:	9c 83       	std	Y+4, r25	; 0x04
     4ea:	2d 83       	std	Y+5, r18	; 0x05
     4ec:	3e 83       	std	Y+6, r19	; 0x06
     4ee:	4f 83       	std	Y+7, r20	; 0x07
     4f0:	58 87       	std	Y+8, r21	; 0x08
     4f2:	ce 01       	movw	r24, r28
     4f4:	01 96       	adiw	r24, 0x01	; 1
     4f6:	be 01       	movw	r22, r28
     4f8:	67 5f       	subi	r22, 0xF7	; 247
     4fa:	7f 4f       	sbci	r23, 0xFF	; 255
     4fc:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     500:	ce 01       	movw	r24, r28
     502:	05 96       	adiw	r24, 0x05	; 5
     504:	be 01       	movw	r22, r28
     506:	6f 5e       	subi	r22, 0xEF	; 239
     508:	7f 4f       	sbci	r23, 0xFF	; 255
     50a:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     50e:	99 85       	ldd	r25, Y+9	; 0x09
     510:	92 30       	cpi	r25, 0x02	; 2
     512:	88 f0       	brcs	.+34     	; 0x536 <__mulsf3+0x60>
     514:	89 89       	ldd	r24, Y+17	; 0x11
     516:	82 30       	cpi	r24, 0x02	; 2
     518:	c8 f0       	brcs	.+50     	; 0x54c <__mulsf3+0x76>
     51a:	94 30       	cpi	r25, 0x04	; 4
     51c:	19 f4       	brne	.+6      	; 0x524 <__mulsf3+0x4e>
     51e:	82 30       	cpi	r24, 0x02	; 2
     520:	51 f4       	brne	.+20     	; 0x536 <__mulsf3+0x60>
     522:	04 c0       	rjmp	.+8      	; 0x52c <__mulsf3+0x56>
     524:	84 30       	cpi	r24, 0x04	; 4
     526:	29 f4       	brne	.+10     	; 0x532 <__mulsf3+0x5c>
     528:	92 30       	cpi	r25, 0x02	; 2
     52a:	81 f4       	brne	.+32     	; 0x54c <__mulsf3+0x76>
     52c:	85 e1       	ldi	r24, 0x15	; 21
     52e:	92 e0       	ldi	r25, 0x02	; 2
     530:	c6 c0       	rjmp	.+396    	; 0x6be <__mulsf3+0x1e8>
     532:	92 30       	cpi	r25, 0x02	; 2
     534:	49 f4       	brne	.+18     	; 0x548 <__mulsf3+0x72>
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	9a 85       	ldd	r25, Y+10	; 0x0a
     53a:	8a 89       	ldd	r24, Y+18	; 0x12
     53c:	98 13       	cpse	r25, r24
     53e:	21 e0       	ldi	r18, 0x01	; 1
     540:	2a 87       	std	Y+10, r18	; 0x0a
     542:	ce 01       	movw	r24, r28
     544:	09 96       	adiw	r24, 0x09	; 9
     546:	bb c0       	rjmp	.+374    	; 0x6be <__mulsf3+0x1e8>
     548:	82 30       	cpi	r24, 0x02	; 2
     54a:	49 f4       	brne	.+18     	; 0x55e <__mulsf3+0x88>
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	9a 85       	ldd	r25, Y+10	; 0x0a
     550:	8a 89       	ldd	r24, Y+18	; 0x12
     552:	98 13       	cpse	r25, r24
     554:	21 e0       	ldi	r18, 0x01	; 1
     556:	2a 8b       	std	Y+18, r18	; 0x12
     558:	ce 01       	movw	r24, r28
     55a:	41 96       	adiw	r24, 0x11	; 17
     55c:	b0 c0       	rjmp	.+352    	; 0x6be <__mulsf3+0x1e8>
     55e:	2d 84       	ldd	r2, Y+13	; 0x0d
     560:	3e 84       	ldd	r3, Y+14	; 0x0e
     562:	4f 84       	ldd	r4, Y+15	; 0x0f
     564:	58 88       	ldd	r5, Y+16	; 0x10
     566:	6d 88       	ldd	r6, Y+21	; 0x15
     568:	7e 88       	ldd	r7, Y+22	; 0x16
     56a:	8f 88       	ldd	r8, Y+23	; 0x17
     56c:	98 8c       	ldd	r9, Y+24	; 0x18
     56e:	ee 24       	eor	r14, r14
     570:	ff 24       	eor	r15, r15
     572:	87 01       	movw	r16, r14
     574:	aa 24       	eor	r10, r10
     576:	bb 24       	eor	r11, r11
     578:	65 01       	movw	r12, r10
     57a:	40 e0       	ldi	r20, 0x00	; 0
     57c:	50 e0       	ldi	r21, 0x00	; 0
     57e:	60 e0       	ldi	r22, 0x00	; 0
     580:	70 e0       	ldi	r23, 0x00	; 0
     582:	e0 e0       	ldi	r30, 0x00	; 0
     584:	f0 e0       	ldi	r31, 0x00	; 0
     586:	c1 01       	movw	r24, r2
     588:	81 70       	andi	r24, 0x01	; 1
     58a:	90 70       	andi	r25, 0x00	; 0
     58c:	89 2b       	or	r24, r25
     58e:	e9 f0       	breq	.+58     	; 0x5ca <__mulsf3+0xf4>
     590:	e6 0c       	add	r14, r6
     592:	f7 1c       	adc	r15, r7
     594:	08 1d       	adc	r16, r8
     596:	19 1d       	adc	r17, r9
     598:	9a 01       	movw	r18, r20
     59a:	ab 01       	movw	r20, r22
     59c:	2a 0d       	add	r18, r10
     59e:	3b 1d       	adc	r19, r11
     5a0:	4c 1d       	adc	r20, r12
     5a2:	5d 1d       	adc	r21, r13
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	a0 e0       	ldi	r26, 0x00	; 0
     5aa:	b0 e0       	ldi	r27, 0x00	; 0
     5ac:	e6 14       	cp	r14, r6
     5ae:	f7 04       	cpc	r15, r7
     5b0:	08 05       	cpc	r16, r8
     5b2:	19 05       	cpc	r17, r9
     5b4:	20 f4       	brcc	.+8      	; 0x5be <__mulsf3+0xe8>
     5b6:	81 e0       	ldi	r24, 0x01	; 1
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	a0 e0       	ldi	r26, 0x00	; 0
     5bc:	b0 e0       	ldi	r27, 0x00	; 0
     5be:	ba 01       	movw	r22, r20
     5c0:	a9 01       	movw	r20, r18
     5c2:	48 0f       	add	r20, r24
     5c4:	59 1f       	adc	r21, r25
     5c6:	6a 1f       	adc	r22, r26
     5c8:	7b 1f       	adc	r23, r27
     5ca:	aa 0c       	add	r10, r10
     5cc:	bb 1c       	adc	r11, r11
     5ce:	cc 1c       	adc	r12, r12
     5d0:	dd 1c       	adc	r13, r13
     5d2:	97 fe       	sbrs	r9, 7
     5d4:	08 c0       	rjmp	.+16     	; 0x5e6 <__mulsf3+0x110>
     5d6:	81 e0       	ldi	r24, 0x01	; 1
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	a0 e0       	ldi	r26, 0x00	; 0
     5dc:	b0 e0       	ldi	r27, 0x00	; 0
     5de:	a8 2a       	or	r10, r24
     5e0:	b9 2a       	or	r11, r25
     5e2:	ca 2a       	or	r12, r26
     5e4:	db 2a       	or	r13, r27
     5e6:	31 96       	adiw	r30, 0x01	; 1
     5e8:	e0 32       	cpi	r30, 0x20	; 32
     5ea:	f1 05       	cpc	r31, r1
     5ec:	49 f0       	breq	.+18     	; 0x600 <__mulsf3+0x12a>
     5ee:	66 0c       	add	r6, r6
     5f0:	77 1c       	adc	r7, r7
     5f2:	88 1c       	adc	r8, r8
     5f4:	99 1c       	adc	r9, r9
     5f6:	56 94       	lsr	r5
     5f8:	47 94       	ror	r4
     5fa:	37 94       	ror	r3
     5fc:	27 94       	ror	r2
     5fe:	c3 cf       	rjmp	.-122    	; 0x586 <__mulsf3+0xb0>
     600:	fa 85       	ldd	r31, Y+10	; 0x0a
     602:	ea 89       	ldd	r30, Y+18	; 0x12
     604:	2b 89       	ldd	r18, Y+19	; 0x13
     606:	3c 89       	ldd	r19, Y+20	; 0x14
     608:	8b 85       	ldd	r24, Y+11	; 0x0b
     60a:	9c 85       	ldd	r25, Y+12	; 0x0c
     60c:	28 0f       	add	r18, r24
     60e:	39 1f       	adc	r19, r25
     610:	2e 5f       	subi	r18, 0xFE	; 254
     612:	3f 4f       	sbci	r19, 0xFF	; 255
     614:	17 c0       	rjmp	.+46     	; 0x644 <__mulsf3+0x16e>
     616:	ca 01       	movw	r24, r20
     618:	81 70       	andi	r24, 0x01	; 1
     61a:	90 70       	andi	r25, 0x00	; 0
     61c:	89 2b       	or	r24, r25
     61e:	61 f0       	breq	.+24     	; 0x638 <__mulsf3+0x162>
     620:	16 95       	lsr	r17
     622:	07 95       	ror	r16
     624:	f7 94       	ror	r15
     626:	e7 94       	ror	r14
     628:	80 e0       	ldi	r24, 0x00	; 0
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	a0 e0       	ldi	r26, 0x00	; 0
     62e:	b0 e8       	ldi	r27, 0x80	; 128
     630:	e8 2a       	or	r14, r24
     632:	f9 2a       	or	r15, r25
     634:	0a 2b       	or	r16, r26
     636:	1b 2b       	or	r17, r27
     638:	76 95       	lsr	r23
     63a:	67 95       	ror	r22
     63c:	57 95       	ror	r21
     63e:	47 95       	ror	r20
     640:	2f 5f       	subi	r18, 0xFF	; 255
     642:	3f 4f       	sbci	r19, 0xFF	; 255
     644:	77 fd       	sbrc	r23, 7
     646:	e7 cf       	rjmp	.-50     	; 0x616 <__mulsf3+0x140>
     648:	0c c0       	rjmp	.+24     	; 0x662 <__mulsf3+0x18c>
     64a:	44 0f       	add	r20, r20
     64c:	55 1f       	adc	r21, r21
     64e:	66 1f       	adc	r22, r22
     650:	77 1f       	adc	r23, r23
     652:	17 fd       	sbrc	r17, 7
     654:	41 60       	ori	r20, 0x01	; 1
     656:	ee 0c       	add	r14, r14
     658:	ff 1c       	adc	r15, r15
     65a:	00 1f       	adc	r16, r16
     65c:	11 1f       	adc	r17, r17
     65e:	21 50       	subi	r18, 0x01	; 1
     660:	30 40       	sbci	r19, 0x00	; 0
     662:	40 30       	cpi	r20, 0x00	; 0
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	59 07       	cpc	r21, r25
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	69 07       	cpc	r22, r25
     66c:	90 e4       	ldi	r25, 0x40	; 64
     66e:	79 07       	cpc	r23, r25
     670:	60 f3       	brcs	.-40     	; 0x64a <__mulsf3+0x174>
     672:	2b 8f       	std	Y+27, r18	; 0x1b
     674:	3c 8f       	std	Y+28, r19	; 0x1c
     676:	db 01       	movw	r26, r22
     678:	ca 01       	movw	r24, r20
     67a:	8f 77       	andi	r24, 0x7F	; 127
     67c:	90 70       	andi	r25, 0x00	; 0
     67e:	a0 70       	andi	r26, 0x00	; 0
     680:	b0 70       	andi	r27, 0x00	; 0
     682:	80 34       	cpi	r24, 0x40	; 64
     684:	91 05       	cpc	r25, r1
     686:	a1 05       	cpc	r26, r1
     688:	b1 05       	cpc	r27, r1
     68a:	61 f4       	brne	.+24     	; 0x6a4 <__mulsf3+0x1ce>
     68c:	47 fd       	sbrc	r20, 7
     68e:	0a c0       	rjmp	.+20     	; 0x6a4 <__mulsf3+0x1ce>
     690:	e1 14       	cp	r14, r1
     692:	f1 04       	cpc	r15, r1
     694:	01 05       	cpc	r16, r1
     696:	11 05       	cpc	r17, r1
     698:	29 f0       	breq	.+10     	; 0x6a4 <__mulsf3+0x1ce>
     69a:	40 5c       	subi	r20, 0xC0	; 192
     69c:	5f 4f       	sbci	r21, 0xFF	; 255
     69e:	6f 4f       	sbci	r22, 0xFF	; 255
     6a0:	7f 4f       	sbci	r23, 0xFF	; 255
     6a2:	40 78       	andi	r20, 0x80	; 128
     6a4:	1a 8e       	std	Y+26, r1	; 0x1a
     6a6:	fe 17       	cp	r31, r30
     6a8:	11 f0       	breq	.+4      	; 0x6ae <__mulsf3+0x1d8>
     6aa:	81 e0       	ldi	r24, 0x01	; 1
     6ac:	8a 8f       	std	Y+26, r24	; 0x1a
     6ae:	4d 8f       	std	Y+29, r20	; 0x1d
     6b0:	5e 8f       	std	Y+30, r21	; 0x1e
     6b2:	6f 8f       	std	Y+31, r22	; 0x1f
     6b4:	78 a3       	std	Y+32, r23	; 0x20
     6b6:	83 e0       	ldi	r24, 0x03	; 3
     6b8:	89 8f       	std	Y+25, r24	; 0x19
     6ba:	ce 01       	movw	r24, r28
     6bc:	49 96       	adiw	r24, 0x19	; 25
     6be:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__pack_f>
     6c2:	a0 96       	adiw	r28, 0x20	; 32
     6c4:	e2 e1       	ldi	r30, 0x12	; 18
     6c6:	0c 94 b1 13 	jmp	0x2762	; 0x2762 <__epilogue_restores__>

000006ca <__divsf3>:
     6ca:	a8 e1       	ldi	r26, 0x18	; 24
     6cc:	b0 e0       	ldi	r27, 0x00	; 0
     6ce:	eb e6       	ldi	r30, 0x6B	; 107
     6d0:	f3 e0       	ldi	r31, 0x03	; 3
     6d2:	0c 94 9d 13 	jmp	0x273a	; 0x273a <__prologue_saves__+0x10>
     6d6:	69 83       	std	Y+1, r22	; 0x01
     6d8:	7a 83       	std	Y+2, r23	; 0x02
     6da:	8b 83       	std	Y+3, r24	; 0x03
     6dc:	9c 83       	std	Y+4, r25	; 0x04
     6de:	2d 83       	std	Y+5, r18	; 0x05
     6e0:	3e 83       	std	Y+6, r19	; 0x06
     6e2:	4f 83       	std	Y+7, r20	; 0x07
     6e4:	58 87       	std	Y+8, r21	; 0x08
     6e6:	b9 e0       	ldi	r27, 0x09	; 9
     6e8:	eb 2e       	mov	r14, r27
     6ea:	f1 2c       	mov	r15, r1
     6ec:	ec 0e       	add	r14, r28
     6ee:	fd 1e       	adc	r15, r29
     6f0:	ce 01       	movw	r24, r28
     6f2:	01 96       	adiw	r24, 0x01	; 1
     6f4:	b7 01       	movw	r22, r14
     6f6:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     6fa:	8e 01       	movw	r16, r28
     6fc:	0f 5e       	subi	r16, 0xEF	; 239
     6fe:	1f 4f       	sbci	r17, 0xFF	; 255
     700:	ce 01       	movw	r24, r28
     702:	05 96       	adiw	r24, 0x05	; 5
     704:	b8 01       	movw	r22, r16
     706:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     70a:	29 85       	ldd	r18, Y+9	; 0x09
     70c:	22 30       	cpi	r18, 0x02	; 2
     70e:	08 f4       	brcc	.+2      	; 0x712 <__divsf3+0x48>
     710:	7e c0       	rjmp	.+252    	; 0x80e <__divsf3+0x144>
     712:	39 89       	ldd	r19, Y+17	; 0x11
     714:	32 30       	cpi	r19, 0x02	; 2
     716:	10 f4       	brcc	.+4      	; 0x71c <__divsf3+0x52>
     718:	b8 01       	movw	r22, r16
     71a:	7c c0       	rjmp	.+248    	; 0x814 <__divsf3+0x14a>
     71c:	8a 85       	ldd	r24, Y+10	; 0x0a
     71e:	9a 89       	ldd	r25, Y+18	; 0x12
     720:	89 27       	eor	r24, r25
     722:	8a 87       	std	Y+10, r24	; 0x0a
     724:	24 30       	cpi	r18, 0x04	; 4
     726:	11 f0       	breq	.+4      	; 0x72c <__divsf3+0x62>
     728:	22 30       	cpi	r18, 0x02	; 2
     72a:	31 f4       	brne	.+12     	; 0x738 <__divsf3+0x6e>
     72c:	23 17       	cp	r18, r19
     72e:	09 f0       	breq	.+2      	; 0x732 <__divsf3+0x68>
     730:	6e c0       	rjmp	.+220    	; 0x80e <__divsf3+0x144>
     732:	65 e1       	ldi	r22, 0x15	; 21
     734:	72 e0       	ldi	r23, 0x02	; 2
     736:	6e c0       	rjmp	.+220    	; 0x814 <__divsf3+0x14a>
     738:	34 30       	cpi	r19, 0x04	; 4
     73a:	39 f4       	brne	.+14     	; 0x74a <__divsf3+0x80>
     73c:	1d 86       	std	Y+13, r1	; 0x0d
     73e:	1e 86       	std	Y+14, r1	; 0x0e
     740:	1f 86       	std	Y+15, r1	; 0x0f
     742:	18 8a       	std	Y+16, r1	; 0x10
     744:	1c 86       	std	Y+12, r1	; 0x0c
     746:	1b 86       	std	Y+11, r1	; 0x0b
     748:	04 c0       	rjmp	.+8      	; 0x752 <__divsf3+0x88>
     74a:	32 30       	cpi	r19, 0x02	; 2
     74c:	21 f4       	brne	.+8      	; 0x756 <__divsf3+0x8c>
     74e:	84 e0       	ldi	r24, 0x04	; 4
     750:	89 87       	std	Y+9, r24	; 0x09
     752:	b7 01       	movw	r22, r14
     754:	5f c0       	rjmp	.+190    	; 0x814 <__divsf3+0x14a>
     756:	2b 85       	ldd	r18, Y+11	; 0x0b
     758:	3c 85       	ldd	r19, Y+12	; 0x0c
     75a:	8b 89       	ldd	r24, Y+19	; 0x13
     75c:	9c 89       	ldd	r25, Y+20	; 0x14
     75e:	28 1b       	sub	r18, r24
     760:	39 0b       	sbc	r19, r25
     762:	3c 87       	std	Y+12, r19	; 0x0c
     764:	2b 87       	std	Y+11, r18	; 0x0b
     766:	ed 84       	ldd	r14, Y+13	; 0x0d
     768:	fe 84       	ldd	r15, Y+14	; 0x0e
     76a:	0f 85       	ldd	r16, Y+15	; 0x0f
     76c:	18 89       	ldd	r17, Y+16	; 0x10
     76e:	ad 88       	ldd	r10, Y+21	; 0x15
     770:	be 88       	ldd	r11, Y+22	; 0x16
     772:	cf 88       	ldd	r12, Y+23	; 0x17
     774:	d8 8c       	ldd	r13, Y+24	; 0x18
     776:	ea 14       	cp	r14, r10
     778:	fb 04       	cpc	r15, r11
     77a:	0c 05       	cpc	r16, r12
     77c:	1d 05       	cpc	r17, r13
     77e:	40 f4       	brcc	.+16     	; 0x790 <__divsf3+0xc6>
     780:	ee 0c       	add	r14, r14
     782:	ff 1c       	adc	r15, r15
     784:	00 1f       	adc	r16, r16
     786:	11 1f       	adc	r17, r17
     788:	21 50       	subi	r18, 0x01	; 1
     78a:	30 40       	sbci	r19, 0x00	; 0
     78c:	3c 87       	std	Y+12, r19	; 0x0c
     78e:	2b 87       	std	Y+11, r18	; 0x0b
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	40 e0       	ldi	r20, 0x00	; 0
     796:	50 e0       	ldi	r21, 0x00	; 0
     798:	80 e0       	ldi	r24, 0x00	; 0
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	a0 e0       	ldi	r26, 0x00	; 0
     79e:	b0 e4       	ldi	r27, 0x40	; 64
     7a0:	60 e0       	ldi	r22, 0x00	; 0
     7a2:	70 e0       	ldi	r23, 0x00	; 0
     7a4:	ea 14       	cp	r14, r10
     7a6:	fb 04       	cpc	r15, r11
     7a8:	0c 05       	cpc	r16, r12
     7aa:	1d 05       	cpc	r17, r13
     7ac:	40 f0       	brcs	.+16     	; 0x7be <__divsf3+0xf4>
     7ae:	28 2b       	or	r18, r24
     7b0:	39 2b       	or	r19, r25
     7b2:	4a 2b       	or	r20, r26
     7b4:	5b 2b       	or	r21, r27
     7b6:	ea 18       	sub	r14, r10
     7b8:	fb 08       	sbc	r15, r11
     7ba:	0c 09       	sbc	r16, r12
     7bc:	1d 09       	sbc	r17, r13
     7be:	b6 95       	lsr	r27
     7c0:	a7 95       	ror	r26
     7c2:	97 95       	ror	r25
     7c4:	87 95       	ror	r24
     7c6:	ee 0c       	add	r14, r14
     7c8:	ff 1c       	adc	r15, r15
     7ca:	00 1f       	adc	r16, r16
     7cc:	11 1f       	adc	r17, r17
     7ce:	6f 5f       	subi	r22, 0xFF	; 255
     7d0:	7f 4f       	sbci	r23, 0xFF	; 255
     7d2:	6f 31       	cpi	r22, 0x1F	; 31
     7d4:	71 05       	cpc	r23, r1
     7d6:	31 f7       	brne	.-52     	; 0x7a4 <__divsf3+0xda>
     7d8:	da 01       	movw	r26, r20
     7da:	c9 01       	movw	r24, r18
     7dc:	8f 77       	andi	r24, 0x7F	; 127
     7de:	90 70       	andi	r25, 0x00	; 0
     7e0:	a0 70       	andi	r26, 0x00	; 0
     7e2:	b0 70       	andi	r27, 0x00	; 0
     7e4:	80 34       	cpi	r24, 0x40	; 64
     7e6:	91 05       	cpc	r25, r1
     7e8:	a1 05       	cpc	r26, r1
     7ea:	b1 05       	cpc	r27, r1
     7ec:	61 f4       	brne	.+24     	; 0x806 <__divsf3+0x13c>
     7ee:	27 fd       	sbrc	r18, 7
     7f0:	0a c0       	rjmp	.+20     	; 0x806 <__divsf3+0x13c>
     7f2:	e1 14       	cp	r14, r1
     7f4:	f1 04       	cpc	r15, r1
     7f6:	01 05       	cpc	r16, r1
     7f8:	11 05       	cpc	r17, r1
     7fa:	29 f0       	breq	.+10     	; 0x806 <__divsf3+0x13c>
     7fc:	20 5c       	subi	r18, 0xC0	; 192
     7fe:	3f 4f       	sbci	r19, 0xFF	; 255
     800:	4f 4f       	sbci	r20, 0xFF	; 255
     802:	5f 4f       	sbci	r21, 0xFF	; 255
     804:	20 78       	andi	r18, 0x80	; 128
     806:	2d 87       	std	Y+13, r18	; 0x0d
     808:	3e 87       	std	Y+14, r19	; 0x0e
     80a:	4f 87       	std	Y+15, r20	; 0x0f
     80c:	58 8b       	std	Y+16, r21	; 0x10
     80e:	be 01       	movw	r22, r28
     810:	67 5f       	subi	r22, 0xF7	; 247
     812:	7f 4f       	sbci	r23, 0xFF	; 255
     814:	cb 01       	movw	r24, r22
     816:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__pack_f>
     81a:	68 96       	adiw	r28, 0x18	; 24
     81c:	ea e0       	ldi	r30, 0x0A	; 10
     81e:	0c 94 b9 13 	jmp	0x2772	; 0x2772 <__epilogue_restores__+0x10>

00000822 <__gtsf2>:
     822:	a8 e1       	ldi	r26, 0x18	; 24
     824:	b0 e0       	ldi	r27, 0x00	; 0
     826:	e7 e1       	ldi	r30, 0x17	; 23
     828:	f4 e0       	ldi	r31, 0x04	; 4
     82a:	0c 94 a1 13 	jmp	0x2742	; 0x2742 <__prologue_saves__+0x18>
     82e:	69 83       	std	Y+1, r22	; 0x01
     830:	7a 83       	std	Y+2, r23	; 0x02
     832:	8b 83       	std	Y+3, r24	; 0x03
     834:	9c 83       	std	Y+4, r25	; 0x04
     836:	2d 83       	std	Y+5, r18	; 0x05
     838:	3e 83       	std	Y+6, r19	; 0x06
     83a:	4f 83       	std	Y+7, r20	; 0x07
     83c:	58 87       	std	Y+8, r21	; 0x08
     83e:	89 e0       	ldi	r24, 0x09	; 9
     840:	e8 2e       	mov	r14, r24
     842:	f1 2c       	mov	r15, r1
     844:	ec 0e       	add	r14, r28
     846:	fd 1e       	adc	r15, r29
     848:	ce 01       	movw	r24, r28
     84a:	01 96       	adiw	r24, 0x01	; 1
     84c:	b7 01       	movw	r22, r14
     84e:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     852:	8e 01       	movw	r16, r28
     854:	0f 5e       	subi	r16, 0xEF	; 239
     856:	1f 4f       	sbci	r17, 0xFF	; 255
     858:	ce 01       	movw	r24, r28
     85a:	05 96       	adiw	r24, 0x05	; 5
     85c:	b8 01       	movw	r22, r16
     85e:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     862:	89 85       	ldd	r24, Y+9	; 0x09
     864:	82 30       	cpi	r24, 0x02	; 2
     866:	40 f0       	brcs	.+16     	; 0x878 <__gtsf2+0x56>
     868:	89 89       	ldd	r24, Y+17	; 0x11
     86a:	82 30       	cpi	r24, 0x02	; 2
     86c:	28 f0       	brcs	.+10     	; 0x878 <__gtsf2+0x56>
     86e:	c7 01       	movw	r24, r14
     870:	b8 01       	movw	r22, r16
     872:	0e 94 0a 07 	call	0xe14	; 0xe14 <__fpcmp_parts_f>
     876:	01 c0       	rjmp	.+2      	; 0x87a <__gtsf2+0x58>
     878:	8f ef       	ldi	r24, 0xFF	; 255
     87a:	68 96       	adiw	r28, 0x18	; 24
     87c:	e6 e0       	ldi	r30, 0x06	; 6
     87e:	0c 94 bd 13 	jmp	0x277a	; 0x277a <__epilogue_restores__+0x18>

00000882 <__gesf2>:
     882:	a8 e1       	ldi	r26, 0x18	; 24
     884:	b0 e0       	ldi	r27, 0x00	; 0
     886:	e7 e4       	ldi	r30, 0x47	; 71
     888:	f4 e0       	ldi	r31, 0x04	; 4
     88a:	0c 94 a1 13 	jmp	0x2742	; 0x2742 <__prologue_saves__+0x18>
     88e:	69 83       	std	Y+1, r22	; 0x01
     890:	7a 83       	std	Y+2, r23	; 0x02
     892:	8b 83       	std	Y+3, r24	; 0x03
     894:	9c 83       	std	Y+4, r25	; 0x04
     896:	2d 83       	std	Y+5, r18	; 0x05
     898:	3e 83       	std	Y+6, r19	; 0x06
     89a:	4f 83       	std	Y+7, r20	; 0x07
     89c:	58 87       	std	Y+8, r21	; 0x08
     89e:	89 e0       	ldi	r24, 0x09	; 9
     8a0:	e8 2e       	mov	r14, r24
     8a2:	f1 2c       	mov	r15, r1
     8a4:	ec 0e       	add	r14, r28
     8a6:	fd 1e       	adc	r15, r29
     8a8:	ce 01       	movw	r24, r28
     8aa:	01 96       	adiw	r24, 0x01	; 1
     8ac:	b7 01       	movw	r22, r14
     8ae:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     8b2:	8e 01       	movw	r16, r28
     8b4:	0f 5e       	subi	r16, 0xEF	; 239
     8b6:	1f 4f       	sbci	r17, 0xFF	; 255
     8b8:	ce 01       	movw	r24, r28
     8ba:	05 96       	adiw	r24, 0x05	; 5
     8bc:	b8 01       	movw	r22, r16
     8be:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     8c2:	89 85       	ldd	r24, Y+9	; 0x09
     8c4:	82 30       	cpi	r24, 0x02	; 2
     8c6:	40 f0       	brcs	.+16     	; 0x8d8 <__gesf2+0x56>
     8c8:	89 89       	ldd	r24, Y+17	; 0x11
     8ca:	82 30       	cpi	r24, 0x02	; 2
     8cc:	28 f0       	brcs	.+10     	; 0x8d8 <__gesf2+0x56>
     8ce:	c7 01       	movw	r24, r14
     8d0:	b8 01       	movw	r22, r16
     8d2:	0e 94 0a 07 	call	0xe14	; 0xe14 <__fpcmp_parts_f>
     8d6:	01 c0       	rjmp	.+2      	; 0x8da <__gesf2+0x58>
     8d8:	8f ef       	ldi	r24, 0xFF	; 255
     8da:	68 96       	adiw	r28, 0x18	; 24
     8dc:	e6 e0       	ldi	r30, 0x06	; 6
     8de:	0c 94 bd 13 	jmp	0x277a	; 0x277a <__epilogue_restores__+0x18>

000008e2 <__ltsf2>:
     8e2:	a8 e1       	ldi	r26, 0x18	; 24
     8e4:	b0 e0       	ldi	r27, 0x00	; 0
     8e6:	e7 e7       	ldi	r30, 0x77	; 119
     8e8:	f4 e0       	ldi	r31, 0x04	; 4
     8ea:	0c 94 a1 13 	jmp	0x2742	; 0x2742 <__prologue_saves__+0x18>
     8ee:	69 83       	std	Y+1, r22	; 0x01
     8f0:	7a 83       	std	Y+2, r23	; 0x02
     8f2:	8b 83       	std	Y+3, r24	; 0x03
     8f4:	9c 83       	std	Y+4, r25	; 0x04
     8f6:	2d 83       	std	Y+5, r18	; 0x05
     8f8:	3e 83       	std	Y+6, r19	; 0x06
     8fa:	4f 83       	std	Y+7, r20	; 0x07
     8fc:	58 87       	std	Y+8, r21	; 0x08
     8fe:	89 e0       	ldi	r24, 0x09	; 9
     900:	e8 2e       	mov	r14, r24
     902:	f1 2c       	mov	r15, r1
     904:	ec 0e       	add	r14, r28
     906:	fd 1e       	adc	r15, r29
     908:	ce 01       	movw	r24, r28
     90a:	01 96       	adiw	r24, 0x01	; 1
     90c:	b7 01       	movw	r22, r14
     90e:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     912:	8e 01       	movw	r16, r28
     914:	0f 5e       	subi	r16, 0xEF	; 239
     916:	1f 4f       	sbci	r17, 0xFF	; 255
     918:	ce 01       	movw	r24, r28
     91a:	05 96       	adiw	r24, 0x05	; 5
     91c:	b8 01       	movw	r22, r16
     91e:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     922:	89 85       	ldd	r24, Y+9	; 0x09
     924:	82 30       	cpi	r24, 0x02	; 2
     926:	40 f0       	brcs	.+16     	; 0x938 <__ltsf2+0x56>
     928:	89 89       	ldd	r24, Y+17	; 0x11
     92a:	82 30       	cpi	r24, 0x02	; 2
     92c:	28 f0       	brcs	.+10     	; 0x938 <__ltsf2+0x56>
     92e:	c7 01       	movw	r24, r14
     930:	b8 01       	movw	r22, r16
     932:	0e 94 0a 07 	call	0xe14	; 0xe14 <__fpcmp_parts_f>
     936:	01 c0       	rjmp	.+2      	; 0x93a <__ltsf2+0x58>
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	68 96       	adiw	r28, 0x18	; 24
     93c:	e6 e0       	ldi	r30, 0x06	; 6
     93e:	0c 94 bd 13 	jmp	0x277a	; 0x277a <__epilogue_restores__+0x18>

00000942 <__fixsfsi>:
     942:	ac e0       	ldi	r26, 0x0C	; 12
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e7 ea       	ldi	r30, 0xA7	; 167
     948:	f4 e0       	ldi	r31, 0x04	; 4
     94a:	0c 94 a5 13 	jmp	0x274a	; 0x274a <__prologue_saves__+0x20>
     94e:	69 83       	std	Y+1, r22	; 0x01
     950:	7a 83       	std	Y+2, r23	; 0x02
     952:	8b 83       	std	Y+3, r24	; 0x03
     954:	9c 83       	std	Y+4, r25	; 0x04
     956:	ce 01       	movw	r24, r28
     958:	01 96       	adiw	r24, 0x01	; 1
     95a:	be 01       	movw	r22, r28
     95c:	6b 5f       	subi	r22, 0xFB	; 251
     95e:	7f 4f       	sbci	r23, 0xFF	; 255
     960:	0e 94 92 06 	call	0xd24	; 0xd24 <__unpack_f>
     964:	8d 81       	ldd	r24, Y+5	; 0x05
     966:	82 30       	cpi	r24, 0x02	; 2
     968:	61 f1       	breq	.+88     	; 0x9c2 <__fixsfsi+0x80>
     96a:	82 30       	cpi	r24, 0x02	; 2
     96c:	50 f1       	brcs	.+84     	; 0x9c2 <__fixsfsi+0x80>
     96e:	84 30       	cpi	r24, 0x04	; 4
     970:	21 f4       	brne	.+8      	; 0x97a <__fixsfsi+0x38>
     972:	8e 81       	ldd	r24, Y+6	; 0x06
     974:	88 23       	and	r24, r24
     976:	51 f1       	breq	.+84     	; 0x9cc <__fixsfsi+0x8a>
     978:	2e c0       	rjmp	.+92     	; 0x9d6 <__fixsfsi+0x94>
     97a:	2f 81       	ldd	r18, Y+7	; 0x07
     97c:	38 85       	ldd	r19, Y+8	; 0x08
     97e:	37 fd       	sbrc	r19, 7
     980:	20 c0       	rjmp	.+64     	; 0x9c2 <__fixsfsi+0x80>
     982:	6e 81       	ldd	r22, Y+6	; 0x06
     984:	2f 31       	cpi	r18, 0x1F	; 31
     986:	31 05       	cpc	r19, r1
     988:	1c f0       	brlt	.+6      	; 0x990 <__fixsfsi+0x4e>
     98a:	66 23       	and	r22, r22
     98c:	f9 f0       	breq	.+62     	; 0x9cc <__fixsfsi+0x8a>
     98e:	23 c0       	rjmp	.+70     	; 0x9d6 <__fixsfsi+0x94>
     990:	8e e1       	ldi	r24, 0x1E	; 30
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	82 1b       	sub	r24, r18
     996:	93 0b       	sbc	r25, r19
     998:	29 85       	ldd	r18, Y+9	; 0x09
     99a:	3a 85       	ldd	r19, Y+10	; 0x0a
     99c:	4b 85       	ldd	r20, Y+11	; 0x0b
     99e:	5c 85       	ldd	r21, Y+12	; 0x0c
     9a0:	04 c0       	rjmp	.+8      	; 0x9aa <__fixsfsi+0x68>
     9a2:	56 95       	lsr	r21
     9a4:	47 95       	ror	r20
     9a6:	37 95       	ror	r19
     9a8:	27 95       	ror	r18
     9aa:	8a 95       	dec	r24
     9ac:	d2 f7       	brpl	.-12     	; 0x9a2 <__fixsfsi+0x60>
     9ae:	66 23       	and	r22, r22
     9b0:	b1 f0       	breq	.+44     	; 0x9de <__fixsfsi+0x9c>
     9b2:	50 95       	com	r21
     9b4:	40 95       	com	r20
     9b6:	30 95       	com	r19
     9b8:	21 95       	neg	r18
     9ba:	3f 4f       	sbci	r19, 0xFF	; 255
     9bc:	4f 4f       	sbci	r20, 0xFF	; 255
     9be:	5f 4f       	sbci	r21, 0xFF	; 255
     9c0:	0e c0       	rjmp	.+28     	; 0x9de <__fixsfsi+0x9c>
     9c2:	20 e0       	ldi	r18, 0x00	; 0
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	40 e0       	ldi	r20, 0x00	; 0
     9c8:	50 e0       	ldi	r21, 0x00	; 0
     9ca:	09 c0       	rjmp	.+18     	; 0x9de <__fixsfsi+0x9c>
     9cc:	2f ef       	ldi	r18, 0xFF	; 255
     9ce:	3f ef       	ldi	r19, 0xFF	; 255
     9d0:	4f ef       	ldi	r20, 0xFF	; 255
     9d2:	5f e7       	ldi	r21, 0x7F	; 127
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__fixsfsi+0x9c>
     9d6:	20 e0       	ldi	r18, 0x00	; 0
     9d8:	30 e0       	ldi	r19, 0x00	; 0
     9da:	40 e0       	ldi	r20, 0x00	; 0
     9dc:	50 e8       	ldi	r21, 0x80	; 128
     9de:	b9 01       	movw	r22, r18
     9e0:	ca 01       	movw	r24, r20
     9e2:	2c 96       	adiw	r28, 0x0c	; 12
     9e4:	e2 e0       	ldi	r30, 0x02	; 2
     9e6:	0c 94 c1 13 	jmp	0x2782	; 0x2782 <__epilogue_restores__+0x20>

000009ea <__floatunsisf>:
     9ea:	a8 e0       	ldi	r26, 0x08	; 8
     9ec:	b0 e0       	ldi	r27, 0x00	; 0
     9ee:	eb ef       	ldi	r30, 0xFB	; 251
     9f0:	f4 e0       	ldi	r31, 0x04	; 4
     9f2:	0c 94 9d 13 	jmp	0x273a	; 0x273a <__prologue_saves__+0x10>
     9f6:	7b 01       	movw	r14, r22
     9f8:	8c 01       	movw	r16, r24
     9fa:	61 15       	cp	r22, r1
     9fc:	71 05       	cpc	r23, r1
     9fe:	81 05       	cpc	r24, r1
     a00:	91 05       	cpc	r25, r1
     a02:	19 f4       	brne	.+6      	; 0xa0a <__floatunsisf+0x20>
     a04:	82 e0       	ldi	r24, 0x02	; 2
     a06:	89 83       	std	Y+1, r24	; 0x01
     a08:	60 c0       	rjmp	.+192    	; 0xaca <__floatunsisf+0xe0>
     a0a:	83 e0       	ldi	r24, 0x03	; 3
     a0c:	89 83       	std	Y+1, r24	; 0x01
     a0e:	8e e1       	ldi	r24, 0x1E	; 30
     a10:	c8 2e       	mov	r12, r24
     a12:	d1 2c       	mov	r13, r1
     a14:	dc 82       	std	Y+4, r13	; 0x04
     a16:	cb 82       	std	Y+3, r12	; 0x03
     a18:	ed 82       	std	Y+5, r14	; 0x05
     a1a:	fe 82       	std	Y+6, r15	; 0x06
     a1c:	0f 83       	std	Y+7, r16	; 0x07
     a1e:	18 87       	std	Y+8, r17	; 0x08
     a20:	c8 01       	movw	r24, r16
     a22:	b7 01       	movw	r22, r14
     a24:	0e 94 6e 05 	call	0xadc	; 0xadc <__clzsi2>
     a28:	fc 01       	movw	r30, r24
     a2a:	31 97       	sbiw	r30, 0x01	; 1
     a2c:	f7 ff       	sbrs	r31, 7
     a2e:	3b c0       	rjmp	.+118    	; 0xaa6 <__floatunsisf+0xbc>
     a30:	22 27       	eor	r18, r18
     a32:	33 27       	eor	r19, r19
     a34:	2e 1b       	sub	r18, r30
     a36:	3f 0b       	sbc	r19, r31
     a38:	57 01       	movw	r10, r14
     a3a:	68 01       	movw	r12, r16
     a3c:	02 2e       	mov	r0, r18
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <__floatunsisf+0x5e>
     a40:	d6 94       	lsr	r13
     a42:	c7 94       	ror	r12
     a44:	b7 94       	ror	r11
     a46:	a7 94       	ror	r10
     a48:	0a 94       	dec	r0
     a4a:	d2 f7       	brpl	.-12     	; 0xa40 <__floatunsisf+0x56>
     a4c:	40 e0       	ldi	r20, 0x00	; 0
     a4e:	50 e0       	ldi	r21, 0x00	; 0
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	81 e0       	ldi	r24, 0x01	; 1
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	a0 e0       	ldi	r26, 0x00	; 0
     a5a:	b0 e0       	ldi	r27, 0x00	; 0
     a5c:	04 c0       	rjmp	.+8      	; 0xa66 <__floatunsisf+0x7c>
     a5e:	88 0f       	add	r24, r24
     a60:	99 1f       	adc	r25, r25
     a62:	aa 1f       	adc	r26, r26
     a64:	bb 1f       	adc	r27, r27
     a66:	2a 95       	dec	r18
     a68:	d2 f7       	brpl	.-12     	; 0xa5e <__floatunsisf+0x74>
     a6a:	01 97       	sbiw	r24, 0x01	; 1
     a6c:	a1 09       	sbc	r26, r1
     a6e:	b1 09       	sbc	r27, r1
     a70:	8e 21       	and	r24, r14
     a72:	9f 21       	and	r25, r15
     a74:	a0 23       	and	r26, r16
     a76:	b1 23       	and	r27, r17
     a78:	00 97       	sbiw	r24, 0x00	; 0
     a7a:	a1 05       	cpc	r26, r1
     a7c:	b1 05       	cpc	r27, r1
     a7e:	21 f0       	breq	.+8      	; 0xa88 <__floatunsisf+0x9e>
     a80:	41 e0       	ldi	r20, 0x01	; 1
     a82:	50 e0       	ldi	r21, 0x00	; 0
     a84:	60 e0       	ldi	r22, 0x00	; 0
     a86:	70 e0       	ldi	r23, 0x00	; 0
     a88:	4a 29       	or	r20, r10
     a8a:	5b 29       	or	r21, r11
     a8c:	6c 29       	or	r22, r12
     a8e:	7d 29       	or	r23, r13
     a90:	4d 83       	std	Y+5, r20	; 0x05
     a92:	5e 83       	std	Y+6, r21	; 0x06
     a94:	6f 83       	std	Y+7, r22	; 0x07
     a96:	78 87       	std	Y+8, r23	; 0x08
     a98:	8e e1       	ldi	r24, 0x1E	; 30
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	8e 1b       	sub	r24, r30
     a9e:	9f 0b       	sbc	r25, r31
     aa0:	9c 83       	std	Y+4, r25	; 0x04
     aa2:	8b 83       	std	Y+3, r24	; 0x03
     aa4:	12 c0       	rjmp	.+36     	; 0xaca <__floatunsisf+0xe0>
     aa6:	30 97       	sbiw	r30, 0x00	; 0
     aa8:	81 f0       	breq	.+32     	; 0xaca <__floatunsisf+0xe0>
     aaa:	0e 2e       	mov	r0, r30
     aac:	04 c0       	rjmp	.+8      	; 0xab6 <__floatunsisf+0xcc>
     aae:	ee 0c       	add	r14, r14
     ab0:	ff 1c       	adc	r15, r15
     ab2:	00 1f       	adc	r16, r16
     ab4:	11 1f       	adc	r17, r17
     ab6:	0a 94       	dec	r0
     ab8:	d2 f7       	brpl	.-12     	; 0xaae <__floatunsisf+0xc4>
     aba:	ed 82       	std	Y+5, r14	; 0x05
     abc:	fe 82       	std	Y+6, r15	; 0x06
     abe:	0f 83       	std	Y+7, r16	; 0x07
     ac0:	18 87       	std	Y+8, r17	; 0x08
     ac2:	ce 1a       	sub	r12, r30
     ac4:	df 0a       	sbc	r13, r31
     ac6:	dc 82       	std	Y+4, r13	; 0x04
     ac8:	cb 82       	std	Y+3, r12	; 0x03
     aca:	1a 82       	std	Y+2, r1	; 0x02
     acc:	ce 01       	movw	r24, r28
     ace:	01 96       	adiw	r24, 0x01	; 1
     ad0:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__pack_f>
     ad4:	28 96       	adiw	r28, 0x08	; 8
     ad6:	ea e0       	ldi	r30, 0x0A	; 10
     ad8:	0c 94 b9 13 	jmp	0x2772	; 0x2772 <__epilogue_restores__+0x10>

00000adc <__clzsi2>:
     adc:	ef 92       	push	r14
     ade:	ff 92       	push	r15
     ae0:	0f 93       	push	r16
     ae2:	1f 93       	push	r17
     ae4:	7b 01       	movw	r14, r22
     ae6:	8c 01       	movw	r16, r24
     ae8:	80 e0       	ldi	r24, 0x00	; 0
     aea:	e8 16       	cp	r14, r24
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	f8 06       	cpc	r15, r24
     af0:	81 e0       	ldi	r24, 0x01	; 1
     af2:	08 07       	cpc	r16, r24
     af4:	80 e0       	ldi	r24, 0x00	; 0
     af6:	18 07       	cpc	r17, r24
     af8:	88 f4       	brcc	.+34     	; 0xb1c <__clzsi2+0x40>
     afa:	8f ef       	ldi	r24, 0xFF	; 255
     afc:	e8 16       	cp	r14, r24
     afe:	f1 04       	cpc	r15, r1
     b00:	01 05       	cpc	r16, r1
     b02:	11 05       	cpc	r17, r1
     b04:	31 f0       	breq	.+12     	; 0xb12 <__clzsi2+0x36>
     b06:	28 f0       	brcs	.+10     	; 0xb12 <__clzsi2+0x36>
     b08:	88 e0       	ldi	r24, 0x08	; 8
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	a0 e0       	ldi	r26, 0x00	; 0
     b0e:	b0 e0       	ldi	r27, 0x00	; 0
     b10:	17 c0       	rjmp	.+46     	; 0xb40 <__clzsi2+0x64>
     b12:	80 e0       	ldi	r24, 0x00	; 0
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	a0 e0       	ldi	r26, 0x00	; 0
     b18:	b0 e0       	ldi	r27, 0x00	; 0
     b1a:	12 c0       	rjmp	.+36     	; 0xb40 <__clzsi2+0x64>
     b1c:	80 e0       	ldi	r24, 0x00	; 0
     b1e:	e8 16       	cp	r14, r24
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	f8 06       	cpc	r15, r24
     b24:	80 e0       	ldi	r24, 0x00	; 0
     b26:	08 07       	cpc	r16, r24
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	18 07       	cpc	r17, r24
     b2c:	28 f0       	brcs	.+10     	; 0xb38 <__clzsi2+0x5c>
     b2e:	88 e1       	ldi	r24, 0x18	; 24
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	a0 e0       	ldi	r26, 0x00	; 0
     b34:	b0 e0       	ldi	r27, 0x00	; 0
     b36:	04 c0       	rjmp	.+8      	; 0xb40 <__clzsi2+0x64>
     b38:	80 e1       	ldi	r24, 0x10	; 16
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	a0 e0       	ldi	r26, 0x00	; 0
     b3e:	b0 e0       	ldi	r27, 0x00	; 0
     b40:	20 e2       	ldi	r18, 0x20	; 32
     b42:	30 e0       	ldi	r19, 0x00	; 0
     b44:	40 e0       	ldi	r20, 0x00	; 0
     b46:	50 e0       	ldi	r21, 0x00	; 0
     b48:	28 1b       	sub	r18, r24
     b4a:	39 0b       	sbc	r19, r25
     b4c:	4a 0b       	sbc	r20, r26
     b4e:	5b 0b       	sbc	r21, r27
     b50:	04 c0       	rjmp	.+8      	; 0xb5a <__clzsi2+0x7e>
     b52:	16 95       	lsr	r17
     b54:	07 95       	ror	r16
     b56:	f7 94       	ror	r15
     b58:	e7 94       	ror	r14
     b5a:	8a 95       	dec	r24
     b5c:	d2 f7       	brpl	.-12     	; 0xb52 <__clzsi2+0x76>
     b5e:	f7 01       	movw	r30, r14
     b60:	e3 5e       	subi	r30, 0xE3	; 227
     b62:	fd 4f       	sbci	r31, 0xFD	; 253
     b64:	80 81       	ld	r24, Z
     b66:	28 1b       	sub	r18, r24
     b68:	31 09       	sbc	r19, r1
     b6a:	41 09       	sbc	r20, r1
     b6c:	51 09       	sbc	r21, r1
     b6e:	c9 01       	movw	r24, r18
     b70:	1f 91       	pop	r17
     b72:	0f 91       	pop	r16
     b74:	ff 90       	pop	r15
     b76:	ef 90       	pop	r14
     b78:	08 95       	ret

00000b7a <__pack_f>:
     b7a:	df 92       	push	r13
     b7c:	ef 92       	push	r14
     b7e:	ff 92       	push	r15
     b80:	0f 93       	push	r16
     b82:	1f 93       	push	r17
     b84:	fc 01       	movw	r30, r24
     b86:	e4 80       	ldd	r14, Z+4	; 0x04
     b88:	f5 80       	ldd	r15, Z+5	; 0x05
     b8a:	06 81       	ldd	r16, Z+6	; 0x06
     b8c:	17 81       	ldd	r17, Z+7	; 0x07
     b8e:	d1 80       	ldd	r13, Z+1	; 0x01
     b90:	80 81       	ld	r24, Z
     b92:	82 30       	cpi	r24, 0x02	; 2
     b94:	48 f4       	brcc	.+18     	; 0xba8 <__pack_f+0x2e>
     b96:	80 e0       	ldi	r24, 0x00	; 0
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	a0 e1       	ldi	r26, 0x10	; 16
     b9c:	b0 e0       	ldi	r27, 0x00	; 0
     b9e:	e8 2a       	or	r14, r24
     ba0:	f9 2a       	or	r15, r25
     ba2:	0a 2b       	or	r16, r26
     ba4:	1b 2b       	or	r17, r27
     ba6:	a5 c0       	rjmp	.+330    	; 0xcf2 <__pack_f+0x178>
     ba8:	84 30       	cpi	r24, 0x04	; 4
     baa:	09 f4       	brne	.+2      	; 0xbae <__pack_f+0x34>
     bac:	9f c0       	rjmp	.+318    	; 0xcec <__pack_f+0x172>
     bae:	82 30       	cpi	r24, 0x02	; 2
     bb0:	21 f4       	brne	.+8      	; 0xbba <__pack_f+0x40>
     bb2:	ee 24       	eor	r14, r14
     bb4:	ff 24       	eor	r15, r15
     bb6:	87 01       	movw	r16, r14
     bb8:	05 c0       	rjmp	.+10     	; 0xbc4 <__pack_f+0x4a>
     bba:	e1 14       	cp	r14, r1
     bbc:	f1 04       	cpc	r15, r1
     bbe:	01 05       	cpc	r16, r1
     bc0:	11 05       	cpc	r17, r1
     bc2:	19 f4       	brne	.+6      	; 0xbca <__pack_f+0x50>
     bc4:	e0 e0       	ldi	r30, 0x00	; 0
     bc6:	f0 e0       	ldi	r31, 0x00	; 0
     bc8:	96 c0       	rjmp	.+300    	; 0xcf6 <__pack_f+0x17c>
     bca:	62 81       	ldd	r22, Z+2	; 0x02
     bcc:	73 81       	ldd	r23, Z+3	; 0x03
     bce:	9f ef       	ldi	r25, 0xFF	; 255
     bd0:	62 38       	cpi	r22, 0x82	; 130
     bd2:	79 07       	cpc	r23, r25
     bd4:	0c f0       	brlt	.+2      	; 0xbd8 <__pack_f+0x5e>
     bd6:	5b c0       	rjmp	.+182    	; 0xc8e <__pack_f+0x114>
     bd8:	22 e8       	ldi	r18, 0x82	; 130
     bda:	3f ef       	ldi	r19, 0xFF	; 255
     bdc:	26 1b       	sub	r18, r22
     bde:	37 0b       	sbc	r19, r23
     be0:	2a 31       	cpi	r18, 0x1A	; 26
     be2:	31 05       	cpc	r19, r1
     be4:	2c f0       	brlt	.+10     	; 0xbf0 <__pack_f+0x76>
     be6:	20 e0       	ldi	r18, 0x00	; 0
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	40 e0       	ldi	r20, 0x00	; 0
     bec:	50 e0       	ldi	r21, 0x00	; 0
     bee:	2a c0       	rjmp	.+84     	; 0xc44 <__pack_f+0xca>
     bf0:	b8 01       	movw	r22, r16
     bf2:	a7 01       	movw	r20, r14
     bf4:	02 2e       	mov	r0, r18
     bf6:	04 c0       	rjmp	.+8      	; 0xc00 <__pack_f+0x86>
     bf8:	76 95       	lsr	r23
     bfa:	67 95       	ror	r22
     bfc:	57 95       	ror	r21
     bfe:	47 95       	ror	r20
     c00:	0a 94       	dec	r0
     c02:	d2 f7       	brpl	.-12     	; 0xbf8 <__pack_f+0x7e>
     c04:	81 e0       	ldi	r24, 0x01	; 1
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	a0 e0       	ldi	r26, 0x00	; 0
     c0a:	b0 e0       	ldi	r27, 0x00	; 0
     c0c:	04 c0       	rjmp	.+8      	; 0xc16 <__pack_f+0x9c>
     c0e:	88 0f       	add	r24, r24
     c10:	99 1f       	adc	r25, r25
     c12:	aa 1f       	adc	r26, r26
     c14:	bb 1f       	adc	r27, r27
     c16:	2a 95       	dec	r18
     c18:	d2 f7       	brpl	.-12     	; 0xc0e <__pack_f+0x94>
     c1a:	01 97       	sbiw	r24, 0x01	; 1
     c1c:	a1 09       	sbc	r26, r1
     c1e:	b1 09       	sbc	r27, r1
     c20:	8e 21       	and	r24, r14
     c22:	9f 21       	and	r25, r15
     c24:	a0 23       	and	r26, r16
     c26:	b1 23       	and	r27, r17
     c28:	00 97       	sbiw	r24, 0x00	; 0
     c2a:	a1 05       	cpc	r26, r1
     c2c:	b1 05       	cpc	r27, r1
     c2e:	21 f0       	breq	.+8      	; 0xc38 <__pack_f+0xbe>
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	a0 e0       	ldi	r26, 0x00	; 0
     c36:	b0 e0       	ldi	r27, 0x00	; 0
     c38:	9a 01       	movw	r18, r20
     c3a:	ab 01       	movw	r20, r22
     c3c:	28 2b       	or	r18, r24
     c3e:	39 2b       	or	r19, r25
     c40:	4a 2b       	or	r20, r26
     c42:	5b 2b       	or	r21, r27
     c44:	da 01       	movw	r26, r20
     c46:	c9 01       	movw	r24, r18
     c48:	8f 77       	andi	r24, 0x7F	; 127
     c4a:	90 70       	andi	r25, 0x00	; 0
     c4c:	a0 70       	andi	r26, 0x00	; 0
     c4e:	b0 70       	andi	r27, 0x00	; 0
     c50:	80 34       	cpi	r24, 0x40	; 64
     c52:	91 05       	cpc	r25, r1
     c54:	a1 05       	cpc	r26, r1
     c56:	b1 05       	cpc	r27, r1
     c58:	39 f4       	brne	.+14     	; 0xc68 <__pack_f+0xee>
     c5a:	27 ff       	sbrs	r18, 7
     c5c:	09 c0       	rjmp	.+18     	; 0xc70 <__pack_f+0xf6>
     c5e:	20 5c       	subi	r18, 0xC0	; 192
     c60:	3f 4f       	sbci	r19, 0xFF	; 255
     c62:	4f 4f       	sbci	r20, 0xFF	; 255
     c64:	5f 4f       	sbci	r21, 0xFF	; 255
     c66:	04 c0       	rjmp	.+8      	; 0xc70 <__pack_f+0xf6>
     c68:	21 5c       	subi	r18, 0xC1	; 193
     c6a:	3f 4f       	sbci	r19, 0xFF	; 255
     c6c:	4f 4f       	sbci	r20, 0xFF	; 255
     c6e:	5f 4f       	sbci	r21, 0xFF	; 255
     c70:	e0 e0       	ldi	r30, 0x00	; 0
     c72:	f0 e0       	ldi	r31, 0x00	; 0
     c74:	20 30       	cpi	r18, 0x00	; 0
     c76:	a0 e0       	ldi	r26, 0x00	; 0
     c78:	3a 07       	cpc	r19, r26
     c7a:	a0 e0       	ldi	r26, 0x00	; 0
     c7c:	4a 07       	cpc	r20, r26
     c7e:	a0 e4       	ldi	r26, 0x40	; 64
     c80:	5a 07       	cpc	r21, r26
     c82:	10 f0       	brcs	.+4      	; 0xc88 <__pack_f+0x10e>
     c84:	e1 e0       	ldi	r30, 0x01	; 1
     c86:	f0 e0       	ldi	r31, 0x00	; 0
     c88:	79 01       	movw	r14, r18
     c8a:	8a 01       	movw	r16, r20
     c8c:	27 c0       	rjmp	.+78     	; 0xcdc <__pack_f+0x162>
     c8e:	60 38       	cpi	r22, 0x80	; 128
     c90:	71 05       	cpc	r23, r1
     c92:	64 f5       	brge	.+88     	; 0xcec <__pack_f+0x172>
     c94:	fb 01       	movw	r30, r22
     c96:	e1 58       	subi	r30, 0x81	; 129
     c98:	ff 4f       	sbci	r31, 0xFF	; 255
     c9a:	d8 01       	movw	r26, r16
     c9c:	c7 01       	movw	r24, r14
     c9e:	8f 77       	andi	r24, 0x7F	; 127
     ca0:	90 70       	andi	r25, 0x00	; 0
     ca2:	a0 70       	andi	r26, 0x00	; 0
     ca4:	b0 70       	andi	r27, 0x00	; 0
     ca6:	80 34       	cpi	r24, 0x40	; 64
     ca8:	91 05       	cpc	r25, r1
     caa:	a1 05       	cpc	r26, r1
     cac:	b1 05       	cpc	r27, r1
     cae:	39 f4       	brne	.+14     	; 0xcbe <__pack_f+0x144>
     cb0:	e7 fe       	sbrs	r14, 7
     cb2:	0d c0       	rjmp	.+26     	; 0xcce <__pack_f+0x154>
     cb4:	80 e4       	ldi	r24, 0x40	; 64
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	a0 e0       	ldi	r26, 0x00	; 0
     cba:	b0 e0       	ldi	r27, 0x00	; 0
     cbc:	04 c0       	rjmp	.+8      	; 0xcc6 <__pack_f+0x14c>
     cbe:	8f e3       	ldi	r24, 0x3F	; 63
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	a0 e0       	ldi	r26, 0x00	; 0
     cc4:	b0 e0       	ldi	r27, 0x00	; 0
     cc6:	e8 0e       	add	r14, r24
     cc8:	f9 1e       	adc	r15, r25
     cca:	0a 1f       	adc	r16, r26
     ccc:	1b 1f       	adc	r17, r27
     cce:	17 ff       	sbrs	r17, 7
     cd0:	05 c0       	rjmp	.+10     	; 0xcdc <__pack_f+0x162>
     cd2:	16 95       	lsr	r17
     cd4:	07 95       	ror	r16
     cd6:	f7 94       	ror	r15
     cd8:	e7 94       	ror	r14
     cda:	31 96       	adiw	r30, 0x01	; 1
     cdc:	87 e0       	ldi	r24, 0x07	; 7
     cde:	16 95       	lsr	r17
     ce0:	07 95       	ror	r16
     ce2:	f7 94       	ror	r15
     ce4:	e7 94       	ror	r14
     ce6:	8a 95       	dec	r24
     ce8:	d1 f7       	brne	.-12     	; 0xcde <__pack_f+0x164>
     cea:	05 c0       	rjmp	.+10     	; 0xcf6 <__pack_f+0x17c>
     cec:	ee 24       	eor	r14, r14
     cee:	ff 24       	eor	r15, r15
     cf0:	87 01       	movw	r16, r14
     cf2:	ef ef       	ldi	r30, 0xFF	; 255
     cf4:	f0 e0       	ldi	r31, 0x00	; 0
     cf6:	6e 2f       	mov	r22, r30
     cf8:	67 95       	ror	r22
     cfa:	66 27       	eor	r22, r22
     cfc:	67 95       	ror	r22
     cfe:	90 2f       	mov	r25, r16
     d00:	9f 77       	andi	r25, 0x7F	; 127
     d02:	d7 94       	ror	r13
     d04:	dd 24       	eor	r13, r13
     d06:	d7 94       	ror	r13
     d08:	8e 2f       	mov	r24, r30
     d0a:	86 95       	lsr	r24
     d0c:	49 2f       	mov	r20, r25
     d0e:	46 2b       	or	r20, r22
     d10:	58 2f       	mov	r21, r24
     d12:	5d 29       	or	r21, r13
     d14:	b7 01       	movw	r22, r14
     d16:	ca 01       	movw	r24, r20
     d18:	1f 91       	pop	r17
     d1a:	0f 91       	pop	r16
     d1c:	ff 90       	pop	r15
     d1e:	ef 90       	pop	r14
     d20:	df 90       	pop	r13
     d22:	08 95       	ret

00000d24 <__unpack_f>:
     d24:	fc 01       	movw	r30, r24
     d26:	db 01       	movw	r26, r22
     d28:	40 81       	ld	r20, Z
     d2a:	51 81       	ldd	r21, Z+1	; 0x01
     d2c:	22 81       	ldd	r18, Z+2	; 0x02
     d2e:	62 2f       	mov	r22, r18
     d30:	6f 77       	andi	r22, 0x7F	; 127
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	22 1f       	adc	r18, r18
     d36:	22 27       	eor	r18, r18
     d38:	22 1f       	adc	r18, r18
     d3a:	93 81       	ldd	r25, Z+3	; 0x03
     d3c:	89 2f       	mov	r24, r25
     d3e:	88 0f       	add	r24, r24
     d40:	82 2b       	or	r24, r18
     d42:	28 2f       	mov	r18, r24
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	99 1f       	adc	r25, r25
     d48:	99 27       	eor	r25, r25
     d4a:	99 1f       	adc	r25, r25
     d4c:	11 96       	adiw	r26, 0x01	; 1
     d4e:	9c 93       	st	X, r25
     d50:	11 97       	sbiw	r26, 0x01	; 1
     d52:	21 15       	cp	r18, r1
     d54:	31 05       	cpc	r19, r1
     d56:	a9 f5       	brne	.+106    	; 0xdc2 <__unpack_f+0x9e>
     d58:	41 15       	cp	r20, r1
     d5a:	51 05       	cpc	r21, r1
     d5c:	61 05       	cpc	r22, r1
     d5e:	71 05       	cpc	r23, r1
     d60:	11 f4       	brne	.+4      	; 0xd66 <__unpack_f+0x42>
     d62:	82 e0       	ldi	r24, 0x02	; 2
     d64:	37 c0       	rjmp	.+110    	; 0xdd4 <__unpack_f+0xb0>
     d66:	82 e8       	ldi	r24, 0x82	; 130
     d68:	9f ef       	ldi	r25, 0xFF	; 255
     d6a:	13 96       	adiw	r26, 0x03	; 3
     d6c:	9c 93       	st	X, r25
     d6e:	8e 93       	st	-X, r24
     d70:	12 97       	sbiw	r26, 0x02	; 2
     d72:	9a 01       	movw	r18, r20
     d74:	ab 01       	movw	r20, r22
     d76:	67 e0       	ldi	r22, 0x07	; 7
     d78:	22 0f       	add	r18, r18
     d7a:	33 1f       	adc	r19, r19
     d7c:	44 1f       	adc	r20, r20
     d7e:	55 1f       	adc	r21, r21
     d80:	6a 95       	dec	r22
     d82:	d1 f7       	brne	.-12     	; 0xd78 <__unpack_f+0x54>
     d84:	83 e0       	ldi	r24, 0x03	; 3
     d86:	8c 93       	st	X, r24
     d88:	0d c0       	rjmp	.+26     	; 0xda4 <__unpack_f+0x80>
     d8a:	22 0f       	add	r18, r18
     d8c:	33 1f       	adc	r19, r19
     d8e:	44 1f       	adc	r20, r20
     d90:	55 1f       	adc	r21, r21
     d92:	12 96       	adiw	r26, 0x02	; 2
     d94:	8d 91       	ld	r24, X+
     d96:	9c 91       	ld	r25, X
     d98:	13 97       	sbiw	r26, 0x03	; 3
     d9a:	01 97       	sbiw	r24, 0x01	; 1
     d9c:	13 96       	adiw	r26, 0x03	; 3
     d9e:	9c 93       	st	X, r25
     da0:	8e 93       	st	-X, r24
     da2:	12 97       	sbiw	r26, 0x02	; 2
     da4:	20 30       	cpi	r18, 0x00	; 0
     da6:	80 e0       	ldi	r24, 0x00	; 0
     da8:	38 07       	cpc	r19, r24
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	48 07       	cpc	r20, r24
     dae:	80 e4       	ldi	r24, 0x40	; 64
     db0:	58 07       	cpc	r21, r24
     db2:	58 f3       	brcs	.-42     	; 0xd8a <__unpack_f+0x66>
     db4:	14 96       	adiw	r26, 0x04	; 4
     db6:	2d 93       	st	X+, r18
     db8:	3d 93       	st	X+, r19
     dba:	4d 93       	st	X+, r20
     dbc:	5c 93       	st	X, r21
     dbe:	17 97       	sbiw	r26, 0x07	; 7
     dc0:	08 95       	ret
     dc2:	2f 3f       	cpi	r18, 0xFF	; 255
     dc4:	31 05       	cpc	r19, r1
     dc6:	79 f4       	brne	.+30     	; 0xde6 <__unpack_f+0xc2>
     dc8:	41 15       	cp	r20, r1
     dca:	51 05       	cpc	r21, r1
     dcc:	61 05       	cpc	r22, r1
     dce:	71 05       	cpc	r23, r1
     dd0:	19 f4       	brne	.+6      	; 0xdd8 <__unpack_f+0xb4>
     dd2:	84 e0       	ldi	r24, 0x04	; 4
     dd4:	8c 93       	st	X, r24
     dd6:	08 95       	ret
     dd8:	64 ff       	sbrs	r22, 4
     dda:	03 c0       	rjmp	.+6      	; 0xde2 <__unpack_f+0xbe>
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	8c 93       	st	X, r24
     de0:	12 c0       	rjmp	.+36     	; 0xe06 <__unpack_f+0xe2>
     de2:	1c 92       	st	X, r1
     de4:	10 c0       	rjmp	.+32     	; 0xe06 <__unpack_f+0xe2>
     de6:	2f 57       	subi	r18, 0x7F	; 127
     de8:	30 40       	sbci	r19, 0x00	; 0
     dea:	13 96       	adiw	r26, 0x03	; 3
     dec:	3c 93       	st	X, r19
     dee:	2e 93       	st	-X, r18
     df0:	12 97       	sbiw	r26, 0x02	; 2
     df2:	83 e0       	ldi	r24, 0x03	; 3
     df4:	8c 93       	st	X, r24
     df6:	87 e0       	ldi	r24, 0x07	; 7
     df8:	44 0f       	add	r20, r20
     dfa:	55 1f       	adc	r21, r21
     dfc:	66 1f       	adc	r22, r22
     dfe:	77 1f       	adc	r23, r23
     e00:	8a 95       	dec	r24
     e02:	d1 f7       	brne	.-12     	; 0xdf8 <__unpack_f+0xd4>
     e04:	70 64       	ori	r23, 0x40	; 64
     e06:	14 96       	adiw	r26, 0x04	; 4
     e08:	4d 93       	st	X+, r20
     e0a:	5d 93       	st	X+, r21
     e0c:	6d 93       	st	X+, r22
     e0e:	7c 93       	st	X, r23
     e10:	17 97       	sbiw	r26, 0x07	; 7
     e12:	08 95       	ret

00000e14 <__fpcmp_parts_f>:
     e14:	1f 93       	push	r17
     e16:	dc 01       	movw	r26, r24
     e18:	fb 01       	movw	r30, r22
     e1a:	9c 91       	ld	r25, X
     e1c:	92 30       	cpi	r25, 0x02	; 2
     e1e:	08 f4       	brcc	.+2      	; 0xe22 <__fpcmp_parts_f+0xe>
     e20:	47 c0       	rjmp	.+142    	; 0xeb0 <__fpcmp_parts_f+0x9c>
     e22:	80 81       	ld	r24, Z
     e24:	82 30       	cpi	r24, 0x02	; 2
     e26:	08 f4       	brcc	.+2      	; 0xe2a <__fpcmp_parts_f+0x16>
     e28:	43 c0       	rjmp	.+134    	; 0xeb0 <__fpcmp_parts_f+0x9c>
     e2a:	94 30       	cpi	r25, 0x04	; 4
     e2c:	51 f4       	brne	.+20     	; 0xe42 <__fpcmp_parts_f+0x2e>
     e2e:	11 96       	adiw	r26, 0x01	; 1
     e30:	1c 91       	ld	r17, X
     e32:	84 30       	cpi	r24, 0x04	; 4
     e34:	99 f5       	brne	.+102    	; 0xe9c <__fpcmp_parts_f+0x88>
     e36:	81 81       	ldd	r24, Z+1	; 0x01
     e38:	68 2f       	mov	r22, r24
     e3a:	70 e0       	ldi	r23, 0x00	; 0
     e3c:	61 1b       	sub	r22, r17
     e3e:	71 09       	sbc	r23, r1
     e40:	3f c0       	rjmp	.+126    	; 0xec0 <__fpcmp_parts_f+0xac>
     e42:	84 30       	cpi	r24, 0x04	; 4
     e44:	21 f0       	breq	.+8      	; 0xe4e <__fpcmp_parts_f+0x3a>
     e46:	92 30       	cpi	r25, 0x02	; 2
     e48:	31 f4       	brne	.+12     	; 0xe56 <__fpcmp_parts_f+0x42>
     e4a:	82 30       	cpi	r24, 0x02	; 2
     e4c:	b9 f1       	breq	.+110    	; 0xebc <__fpcmp_parts_f+0xa8>
     e4e:	81 81       	ldd	r24, Z+1	; 0x01
     e50:	88 23       	and	r24, r24
     e52:	89 f1       	breq	.+98     	; 0xeb6 <__fpcmp_parts_f+0xa2>
     e54:	2d c0       	rjmp	.+90     	; 0xeb0 <__fpcmp_parts_f+0x9c>
     e56:	11 96       	adiw	r26, 0x01	; 1
     e58:	1c 91       	ld	r17, X
     e5a:	11 97       	sbiw	r26, 0x01	; 1
     e5c:	82 30       	cpi	r24, 0x02	; 2
     e5e:	f1 f0       	breq	.+60     	; 0xe9c <__fpcmp_parts_f+0x88>
     e60:	81 81       	ldd	r24, Z+1	; 0x01
     e62:	18 17       	cp	r17, r24
     e64:	d9 f4       	brne	.+54     	; 0xe9c <__fpcmp_parts_f+0x88>
     e66:	12 96       	adiw	r26, 0x02	; 2
     e68:	2d 91       	ld	r18, X+
     e6a:	3c 91       	ld	r19, X
     e6c:	13 97       	sbiw	r26, 0x03	; 3
     e6e:	82 81       	ldd	r24, Z+2	; 0x02
     e70:	93 81       	ldd	r25, Z+3	; 0x03
     e72:	82 17       	cp	r24, r18
     e74:	93 07       	cpc	r25, r19
     e76:	94 f0       	brlt	.+36     	; 0xe9c <__fpcmp_parts_f+0x88>
     e78:	28 17       	cp	r18, r24
     e7a:	39 07       	cpc	r19, r25
     e7c:	bc f0       	brlt	.+46     	; 0xeac <__fpcmp_parts_f+0x98>
     e7e:	14 96       	adiw	r26, 0x04	; 4
     e80:	8d 91       	ld	r24, X+
     e82:	9d 91       	ld	r25, X+
     e84:	0d 90       	ld	r0, X+
     e86:	bc 91       	ld	r27, X
     e88:	a0 2d       	mov	r26, r0
     e8a:	24 81       	ldd	r18, Z+4	; 0x04
     e8c:	35 81       	ldd	r19, Z+5	; 0x05
     e8e:	46 81       	ldd	r20, Z+6	; 0x06
     e90:	57 81       	ldd	r21, Z+7	; 0x07
     e92:	28 17       	cp	r18, r24
     e94:	39 07       	cpc	r19, r25
     e96:	4a 07       	cpc	r20, r26
     e98:	5b 07       	cpc	r21, r27
     e9a:	18 f4       	brcc	.+6      	; 0xea2 <__fpcmp_parts_f+0x8e>
     e9c:	11 23       	and	r17, r17
     e9e:	41 f0       	breq	.+16     	; 0xeb0 <__fpcmp_parts_f+0x9c>
     ea0:	0a c0       	rjmp	.+20     	; 0xeb6 <__fpcmp_parts_f+0xa2>
     ea2:	82 17       	cp	r24, r18
     ea4:	93 07       	cpc	r25, r19
     ea6:	a4 07       	cpc	r26, r20
     ea8:	b5 07       	cpc	r27, r21
     eaa:	40 f4       	brcc	.+16     	; 0xebc <__fpcmp_parts_f+0xa8>
     eac:	11 23       	and	r17, r17
     eae:	19 f0       	breq	.+6      	; 0xeb6 <__fpcmp_parts_f+0xa2>
     eb0:	61 e0       	ldi	r22, 0x01	; 1
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	05 c0       	rjmp	.+10     	; 0xec0 <__fpcmp_parts_f+0xac>
     eb6:	6f ef       	ldi	r22, 0xFF	; 255
     eb8:	7f ef       	ldi	r23, 0xFF	; 255
     eba:	02 c0       	rjmp	.+4      	; 0xec0 <__fpcmp_parts_f+0xac>
     ebc:	60 e0       	ldi	r22, 0x00	; 0
     ebe:	70 e0       	ldi	r23, 0x00	; 0
     ec0:	cb 01       	movw	r24, r22
     ec2:	1f 91       	pop	r17
     ec4:	08 95       	ret

00000ec6 <DIO_VidSetPinDirection>:
#include "BIT_MATH.h"
#include <avr/io.h>
#include "DIO_Interface.h"

void DIO_VidSetPinDirection(u8 copy_u8port ,u8 copy_u8Pin, u8 copy_U8Direction)
{
     ec6:	df 93       	push	r29
     ec8:	cf 93       	push	r28
     eca:	cd b7       	in	r28, 0x3d	; 61
     ecc:	de b7       	in	r29, 0x3e	; 62
     ece:	27 97       	sbiw	r28, 0x07	; 7
     ed0:	0f b6       	in	r0, 0x3f	; 63
     ed2:	f8 94       	cli
     ed4:	de bf       	out	0x3e, r29	; 62
     ed6:	0f be       	out	0x3f, r0	; 63
     ed8:	cd bf       	out	0x3d, r28	; 61
     eda:	89 83       	std	Y+1, r24	; 0x01
     edc:	6a 83       	std	Y+2, r22	; 0x02
     ede:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_U8Direction==1)
     ee0:	8b 81       	ldd	r24, Y+3	; 0x03
     ee2:	81 30       	cpi	r24, 0x01	; 1
     ee4:	09 f0       	breq	.+2      	; 0xee8 <DIO_VidSetPinDirection+0x22>
     ee6:	6f c0       	rjmp	.+222    	; 0xfc6 <DIO_VidSetPinDirection+0x100>
	{
		switch(copy_u8port)
     ee8:	89 81       	ldd	r24, Y+1	; 0x01
     eea:	28 2f       	mov	r18, r24
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	3f 83       	std	Y+7, r19	; 0x07
     ef0:	2e 83       	std	Y+6, r18	; 0x06
     ef2:	8e 81       	ldd	r24, Y+6	; 0x06
     ef4:	9f 81       	ldd	r25, Y+7	; 0x07
     ef6:	81 30       	cpi	r24, 0x01	; 1
     ef8:	91 05       	cpc	r25, r1
     efa:	49 f1       	breq	.+82     	; 0xf4e <DIO_VidSetPinDirection+0x88>
     efc:	2e 81       	ldd	r18, Y+6	; 0x06
     efe:	3f 81       	ldd	r19, Y+7	; 0x07
     f00:	22 30       	cpi	r18, 0x02	; 2
     f02:	31 05       	cpc	r19, r1
     f04:	2c f4       	brge	.+10     	; 0xf10 <DIO_VidSetPinDirection+0x4a>
     f06:	8e 81       	ldd	r24, Y+6	; 0x06
     f08:	9f 81       	ldd	r25, Y+7	; 0x07
     f0a:	00 97       	sbiw	r24, 0x00	; 0
     f0c:	61 f0       	breq	.+24     	; 0xf26 <DIO_VidSetPinDirection+0x60>
     f0e:	d2 c0       	rjmp	.+420    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
     f10:	2e 81       	ldd	r18, Y+6	; 0x06
     f12:	3f 81       	ldd	r19, Y+7	; 0x07
     f14:	22 30       	cpi	r18, 0x02	; 2
     f16:	31 05       	cpc	r19, r1
     f18:	71 f1       	breq	.+92     	; 0xf76 <DIO_VidSetPinDirection+0xb0>
     f1a:	8e 81       	ldd	r24, Y+6	; 0x06
     f1c:	9f 81       	ldd	r25, Y+7	; 0x07
     f1e:	83 30       	cpi	r24, 0x03	; 3
     f20:	91 05       	cpc	r25, r1
     f22:	e9 f1       	breq	.+122    	; 0xf9e <DIO_VidSetPinDirection+0xd8>
     f24:	c7 c0       	rjmp	.+398    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
		{
			case 0: SET_BIT(DDRA,copy_u8Pin);break;
     f26:	a1 e2       	ldi	r26, 0x21	; 33
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	e1 e2       	ldi	r30, 0x21	; 33
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	80 81       	ld	r24, Z
     f30:	48 2f       	mov	r20, r24
     f32:	8a 81       	ldd	r24, Y+2	; 0x02
     f34:	28 2f       	mov	r18, r24
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	02 2e       	mov	r0, r18
     f3e:	02 c0       	rjmp	.+4      	; 0xf44 <DIO_VidSetPinDirection+0x7e>
     f40:	88 0f       	add	r24, r24
     f42:	99 1f       	adc	r25, r25
     f44:	0a 94       	dec	r0
     f46:	e2 f7       	brpl	.-8      	; 0xf40 <DIO_VidSetPinDirection+0x7a>
     f48:	84 2b       	or	r24, r20
     f4a:	8c 93       	st	X, r24
     f4c:	b3 c0       	rjmp	.+358    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
			case 1: SET_BIT(DDRB,copy_u8Pin);break;
     f4e:	a4 e2       	ldi	r26, 0x24	; 36
     f50:	b0 e0       	ldi	r27, 0x00	; 0
     f52:	e4 e2       	ldi	r30, 0x24	; 36
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	80 81       	ld	r24, Z
     f58:	48 2f       	mov	r20, r24
     f5a:	8a 81       	ldd	r24, Y+2	; 0x02
     f5c:	28 2f       	mov	r18, r24
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	81 e0       	ldi	r24, 0x01	; 1
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	02 2e       	mov	r0, r18
     f66:	02 c0       	rjmp	.+4      	; 0xf6c <DIO_VidSetPinDirection+0xa6>
     f68:	88 0f       	add	r24, r24
     f6a:	99 1f       	adc	r25, r25
     f6c:	0a 94       	dec	r0
     f6e:	e2 f7       	brpl	.-8      	; 0xf68 <DIO_VidSetPinDirection+0xa2>
     f70:	84 2b       	or	r24, r20
     f72:	8c 93       	st	X, r24
     f74:	9f c0       	rjmp	.+318    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
			case 2: SET_BIT(DDRC,copy_u8Pin);break;
     f76:	a7 e2       	ldi	r26, 0x27	; 39
     f78:	b0 e0       	ldi	r27, 0x00	; 0
     f7a:	e7 e2       	ldi	r30, 0x27	; 39
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	80 81       	ld	r24, Z
     f80:	48 2f       	mov	r20, r24
     f82:	8a 81       	ldd	r24, Y+2	; 0x02
     f84:	28 2f       	mov	r18, r24
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	81 e0       	ldi	r24, 0x01	; 1
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	02 2e       	mov	r0, r18
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <DIO_VidSetPinDirection+0xce>
     f90:	88 0f       	add	r24, r24
     f92:	99 1f       	adc	r25, r25
     f94:	0a 94       	dec	r0
     f96:	e2 f7       	brpl	.-8      	; 0xf90 <DIO_VidSetPinDirection+0xca>
     f98:	84 2b       	or	r24, r20
     f9a:	8c 93       	st	X, r24
     f9c:	8b c0       	rjmp	.+278    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
			case 3: SET_BIT(DDRD,copy_u8Pin);break;
     f9e:	aa e2       	ldi	r26, 0x2A	; 42
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
     fa2:	ea e2       	ldi	r30, 0x2A	; 42
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	80 81       	ld	r24, Z
     fa8:	48 2f       	mov	r20, r24
     faa:	8a 81       	ldd	r24, Y+2	; 0x02
     fac:	28 2f       	mov	r18, r24
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	02 2e       	mov	r0, r18
     fb6:	02 c0       	rjmp	.+4      	; 0xfbc <DIO_VidSetPinDirection+0xf6>
     fb8:	88 0f       	add	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	0a 94       	dec	r0
     fbe:	e2 f7       	brpl	.-8      	; 0xfb8 <DIO_VidSetPinDirection+0xf2>
     fc0:	84 2b       	or	r24, r20
     fc2:	8c 93       	st	X, r24
     fc4:	77 c0       	rjmp	.+238    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
		}
	}
	else if(copy_U8Direction==0)
     fc6:	8b 81       	ldd	r24, Y+3	; 0x03
     fc8:	88 23       	and	r24, r24
     fca:	09 f0       	breq	.+2      	; 0xfce <DIO_VidSetPinDirection+0x108>
     fcc:	73 c0       	rjmp	.+230    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
	{
		switch(copy_u8port)
     fce:	89 81       	ldd	r24, Y+1	; 0x01
     fd0:	28 2f       	mov	r18, r24
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	3d 83       	std	Y+5, r19	; 0x05
     fd6:	2c 83       	std	Y+4, r18	; 0x04
     fd8:	8c 81       	ldd	r24, Y+4	; 0x04
     fda:	9d 81       	ldd	r25, Y+5	; 0x05
     fdc:	81 30       	cpi	r24, 0x01	; 1
     fde:	91 05       	cpc	r25, r1
     fe0:	59 f1       	breq	.+86     	; 0x1038 <DIO_VidSetPinDirection+0x172>
     fe2:	2c 81       	ldd	r18, Y+4	; 0x04
     fe4:	3d 81       	ldd	r19, Y+5	; 0x05
     fe6:	22 30       	cpi	r18, 0x02	; 2
     fe8:	31 05       	cpc	r19, r1
     fea:	2c f4       	brge	.+10     	; 0xff6 <DIO_VidSetPinDirection+0x130>
     fec:	8c 81       	ldd	r24, Y+4	; 0x04
     fee:	9d 81       	ldd	r25, Y+5	; 0x05
     ff0:	00 97       	sbiw	r24, 0x00	; 0
     ff2:	69 f0       	breq	.+26     	; 0x100e <DIO_VidSetPinDirection+0x148>
     ff4:	5f c0       	rjmp	.+190    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
     ff6:	2c 81       	ldd	r18, Y+4	; 0x04
     ff8:	3d 81       	ldd	r19, Y+5	; 0x05
     ffa:	22 30       	cpi	r18, 0x02	; 2
     ffc:	31 05       	cpc	r19, r1
     ffe:	89 f1       	breq	.+98     	; 0x1062 <DIO_VidSetPinDirection+0x19c>
    1000:	8c 81       	ldd	r24, Y+4	; 0x04
    1002:	9d 81       	ldd	r25, Y+5	; 0x05
    1004:	83 30       	cpi	r24, 0x03	; 3
    1006:	91 05       	cpc	r25, r1
    1008:	09 f4       	brne	.+2      	; 0x100c <DIO_VidSetPinDirection+0x146>
    100a:	40 c0       	rjmp	.+128    	; 0x108c <DIO_VidSetPinDirection+0x1c6>
    100c:	53 c0       	rjmp	.+166    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
		{
			case 0: CLR_BIT(DDRA,copy_u8Pin);break;
    100e:	a1 e2       	ldi	r26, 0x21	; 33
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	e1 e2       	ldi	r30, 0x21	; 33
    1014:	f0 e0       	ldi	r31, 0x00	; 0
    1016:	80 81       	ld	r24, Z
    1018:	48 2f       	mov	r20, r24
    101a:	8a 81       	ldd	r24, Y+2	; 0x02
    101c:	28 2f       	mov	r18, r24
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	02 2e       	mov	r0, r18
    1026:	02 c0       	rjmp	.+4      	; 0x102c <DIO_VidSetPinDirection+0x166>
    1028:	88 0f       	add	r24, r24
    102a:	99 1f       	adc	r25, r25
    102c:	0a 94       	dec	r0
    102e:	e2 f7       	brpl	.-8      	; 0x1028 <DIO_VidSetPinDirection+0x162>
    1030:	80 95       	com	r24
    1032:	84 23       	and	r24, r20
    1034:	8c 93       	st	X, r24
    1036:	3e c0       	rjmp	.+124    	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
			case 1: CLR_BIT(DDRB,copy_u8Pin);break;
    1038:	a4 e2       	ldi	r26, 0x24	; 36
    103a:	b0 e0       	ldi	r27, 0x00	; 0
    103c:	e4 e2       	ldi	r30, 0x24	; 36
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	80 81       	ld	r24, Z
    1042:	48 2f       	mov	r20, r24
    1044:	8a 81       	ldd	r24, Y+2	; 0x02
    1046:	28 2f       	mov	r18, r24
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	02 2e       	mov	r0, r18
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <DIO_VidSetPinDirection+0x190>
    1052:	88 0f       	add	r24, r24
    1054:	99 1f       	adc	r25, r25
    1056:	0a 94       	dec	r0
    1058:	e2 f7       	brpl	.-8      	; 0x1052 <DIO_VidSetPinDirection+0x18c>
    105a:	80 95       	com	r24
    105c:	84 23       	and	r24, r20
    105e:	8c 93       	st	X, r24
    1060:	29 c0       	rjmp	.+82     	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
			case 2: CLR_BIT(DDRC,copy_u8Pin);break;
    1062:	a7 e2       	ldi	r26, 0x27	; 39
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e7 e2       	ldi	r30, 0x27	; 39
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	48 2f       	mov	r20, r24
    106e:	8a 81       	ldd	r24, Y+2	; 0x02
    1070:	28 2f       	mov	r18, r24
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	02 2e       	mov	r0, r18
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <DIO_VidSetPinDirection+0x1ba>
    107c:	88 0f       	add	r24, r24
    107e:	99 1f       	adc	r25, r25
    1080:	0a 94       	dec	r0
    1082:	e2 f7       	brpl	.-8      	; 0x107c <DIO_VidSetPinDirection+0x1b6>
    1084:	80 95       	com	r24
    1086:	84 23       	and	r24, r20
    1088:	8c 93       	st	X, r24
    108a:	14 c0       	rjmp	.+40     	; 0x10b4 <DIO_VidSetPinDirection+0x1ee>
			case 3: CLR_BIT(DDRD,copy_u8Pin);break;
    108c:	aa e2       	ldi	r26, 0x2A	; 42
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	ea e2       	ldi	r30, 0x2A	; 42
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	80 81       	ld	r24, Z
    1096:	48 2f       	mov	r20, r24
    1098:	8a 81       	ldd	r24, Y+2	; 0x02
    109a:	28 2f       	mov	r18, r24
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	02 2e       	mov	r0, r18
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <DIO_VidSetPinDirection+0x1e4>
    10a6:	88 0f       	add	r24, r24
    10a8:	99 1f       	adc	r25, r25
    10aa:	0a 94       	dec	r0
    10ac:	e2 f7       	brpl	.-8      	; 0x10a6 <DIO_VidSetPinDirection+0x1e0>
    10ae:	80 95       	com	r24
    10b0:	84 23       	and	r24, r20
    10b2:	8c 93       	st	X, r24
		}

	}
}
    10b4:	27 96       	adiw	r28, 0x07	; 7
    10b6:	0f b6       	in	r0, 0x3f	; 63
    10b8:	f8 94       	cli
    10ba:	de bf       	out	0x3e, r29	; 62
    10bc:	0f be       	out	0x3f, r0	; 63
    10be:	cd bf       	out	0x3d, r28	; 61
    10c0:	cf 91       	pop	r28
    10c2:	df 91       	pop	r29
    10c4:	08 95       	ret

000010c6 <DIO_VidSetPinValue>:

void DIO_VidSetPinValue(u8 copy_U8port ,u8 copy_U8Pin , u8 copy_U8Value)
{
    10c6:	df 93       	push	r29
    10c8:	cf 93       	push	r28
    10ca:	cd b7       	in	r28, 0x3d	; 61
    10cc:	de b7       	in	r29, 0x3e	; 62
    10ce:	27 97       	sbiw	r28, 0x07	; 7
    10d0:	0f b6       	in	r0, 0x3f	; 63
    10d2:	f8 94       	cli
    10d4:	de bf       	out	0x3e, r29	; 62
    10d6:	0f be       	out	0x3f, r0	; 63
    10d8:	cd bf       	out	0x3d, r28	; 61
    10da:	89 83       	std	Y+1, r24	; 0x01
    10dc:	6a 83       	std	Y+2, r22	; 0x02
    10de:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_U8Value==1)
    10e0:	8b 81       	ldd	r24, Y+3	; 0x03
    10e2:	81 30       	cpi	r24, 0x01	; 1
    10e4:	09 f0       	breq	.+2      	; 0x10e8 <DIO_VidSetPinValue+0x22>
    10e6:	6f c0       	rjmp	.+222    	; 0x11c6 <DIO_VidSetPinValue+0x100>
	{
		switch(copy_U8port)
    10e8:	89 81       	ldd	r24, Y+1	; 0x01
    10ea:	28 2f       	mov	r18, r24
    10ec:	30 e0       	ldi	r19, 0x00	; 0
    10ee:	3f 83       	std	Y+7, r19	; 0x07
    10f0:	2e 83       	std	Y+6, r18	; 0x06
    10f2:	8e 81       	ldd	r24, Y+6	; 0x06
    10f4:	9f 81       	ldd	r25, Y+7	; 0x07
    10f6:	81 30       	cpi	r24, 0x01	; 1
    10f8:	91 05       	cpc	r25, r1
    10fa:	49 f1       	breq	.+82     	; 0x114e <DIO_VidSetPinValue+0x88>
    10fc:	2e 81       	ldd	r18, Y+6	; 0x06
    10fe:	3f 81       	ldd	r19, Y+7	; 0x07
    1100:	22 30       	cpi	r18, 0x02	; 2
    1102:	31 05       	cpc	r19, r1
    1104:	2c f4       	brge	.+10     	; 0x1110 <DIO_VidSetPinValue+0x4a>
    1106:	8e 81       	ldd	r24, Y+6	; 0x06
    1108:	9f 81       	ldd	r25, Y+7	; 0x07
    110a:	00 97       	sbiw	r24, 0x00	; 0
    110c:	61 f0       	breq	.+24     	; 0x1126 <DIO_VidSetPinValue+0x60>
    110e:	d2 c0       	rjmp	.+420    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
    1110:	2e 81       	ldd	r18, Y+6	; 0x06
    1112:	3f 81       	ldd	r19, Y+7	; 0x07
    1114:	22 30       	cpi	r18, 0x02	; 2
    1116:	31 05       	cpc	r19, r1
    1118:	71 f1       	breq	.+92     	; 0x1176 <DIO_VidSetPinValue+0xb0>
    111a:	8e 81       	ldd	r24, Y+6	; 0x06
    111c:	9f 81       	ldd	r25, Y+7	; 0x07
    111e:	83 30       	cpi	r24, 0x03	; 3
    1120:	91 05       	cpc	r25, r1
    1122:	e9 f1       	breq	.+122    	; 0x119e <DIO_VidSetPinValue+0xd8>
    1124:	c7 c0       	rjmp	.+398    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
		{
			case 0: SET_BIT(PORTA,copy_U8Pin);
    1126:	a2 e2       	ldi	r26, 0x22	; 34
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	e2 e2       	ldi	r30, 0x22	; 34
    112c:	f0 e0       	ldi	r31, 0x00	; 0
    112e:	80 81       	ld	r24, Z
    1130:	48 2f       	mov	r20, r24
    1132:	8a 81       	ldd	r24, Y+2	; 0x02
    1134:	28 2f       	mov	r18, r24
    1136:	30 e0       	ldi	r19, 0x00	; 0
    1138:	81 e0       	ldi	r24, 0x01	; 1
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	02 2e       	mov	r0, r18
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <DIO_VidSetPinValue+0x7e>
    1140:	88 0f       	add	r24, r24
    1142:	99 1f       	adc	r25, r25
    1144:	0a 94       	dec	r0
    1146:	e2 f7       	brpl	.-8      	; 0x1140 <DIO_VidSetPinValue+0x7a>
    1148:	84 2b       	or	r24, r20
    114a:	8c 93       	st	X, r24
    114c:	b3 c0       	rjmp	.+358    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
				break;
			case 1: SET_BIT(PORTB,copy_U8Pin);
    114e:	a5 e2       	ldi	r26, 0x25	; 37
    1150:	b0 e0       	ldi	r27, 0x00	; 0
    1152:	e5 e2       	ldi	r30, 0x25	; 37
    1154:	f0 e0       	ldi	r31, 0x00	; 0
    1156:	80 81       	ld	r24, Z
    1158:	48 2f       	mov	r20, r24
    115a:	8a 81       	ldd	r24, Y+2	; 0x02
    115c:	28 2f       	mov	r18, r24
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	81 e0       	ldi	r24, 0x01	; 1
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	02 2e       	mov	r0, r18
    1166:	02 c0       	rjmp	.+4      	; 0x116c <DIO_VidSetPinValue+0xa6>
    1168:	88 0f       	add	r24, r24
    116a:	99 1f       	adc	r25, r25
    116c:	0a 94       	dec	r0
    116e:	e2 f7       	brpl	.-8      	; 0x1168 <DIO_VidSetPinValue+0xa2>
    1170:	84 2b       	or	r24, r20
    1172:	8c 93       	st	X, r24
    1174:	9f c0       	rjmp	.+318    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
				break;
			case 2: SET_BIT(PORTC,copy_U8Pin);
    1176:	a8 e2       	ldi	r26, 0x28	; 40
    1178:	b0 e0       	ldi	r27, 0x00	; 0
    117a:	e8 e2       	ldi	r30, 0x28	; 40
    117c:	f0 e0       	ldi	r31, 0x00	; 0
    117e:	80 81       	ld	r24, Z
    1180:	48 2f       	mov	r20, r24
    1182:	8a 81       	ldd	r24, Y+2	; 0x02
    1184:	28 2f       	mov	r18, r24
    1186:	30 e0       	ldi	r19, 0x00	; 0
    1188:	81 e0       	ldi	r24, 0x01	; 1
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	02 2e       	mov	r0, r18
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <DIO_VidSetPinValue+0xce>
    1190:	88 0f       	add	r24, r24
    1192:	99 1f       	adc	r25, r25
    1194:	0a 94       	dec	r0
    1196:	e2 f7       	brpl	.-8      	; 0x1190 <DIO_VidSetPinValue+0xca>
    1198:	84 2b       	or	r24, r20
    119a:	8c 93       	st	X, r24
    119c:	8b c0       	rjmp	.+278    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
				break;
			case 3: SET_BIT(PORTD,copy_U8Pin);
    119e:	ab e2       	ldi	r26, 0x2B	; 43
    11a0:	b0 e0       	ldi	r27, 0x00	; 0
    11a2:	eb e2       	ldi	r30, 0x2B	; 43
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	80 81       	ld	r24, Z
    11a8:	48 2f       	mov	r20, r24
    11aa:	8a 81       	ldd	r24, Y+2	; 0x02
    11ac:	28 2f       	mov	r18, r24
    11ae:	30 e0       	ldi	r19, 0x00	; 0
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	02 2e       	mov	r0, r18
    11b6:	02 c0       	rjmp	.+4      	; 0x11bc <DIO_VidSetPinValue+0xf6>
    11b8:	88 0f       	add	r24, r24
    11ba:	99 1f       	adc	r25, r25
    11bc:	0a 94       	dec	r0
    11be:	e2 f7       	brpl	.-8      	; 0x11b8 <DIO_VidSetPinValue+0xf2>
    11c0:	84 2b       	or	r24, r20
    11c2:	8c 93       	st	X, r24
    11c4:	77 c0       	rjmp	.+238    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
				break;
		}
	}
	else if(copy_U8Value==0)
    11c6:	8b 81       	ldd	r24, Y+3	; 0x03
    11c8:	88 23       	and	r24, r24
    11ca:	09 f0       	breq	.+2      	; 0x11ce <DIO_VidSetPinValue+0x108>
    11cc:	73 c0       	rjmp	.+230    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
	{
		switch(copy_U8port)
    11ce:	89 81       	ldd	r24, Y+1	; 0x01
    11d0:	28 2f       	mov	r18, r24
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	3d 83       	std	Y+5, r19	; 0x05
    11d6:	2c 83       	std	Y+4, r18	; 0x04
    11d8:	8c 81       	ldd	r24, Y+4	; 0x04
    11da:	9d 81       	ldd	r25, Y+5	; 0x05
    11dc:	81 30       	cpi	r24, 0x01	; 1
    11de:	91 05       	cpc	r25, r1
    11e0:	59 f1       	breq	.+86     	; 0x1238 <DIO_VidSetPinValue+0x172>
    11e2:	2c 81       	ldd	r18, Y+4	; 0x04
    11e4:	3d 81       	ldd	r19, Y+5	; 0x05
    11e6:	22 30       	cpi	r18, 0x02	; 2
    11e8:	31 05       	cpc	r19, r1
    11ea:	2c f4       	brge	.+10     	; 0x11f6 <DIO_VidSetPinValue+0x130>
    11ec:	8c 81       	ldd	r24, Y+4	; 0x04
    11ee:	9d 81       	ldd	r25, Y+5	; 0x05
    11f0:	00 97       	sbiw	r24, 0x00	; 0
    11f2:	69 f0       	breq	.+26     	; 0x120e <DIO_VidSetPinValue+0x148>
    11f4:	5f c0       	rjmp	.+190    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
    11f6:	2c 81       	ldd	r18, Y+4	; 0x04
    11f8:	3d 81       	ldd	r19, Y+5	; 0x05
    11fa:	22 30       	cpi	r18, 0x02	; 2
    11fc:	31 05       	cpc	r19, r1
    11fe:	89 f1       	breq	.+98     	; 0x1262 <DIO_VidSetPinValue+0x19c>
    1200:	8c 81       	ldd	r24, Y+4	; 0x04
    1202:	9d 81       	ldd	r25, Y+5	; 0x05
    1204:	83 30       	cpi	r24, 0x03	; 3
    1206:	91 05       	cpc	r25, r1
    1208:	09 f4       	brne	.+2      	; 0x120c <DIO_VidSetPinValue+0x146>
    120a:	40 c0       	rjmp	.+128    	; 0x128c <DIO_VidSetPinValue+0x1c6>
    120c:	53 c0       	rjmp	.+166    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
		{
			case 0: CLR_BIT(PORTA,copy_U8Pin);
    120e:	a2 e2       	ldi	r26, 0x22	; 34
    1210:	b0 e0       	ldi	r27, 0x00	; 0
    1212:	e2 e2       	ldi	r30, 0x22	; 34
    1214:	f0 e0       	ldi	r31, 0x00	; 0
    1216:	80 81       	ld	r24, Z
    1218:	48 2f       	mov	r20, r24
    121a:	8a 81       	ldd	r24, Y+2	; 0x02
    121c:	28 2f       	mov	r18, r24
    121e:	30 e0       	ldi	r19, 0x00	; 0
    1220:	81 e0       	ldi	r24, 0x01	; 1
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	02 2e       	mov	r0, r18
    1226:	02 c0       	rjmp	.+4      	; 0x122c <DIO_VidSetPinValue+0x166>
    1228:	88 0f       	add	r24, r24
    122a:	99 1f       	adc	r25, r25
    122c:	0a 94       	dec	r0
    122e:	e2 f7       	brpl	.-8      	; 0x1228 <DIO_VidSetPinValue+0x162>
    1230:	80 95       	com	r24
    1232:	84 23       	and	r24, r20
    1234:	8c 93       	st	X, r24
    1236:	3e c0       	rjmp	.+124    	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
				break;
			case 1: CLR_BIT(PORTB,copy_U8Pin);
    1238:	a5 e2       	ldi	r26, 0x25	; 37
    123a:	b0 e0       	ldi	r27, 0x00	; 0
    123c:	e5 e2       	ldi	r30, 0x25	; 37
    123e:	f0 e0       	ldi	r31, 0x00	; 0
    1240:	80 81       	ld	r24, Z
    1242:	48 2f       	mov	r20, r24
    1244:	8a 81       	ldd	r24, Y+2	; 0x02
    1246:	28 2f       	mov	r18, r24
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	81 e0       	ldi	r24, 0x01	; 1
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	02 2e       	mov	r0, r18
    1250:	02 c0       	rjmp	.+4      	; 0x1256 <DIO_VidSetPinValue+0x190>
    1252:	88 0f       	add	r24, r24
    1254:	99 1f       	adc	r25, r25
    1256:	0a 94       	dec	r0
    1258:	e2 f7       	brpl	.-8      	; 0x1252 <DIO_VidSetPinValue+0x18c>
    125a:	80 95       	com	r24
    125c:	84 23       	and	r24, r20
    125e:	8c 93       	st	X, r24
    1260:	29 c0       	rjmp	.+82     	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
				break;
			case 2: CLR_BIT(PORTC,copy_U8Pin);
    1262:	a8 e2       	ldi	r26, 0x28	; 40
    1264:	b0 e0       	ldi	r27, 0x00	; 0
    1266:	e8 e2       	ldi	r30, 0x28	; 40
    1268:	f0 e0       	ldi	r31, 0x00	; 0
    126a:	80 81       	ld	r24, Z
    126c:	48 2f       	mov	r20, r24
    126e:	8a 81       	ldd	r24, Y+2	; 0x02
    1270:	28 2f       	mov	r18, r24
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	81 e0       	ldi	r24, 0x01	; 1
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	02 2e       	mov	r0, r18
    127a:	02 c0       	rjmp	.+4      	; 0x1280 <DIO_VidSetPinValue+0x1ba>
    127c:	88 0f       	add	r24, r24
    127e:	99 1f       	adc	r25, r25
    1280:	0a 94       	dec	r0
    1282:	e2 f7       	brpl	.-8      	; 0x127c <DIO_VidSetPinValue+0x1b6>
    1284:	80 95       	com	r24
    1286:	84 23       	and	r24, r20
    1288:	8c 93       	st	X, r24
    128a:	14 c0       	rjmp	.+40     	; 0x12b4 <DIO_VidSetPinValue+0x1ee>
				break;
			case 3: CLR_BIT(PORTD,copy_U8Pin);
    128c:	ab e2       	ldi	r26, 0x2B	; 43
    128e:	b0 e0       	ldi	r27, 0x00	; 0
    1290:	eb e2       	ldi	r30, 0x2B	; 43
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	80 81       	ld	r24, Z
    1296:	48 2f       	mov	r20, r24
    1298:	8a 81       	ldd	r24, Y+2	; 0x02
    129a:	28 2f       	mov	r18, r24
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	02 2e       	mov	r0, r18
    12a4:	02 c0       	rjmp	.+4      	; 0x12aa <DIO_VidSetPinValue+0x1e4>
    12a6:	88 0f       	add	r24, r24
    12a8:	99 1f       	adc	r25, r25
    12aa:	0a 94       	dec	r0
    12ac:	e2 f7       	brpl	.-8      	; 0x12a6 <DIO_VidSetPinValue+0x1e0>
    12ae:	80 95       	com	r24
    12b0:	84 23       	and	r24, r20
    12b2:	8c 93       	st	X, r24
				break;
		}

	}
}
    12b4:	27 96       	adiw	r28, 0x07	; 7
    12b6:	0f b6       	in	r0, 0x3f	; 63
    12b8:	f8 94       	cli
    12ba:	de bf       	out	0x3e, r29	; 62
    12bc:	0f be       	out	0x3f, r0	; 63
    12be:	cd bf       	out	0x3d, r28	; 61
    12c0:	cf 91       	pop	r28
    12c2:	df 91       	pop	r29
    12c4:	08 95       	ret

000012c6 <DIO_U8GetPinValue>:



u8 DIO_U8GetPinValue(u8 copy_u8port ,u8 copy_U8Pin)
{
    12c6:	df 93       	push	r29
    12c8:	cf 93       	push	r28
    12ca:	00 d0       	rcall	.+0      	; 0x12cc <DIO_U8GetPinValue+0x6>
    12cc:	00 d0       	rcall	.+0      	; 0x12ce <DIO_U8GetPinValue+0x8>
    12ce:	cd b7       	in	r28, 0x3d	; 61
    12d0:	de b7       	in	r29, 0x3e	; 62
    12d2:	89 83       	std	Y+1, r24	; 0x01
    12d4:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8port)
    12d6:	89 81       	ldd	r24, Y+1	; 0x01
    12d8:	28 2f       	mov	r18, r24
    12da:	30 e0       	ldi	r19, 0x00	; 0
    12dc:	3d 83       	std	Y+5, r19	; 0x05
    12de:	2c 83       	std	Y+4, r18	; 0x04
    12e0:	4c 81       	ldd	r20, Y+4	; 0x04
    12e2:	5d 81       	ldd	r21, Y+5	; 0x05
    12e4:	41 30       	cpi	r20, 0x01	; 1
    12e6:	51 05       	cpc	r21, r1
    12e8:	49 f1       	breq	.+82     	; 0x133c <DIO_U8GetPinValue+0x76>
    12ea:	8c 81       	ldd	r24, Y+4	; 0x04
    12ec:	9d 81       	ldd	r25, Y+5	; 0x05
    12ee:	82 30       	cpi	r24, 0x02	; 2
    12f0:	91 05       	cpc	r25, r1
    12f2:	34 f4       	brge	.+12     	; 0x1300 <DIO_U8GetPinValue+0x3a>
    12f4:	2c 81       	ldd	r18, Y+4	; 0x04
    12f6:	3d 81       	ldd	r19, Y+5	; 0x05
    12f8:	21 15       	cp	r18, r1
    12fa:	31 05       	cpc	r19, r1
    12fc:	61 f0       	breq	.+24     	; 0x1316 <DIO_U8GetPinValue+0x50>
    12fe:	57 c0       	rjmp	.+174    	; 0x13ae <DIO_U8GetPinValue+0xe8>
    1300:	4c 81       	ldd	r20, Y+4	; 0x04
    1302:	5d 81       	ldd	r21, Y+5	; 0x05
    1304:	42 30       	cpi	r20, 0x02	; 2
    1306:	51 05       	cpc	r21, r1
    1308:	61 f1       	breq	.+88     	; 0x1362 <DIO_U8GetPinValue+0x9c>
    130a:	8c 81       	ldd	r24, Y+4	; 0x04
    130c:	9d 81       	ldd	r25, Y+5	; 0x05
    130e:	83 30       	cpi	r24, 0x03	; 3
    1310:	91 05       	cpc	r25, r1
    1312:	d1 f1       	breq	.+116    	; 0x1388 <DIO_U8GetPinValue+0xc2>
    1314:	4c c0       	rjmp	.+152    	; 0x13ae <DIO_U8GetPinValue+0xe8>
	{
		case 0:return GET_BIT(PINA,copy_U8Pin);break;
    1316:	e0 e2       	ldi	r30, 0x20	; 32
    1318:	f0 e0       	ldi	r31, 0x00	; 0
    131a:	80 81       	ld	r24, Z
    131c:	28 2f       	mov	r18, r24
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	8a 81       	ldd	r24, Y+2	; 0x02
    1322:	88 2f       	mov	r24, r24
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	a9 01       	movw	r20, r18
    1328:	02 c0       	rjmp	.+4      	; 0x132e <DIO_U8GetPinValue+0x68>
    132a:	55 95       	asr	r21
    132c:	47 95       	ror	r20
    132e:	8a 95       	dec	r24
    1330:	e2 f7       	brpl	.-8      	; 0x132a <DIO_U8GetPinValue+0x64>
    1332:	ca 01       	movw	r24, r20
    1334:	58 2f       	mov	r21, r24
    1336:	51 70       	andi	r21, 0x01	; 1
    1338:	5b 83       	std	Y+3, r21	; 0x03
    133a:	3a c0       	rjmp	.+116    	; 0x13b0 <DIO_U8GetPinValue+0xea>
		case 1:return GET_BIT(PINB,copy_U8Pin);break;
    133c:	e3 e2       	ldi	r30, 0x23	; 35
    133e:	f0 e0       	ldi	r31, 0x00	; 0
    1340:	80 81       	ld	r24, Z
    1342:	28 2f       	mov	r18, r24
    1344:	30 e0       	ldi	r19, 0x00	; 0
    1346:	8a 81       	ldd	r24, Y+2	; 0x02
    1348:	88 2f       	mov	r24, r24
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	a9 01       	movw	r20, r18
    134e:	02 c0       	rjmp	.+4      	; 0x1354 <DIO_U8GetPinValue+0x8e>
    1350:	55 95       	asr	r21
    1352:	47 95       	ror	r20
    1354:	8a 95       	dec	r24
    1356:	e2 f7       	brpl	.-8      	; 0x1350 <DIO_U8GetPinValue+0x8a>
    1358:	ca 01       	movw	r24, r20
    135a:	58 2f       	mov	r21, r24
    135c:	51 70       	andi	r21, 0x01	; 1
    135e:	5b 83       	std	Y+3, r21	; 0x03
    1360:	27 c0       	rjmp	.+78     	; 0x13b0 <DIO_U8GetPinValue+0xea>
		case 2:return GET_BIT(PINC,copy_U8Pin);break;
    1362:	e6 e2       	ldi	r30, 0x26	; 38
    1364:	f0 e0       	ldi	r31, 0x00	; 0
    1366:	80 81       	ld	r24, Z
    1368:	28 2f       	mov	r18, r24
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	8a 81       	ldd	r24, Y+2	; 0x02
    136e:	88 2f       	mov	r24, r24
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	a9 01       	movw	r20, r18
    1374:	02 c0       	rjmp	.+4      	; 0x137a <DIO_U8GetPinValue+0xb4>
    1376:	55 95       	asr	r21
    1378:	47 95       	ror	r20
    137a:	8a 95       	dec	r24
    137c:	e2 f7       	brpl	.-8      	; 0x1376 <DIO_U8GetPinValue+0xb0>
    137e:	ca 01       	movw	r24, r20
    1380:	58 2f       	mov	r21, r24
    1382:	51 70       	andi	r21, 0x01	; 1
    1384:	5b 83       	std	Y+3, r21	; 0x03
    1386:	14 c0       	rjmp	.+40     	; 0x13b0 <DIO_U8GetPinValue+0xea>
		case 3:return GET_BIT(PIND,copy_U8Pin);break;
    1388:	e9 e2       	ldi	r30, 0x29	; 41
    138a:	f0 e0       	ldi	r31, 0x00	; 0
    138c:	80 81       	ld	r24, Z
    138e:	28 2f       	mov	r18, r24
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	8a 81       	ldd	r24, Y+2	; 0x02
    1394:	88 2f       	mov	r24, r24
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	a9 01       	movw	r20, r18
    139a:	02 c0       	rjmp	.+4      	; 0x13a0 <DIO_U8GetPinValue+0xda>
    139c:	55 95       	asr	r21
    139e:	47 95       	ror	r20
    13a0:	8a 95       	dec	r24
    13a2:	e2 f7       	brpl	.-8      	; 0x139c <DIO_U8GetPinValue+0xd6>
    13a4:	ca 01       	movw	r24, r20
    13a6:	58 2f       	mov	r21, r24
    13a8:	51 70       	andi	r21, 0x01	; 1
    13aa:	5b 83       	std	Y+3, r21	; 0x03
    13ac:	01 c0       	rjmp	.+2      	; 0x13b0 <DIO_U8GetPinValue+0xea>
    13ae:	02 c0       	rjmp	.+4      	; 0x13b4 <DIO_U8GetPinValue+0xee>
	}
}
    13b0:	8b 81       	ldd	r24, Y+3	; 0x03
    13b2:	8e 83       	std	Y+6, r24	; 0x06
    13b4:	8e 81       	ldd	r24, Y+6	; 0x06
    13b6:	26 96       	adiw	r28, 0x06	; 6
    13b8:	0f b6       	in	r0, 0x3f	; 63
    13ba:	f8 94       	cli
    13bc:	de bf       	out	0x3e, r29	; 62
    13be:	0f be       	out	0x3f, r0	; 63
    13c0:	cd bf       	out	0x3d, r28	; 61
    13c2:	cf 91       	pop	r28
    13c4:	df 91       	pop	r29
    13c6:	08 95       	ret

000013c8 <DIO_VidSetPortValue>:


void DIO_VidSetPortValue(u8 copy_u8port ,u8 copy_U8Value)
{
    13c8:	df 93       	push	r29
    13ca:	cf 93       	push	r28
    13cc:	00 d0       	rcall	.+0      	; 0x13ce <DIO_VidSetPortValue+0x6>
    13ce:	0f 92       	push	r0
    13d0:	cd b7       	in	r28, 0x3d	; 61
    13d2:	de b7       	in	r29, 0x3e	; 62
    13d4:	89 83       	std	Y+1, r24	; 0x01
    13d6:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8port)
    13d8:	89 81       	ldd	r24, Y+1	; 0x01
    13da:	28 2f       	mov	r18, r24
    13dc:	30 e0       	ldi	r19, 0x00	; 0
    13de:	3c 83       	std	Y+4, r19	; 0x04
    13e0:	2b 83       	std	Y+3, r18	; 0x03
    13e2:	8b 81       	ldd	r24, Y+3	; 0x03
    13e4:	9c 81       	ldd	r25, Y+4	; 0x04
    13e6:	81 30       	cpi	r24, 0x01	; 1
    13e8:	91 05       	cpc	r25, r1
    13ea:	d1 f0       	breq	.+52     	; 0x1420 <DIO_VidSetPortValue+0x58>
    13ec:	2b 81       	ldd	r18, Y+3	; 0x03
    13ee:	3c 81       	ldd	r19, Y+4	; 0x04
    13f0:	22 30       	cpi	r18, 0x02	; 2
    13f2:	31 05       	cpc	r19, r1
    13f4:	2c f4       	brge	.+10     	; 0x1400 <DIO_VidSetPortValue+0x38>
    13f6:	8b 81       	ldd	r24, Y+3	; 0x03
    13f8:	9c 81       	ldd	r25, Y+4	; 0x04
    13fa:	00 97       	sbiw	r24, 0x00	; 0
    13fc:	61 f0       	breq	.+24     	; 0x1416 <DIO_VidSetPortValue+0x4e>
    13fe:	1e c0       	rjmp	.+60     	; 0x143c <DIO_VidSetPortValue+0x74>
    1400:	2b 81       	ldd	r18, Y+3	; 0x03
    1402:	3c 81       	ldd	r19, Y+4	; 0x04
    1404:	22 30       	cpi	r18, 0x02	; 2
    1406:	31 05       	cpc	r19, r1
    1408:	81 f0       	breq	.+32     	; 0x142a <DIO_VidSetPortValue+0x62>
    140a:	8b 81       	ldd	r24, Y+3	; 0x03
    140c:	9c 81       	ldd	r25, Y+4	; 0x04
    140e:	83 30       	cpi	r24, 0x03	; 3
    1410:	91 05       	cpc	r25, r1
    1412:	81 f0       	breq	.+32     	; 0x1434 <DIO_VidSetPortValue+0x6c>
    1414:	13 c0       	rjmp	.+38     	; 0x143c <DIO_VidSetPortValue+0x74>
	{
		case 0:PORTA=copy_U8Value;break;
    1416:	e2 e2       	ldi	r30, 0x22	; 34
    1418:	f0 e0       	ldi	r31, 0x00	; 0
    141a:	8a 81       	ldd	r24, Y+2	; 0x02
    141c:	80 83       	st	Z, r24
    141e:	0e c0       	rjmp	.+28     	; 0x143c <DIO_VidSetPortValue+0x74>
		case 1:PORTB=copy_U8Value;break;
    1420:	e5 e2       	ldi	r30, 0x25	; 37
    1422:	f0 e0       	ldi	r31, 0x00	; 0
    1424:	8a 81       	ldd	r24, Y+2	; 0x02
    1426:	80 83       	st	Z, r24
    1428:	09 c0       	rjmp	.+18     	; 0x143c <DIO_VidSetPortValue+0x74>
		case 2:PORTC=copy_U8Value;break;
    142a:	e8 e2       	ldi	r30, 0x28	; 40
    142c:	f0 e0       	ldi	r31, 0x00	; 0
    142e:	8a 81       	ldd	r24, Y+2	; 0x02
    1430:	80 83       	st	Z, r24
    1432:	04 c0       	rjmp	.+8      	; 0x143c <DIO_VidSetPortValue+0x74>
		case 3:PORTD=copy_U8Value;break;
    1434:	eb e2       	ldi	r30, 0x2B	; 43
    1436:	f0 e0       	ldi	r31, 0x00	; 0
    1438:	8a 81       	ldd	r24, Y+2	; 0x02
    143a:	80 83       	st	Z, r24
	}
}
    143c:	0f 90       	pop	r0
    143e:	0f 90       	pop	r0
    1440:	0f 90       	pop	r0
    1442:	0f 90       	pop	r0
    1444:	cf 91       	pop	r28
    1446:	df 91       	pop	r29
    1448:	08 95       	ret

0000144a <DIO_VidSetPortDirection>:

void DIO_VidSetPortDirection(u8 copy_u8port ,u8 copy_U8Direction)
{
    144a:	df 93       	push	r29
    144c:	cf 93       	push	r28
    144e:	00 d0       	rcall	.+0      	; 0x1450 <DIO_VidSetPortDirection+0x6>
    1450:	0f 92       	push	r0
    1452:	cd b7       	in	r28, 0x3d	; 61
    1454:	de b7       	in	r29, 0x3e	; 62
    1456:	89 83       	std	Y+1, r24	; 0x01
    1458:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8port)
    145a:	89 81       	ldd	r24, Y+1	; 0x01
    145c:	28 2f       	mov	r18, r24
    145e:	30 e0       	ldi	r19, 0x00	; 0
    1460:	3c 83       	std	Y+4, r19	; 0x04
    1462:	2b 83       	std	Y+3, r18	; 0x03
    1464:	8b 81       	ldd	r24, Y+3	; 0x03
    1466:	9c 81       	ldd	r25, Y+4	; 0x04
    1468:	81 30       	cpi	r24, 0x01	; 1
    146a:	91 05       	cpc	r25, r1
    146c:	d1 f0       	breq	.+52     	; 0x14a2 <DIO_VidSetPortDirection+0x58>
    146e:	2b 81       	ldd	r18, Y+3	; 0x03
    1470:	3c 81       	ldd	r19, Y+4	; 0x04
    1472:	22 30       	cpi	r18, 0x02	; 2
    1474:	31 05       	cpc	r19, r1
    1476:	2c f4       	brge	.+10     	; 0x1482 <DIO_VidSetPortDirection+0x38>
    1478:	8b 81       	ldd	r24, Y+3	; 0x03
    147a:	9c 81       	ldd	r25, Y+4	; 0x04
    147c:	00 97       	sbiw	r24, 0x00	; 0
    147e:	61 f0       	breq	.+24     	; 0x1498 <DIO_VidSetPortDirection+0x4e>
    1480:	1e c0       	rjmp	.+60     	; 0x14be <DIO_VidSetPortDirection+0x74>
    1482:	2b 81       	ldd	r18, Y+3	; 0x03
    1484:	3c 81       	ldd	r19, Y+4	; 0x04
    1486:	22 30       	cpi	r18, 0x02	; 2
    1488:	31 05       	cpc	r19, r1
    148a:	81 f0       	breq	.+32     	; 0x14ac <DIO_VidSetPortDirection+0x62>
    148c:	8b 81       	ldd	r24, Y+3	; 0x03
    148e:	9c 81       	ldd	r25, Y+4	; 0x04
    1490:	83 30       	cpi	r24, 0x03	; 3
    1492:	91 05       	cpc	r25, r1
    1494:	81 f0       	breq	.+32     	; 0x14b6 <DIO_VidSetPortDirection+0x6c>
    1496:	13 c0       	rjmp	.+38     	; 0x14be <DIO_VidSetPortDirection+0x74>
	{
		case 0:DDRA=copy_U8Direction;break;
    1498:	e1 e2       	ldi	r30, 0x21	; 33
    149a:	f0 e0       	ldi	r31, 0x00	; 0
    149c:	8a 81       	ldd	r24, Y+2	; 0x02
    149e:	80 83       	st	Z, r24
    14a0:	0e c0       	rjmp	.+28     	; 0x14be <DIO_VidSetPortDirection+0x74>
		case 1:DDRB=copy_U8Direction;break;
    14a2:	e4 e2       	ldi	r30, 0x24	; 36
    14a4:	f0 e0       	ldi	r31, 0x00	; 0
    14a6:	8a 81       	ldd	r24, Y+2	; 0x02
    14a8:	80 83       	st	Z, r24
    14aa:	09 c0       	rjmp	.+18     	; 0x14be <DIO_VidSetPortDirection+0x74>
		case 2:DDRC=copy_U8Direction;break;
    14ac:	e7 e2       	ldi	r30, 0x27	; 39
    14ae:	f0 e0       	ldi	r31, 0x00	; 0
    14b0:	8a 81       	ldd	r24, Y+2	; 0x02
    14b2:	80 83       	st	Z, r24
    14b4:	04 c0       	rjmp	.+8      	; 0x14be <DIO_VidSetPortDirection+0x74>
		case 3:DDRD=copy_U8Direction;break;
    14b6:	ea e2       	ldi	r30, 0x2A	; 42
    14b8:	f0 e0       	ldi	r31, 0x00	; 0
    14ba:	8a 81       	ldd	r24, Y+2	; 0x02
    14bc:	80 83       	st	Z, r24
	}
}
    14be:	0f 90       	pop	r0
    14c0:	0f 90       	pop	r0
    14c2:	0f 90       	pop	r0
    14c4:	0f 90       	pop	r0
    14c6:	cf 91       	pop	r28
    14c8:	df 91       	pop	r29
    14ca:	08 95       	ret

000014cc <DIO_VidToggelPinValue>:

void DIO_VidToggelPinValue(u8 copy_u8port ,u8 copy_U8Pin)
{
    14cc:	df 93       	push	r29
    14ce:	cf 93       	push	r28
    14d0:	00 d0       	rcall	.+0      	; 0x14d2 <DIO_VidToggelPinValue+0x6>
    14d2:	0f 92       	push	r0
    14d4:	cd b7       	in	r28, 0x3d	; 61
    14d6:	de b7       	in	r29, 0x3e	; 62
    14d8:	89 83       	std	Y+1, r24	; 0x01
    14da:	6a 83       	std	Y+2, r22	; 0x02
		switch(copy_u8port)
    14dc:	89 81       	ldd	r24, Y+1	; 0x01
    14de:	28 2f       	mov	r18, r24
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	3c 83       	std	Y+4, r19	; 0x04
    14e4:	2b 83       	std	Y+3, r18	; 0x03
    14e6:	8b 81       	ldd	r24, Y+3	; 0x03
    14e8:	9c 81       	ldd	r25, Y+4	; 0x04
    14ea:	81 30       	cpi	r24, 0x01	; 1
    14ec:	91 05       	cpc	r25, r1
    14ee:	49 f1       	breq	.+82     	; 0x1542 <DIO_VidToggelPinValue+0x76>
    14f0:	2b 81       	ldd	r18, Y+3	; 0x03
    14f2:	3c 81       	ldd	r19, Y+4	; 0x04
    14f4:	22 30       	cpi	r18, 0x02	; 2
    14f6:	31 05       	cpc	r19, r1
    14f8:	2c f4       	brge	.+10     	; 0x1504 <DIO_VidToggelPinValue+0x38>
    14fa:	8b 81       	ldd	r24, Y+3	; 0x03
    14fc:	9c 81       	ldd	r25, Y+4	; 0x04
    14fe:	00 97       	sbiw	r24, 0x00	; 0
    1500:	61 f0       	breq	.+24     	; 0x151a <DIO_VidToggelPinValue+0x4e>
    1502:	5a c0       	rjmp	.+180    	; 0x15b8 <DIO_VidToggelPinValue+0xec>
    1504:	2b 81       	ldd	r18, Y+3	; 0x03
    1506:	3c 81       	ldd	r19, Y+4	; 0x04
    1508:	22 30       	cpi	r18, 0x02	; 2
    150a:	31 05       	cpc	r19, r1
    150c:	71 f1       	breq	.+92     	; 0x156a <DIO_VidToggelPinValue+0x9e>
    150e:	8b 81       	ldd	r24, Y+3	; 0x03
    1510:	9c 81       	ldd	r25, Y+4	; 0x04
    1512:	83 30       	cpi	r24, 0x03	; 3
    1514:	91 05       	cpc	r25, r1
    1516:	e9 f1       	breq	.+122    	; 0x1592 <DIO_VidToggelPinValue+0xc6>
    1518:	4f c0       	rjmp	.+158    	; 0x15b8 <DIO_VidToggelPinValue+0xec>
		{
			case 0: TOG_BIT(PORTA,copy_U8Pin);
    151a:	a2 e2       	ldi	r26, 0x22	; 34
    151c:	b0 e0       	ldi	r27, 0x00	; 0
    151e:	e2 e2       	ldi	r30, 0x22	; 34
    1520:	f0 e0       	ldi	r31, 0x00	; 0
    1522:	80 81       	ld	r24, Z
    1524:	48 2f       	mov	r20, r24
    1526:	8a 81       	ldd	r24, Y+2	; 0x02
    1528:	28 2f       	mov	r18, r24
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	81 e0       	ldi	r24, 0x01	; 1
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	02 2e       	mov	r0, r18
    1532:	02 c0       	rjmp	.+4      	; 0x1538 <DIO_VidToggelPinValue+0x6c>
    1534:	88 0f       	add	r24, r24
    1536:	99 1f       	adc	r25, r25
    1538:	0a 94       	dec	r0
    153a:	e2 f7       	brpl	.-8      	; 0x1534 <DIO_VidToggelPinValue+0x68>
    153c:	84 27       	eor	r24, r20
    153e:	8c 93       	st	X, r24
    1540:	3b c0       	rjmp	.+118    	; 0x15b8 <DIO_VidToggelPinValue+0xec>
				break;
			case 1: TOG_BIT(PORTB,copy_U8Pin);
    1542:	a5 e2       	ldi	r26, 0x25	; 37
    1544:	b0 e0       	ldi	r27, 0x00	; 0
    1546:	e5 e2       	ldi	r30, 0x25	; 37
    1548:	f0 e0       	ldi	r31, 0x00	; 0
    154a:	80 81       	ld	r24, Z
    154c:	48 2f       	mov	r20, r24
    154e:	8a 81       	ldd	r24, Y+2	; 0x02
    1550:	28 2f       	mov	r18, r24
    1552:	30 e0       	ldi	r19, 0x00	; 0
    1554:	81 e0       	ldi	r24, 0x01	; 1
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	02 2e       	mov	r0, r18
    155a:	02 c0       	rjmp	.+4      	; 0x1560 <DIO_VidToggelPinValue+0x94>
    155c:	88 0f       	add	r24, r24
    155e:	99 1f       	adc	r25, r25
    1560:	0a 94       	dec	r0
    1562:	e2 f7       	brpl	.-8      	; 0x155c <DIO_VidToggelPinValue+0x90>
    1564:	84 27       	eor	r24, r20
    1566:	8c 93       	st	X, r24
    1568:	27 c0       	rjmp	.+78     	; 0x15b8 <DIO_VidToggelPinValue+0xec>
				break;
			case 2: TOG_BIT(PORTC,copy_U8Pin);
    156a:	a8 e2       	ldi	r26, 0x28	; 40
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	e8 e2       	ldi	r30, 0x28	; 40
    1570:	f0 e0       	ldi	r31, 0x00	; 0
    1572:	80 81       	ld	r24, Z
    1574:	48 2f       	mov	r20, r24
    1576:	8a 81       	ldd	r24, Y+2	; 0x02
    1578:	28 2f       	mov	r18, r24
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	81 e0       	ldi	r24, 0x01	; 1
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	02 2e       	mov	r0, r18
    1582:	02 c0       	rjmp	.+4      	; 0x1588 <DIO_VidToggelPinValue+0xbc>
    1584:	88 0f       	add	r24, r24
    1586:	99 1f       	adc	r25, r25
    1588:	0a 94       	dec	r0
    158a:	e2 f7       	brpl	.-8      	; 0x1584 <DIO_VidToggelPinValue+0xb8>
    158c:	84 27       	eor	r24, r20
    158e:	8c 93       	st	X, r24
    1590:	13 c0       	rjmp	.+38     	; 0x15b8 <DIO_VidToggelPinValue+0xec>
				break;
			case 3: TOG_BIT(PORTD,copy_U8Pin);
    1592:	ab e2       	ldi	r26, 0x2B	; 43
    1594:	b0 e0       	ldi	r27, 0x00	; 0
    1596:	eb e2       	ldi	r30, 0x2B	; 43
    1598:	f0 e0       	ldi	r31, 0x00	; 0
    159a:	80 81       	ld	r24, Z
    159c:	48 2f       	mov	r20, r24
    159e:	8a 81       	ldd	r24, Y+2	; 0x02
    15a0:	28 2f       	mov	r18, r24
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	81 e0       	ldi	r24, 0x01	; 1
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	02 2e       	mov	r0, r18
    15aa:	02 c0       	rjmp	.+4      	; 0x15b0 <DIO_VidToggelPinValue+0xe4>
    15ac:	88 0f       	add	r24, r24
    15ae:	99 1f       	adc	r25, r25
    15b0:	0a 94       	dec	r0
    15b2:	e2 f7       	brpl	.-8      	; 0x15ac <DIO_VidToggelPinValue+0xe0>
    15b4:	84 27       	eor	r24, r20
    15b6:	8c 93       	st	X, r24
				break;
		}
}
    15b8:	0f 90       	pop	r0
    15ba:	0f 90       	pop	r0
    15bc:	0f 90       	pop	r0
    15be:	0f 90       	pop	r0
    15c0:	cf 91       	pop	r28
    15c2:	df 91       	pop	r29
    15c4:	08 95       	ret

000015c6 <LCD_VidInit>:
#include <avr/delay.h>



void LCD_VidInit(void)
{
    15c6:	df 93       	push	r29
    15c8:	cf 93       	push	r28
    15ca:	cd b7       	in	r28, 0x3d	; 61
    15cc:	de b7       	in	r29, 0x3e	; 62
    15ce:	e8 97       	sbiw	r28, 0x38	; 56
    15d0:	0f b6       	in	r0, 0x3f	; 63
    15d2:	f8 94       	cli
    15d4:	de bf       	out	0x3e, r29	; 62
    15d6:	0f be       	out	0x3f, r0	; 63
    15d8:	cd bf       	out	0x3d, r28	; 61
	DIO_VidSetPortDirection(LCD_DATA_PORT,0xff);
    15da:	80 e0       	ldi	r24, 0x00	; 0
    15dc:	6f ef       	ldi	r22, 0xFF	; 255
    15de:	0e 94 25 0a 	call	0x144a	; 0x144a <DIO_VidSetPortDirection>

	DIO_VidSetPinDirection(LCD_CMD_PORT,RS,DIO_OUTPUT);
    15e2:	82 e0       	ldi	r24, 0x02	; 2
    15e4:	65 e0       	ldi	r22, 0x05	; 5
    15e6:	41 e0       	ldi	r20, 0x01	; 1
    15e8:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_CMD_PORT,RW,DIO_OUTPUT);
    15ec:	82 e0       	ldi	r24, 0x02	; 2
    15ee:	66 e0       	ldi	r22, 0x06	; 6
    15f0:	41 e0       	ldi	r20, 0x01	; 1
    15f2:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_CMD_PORT,EN,DIO_OUTPUT);
    15f6:	82 e0       	ldi	r24, 0x02	; 2
    15f8:	67 e0       	ldi	r22, 0x07	; 7
    15fa:	41 e0       	ldi	r20, 0x01	; 1
    15fc:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinDirection>
    1600:	80 e0       	ldi	r24, 0x00	; 0
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	ac e0       	ldi	r26, 0x0C	; 12
    1606:	b2 e4       	ldi	r27, 0x42	; 66
    1608:	8d ab       	std	Y+53, r24	; 0x35
    160a:	9e ab       	std	Y+54, r25	; 0x36
    160c:	af ab       	std	Y+55, r26	; 0x37
    160e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1610:	6d a9       	ldd	r22, Y+53	; 0x35
    1612:	7e a9       	ldd	r23, Y+54	; 0x36
    1614:	8f a9       	ldd	r24, Y+55	; 0x37
    1616:	98 ad       	ldd	r25, Y+56	; 0x38
    1618:	20 e0       	ldi	r18, 0x00	; 0
    161a:	30 e0       	ldi	r19, 0x00	; 0
    161c:	4a ef       	ldi	r20, 0xFA	; 250
    161e:	54 e4       	ldi	r21, 0x44	; 68
    1620:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    1624:	dc 01       	movw	r26, r24
    1626:	cb 01       	movw	r24, r22
    1628:	89 ab       	std	Y+49, r24	; 0x31
    162a:	9a ab       	std	Y+50, r25	; 0x32
    162c:	ab ab       	std	Y+51, r26	; 0x33
    162e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1630:	69 a9       	ldd	r22, Y+49	; 0x31
    1632:	7a a9       	ldd	r23, Y+50	; 0x32
    1634:	8b a9       	ldd	r24, Y+51	; 0x33
    1636:	9c a9       	ldd	r25, Y+52	; 0x34
    1638:	20 e0       	ldi	r18, 0x00	; 0
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	40 e8       	ldi	r20, 0x80	; 128
    163e:	5f e3       	ldi	r21, 0x3F	; 63
    1640:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    1644:	88 23       	and	r24, r24
    1646:	2c f4       	brge	.+10     	; 0x1652 <LCD_VidInit+0x8c>
		__ticks = 1;
    1648:	81 e0       	ldi	r24, 0x01	; 1
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	98 ab       	std	Y+48, r25	; 0x30
    164e:	8f a7       	std	Y+47, r24	; 0x2f
    1650:	3f c0       	rjmp	.+126    	; 0x16d0 <LCD_VidInit+0x10a>
	else if (__tmp > 65535)
    1652:	69 a9       	ldd	r22, Y+49	; 0x31
    1654:	7a a9       	ldd	r23, Y+50	; 0x32
    1656:	8b a9       	ldd	r24, Y+51	; 0x33
    1658:	9c a9       	ldd	r25, Y+52	; 0x34
    165a:	20 e0       	ldi	r18, 0x00	; 0
    165c:	3f ef       	ldi	r19, 0xFF	; 255
    165e:	4f e7       	ldi	r20, 0x7F	; 127
    1660:	57 e4       	ldi	r21, 0x47	; 71
    1662:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    1666:	18 16       	cp	r1, r24
    1668:	4c f5       	brge	.+82     	; 0x16bc <LCD_VidInit+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    166a:	6d a9       	ldd	r22, Y+53	; 0x35
    166c:	7e a9       	ldd	r23, Y+54	; 0x36
    166e:	8f a9       	ldd	r24, Y+55	; 0x37
    1670:	98 ad       	ldd	r25, Y+56	; 0x38
    1672:	20 e0       	ldi	r18, 0x00	; 0
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	40 e2       	ldi	r20, 0x20	; 32
    1678:	51 e4       	ldi	r21, 0x41	; 65
    167a:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    167e:	dc 01       	movw	r26, r24
    1680:	cb 01       	movw	r24, r22
    1682:	bc 01       	movw	r22, r24
    1684:	cd 01       	movw	r24, r26
    1686:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    168a:	dc 01       	movw	r26, r24
    168c:	cb 01       	movw	r24, r22
    168e:	98 ab       	std	Y+48, r25	; 0x30
    1690:	8f a7       	std	Y+47, r24	; 0x2f
    1692:	0f c0       	rjmp	.+30     	; 0x16b2 <LCD_VidInit+0xec>
    1694:	88 ec       	ldi	r24, 0xC8	; 200
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	9e a7       	std	Y+46, r25	; 0x2e
    169a:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    169c:	8d a5       	ldd	r24, Y+45	; 0x2d
    169e:	9e a5       	ldd	r25, Y+46	; 0x2e
    16a0:	01 97       	sbiw	r24, 0x01	; 1
    16a2:	f1 f7       	brne	.-4      	; 0x16a0 <LCD_VidInit+0xda>
    16a4:	9e a7       	std	Y+46, r25	; 0x2e
    16a6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16a8:	8f a5       	ldd	r24, Y+47	; 0x2f
    16aa:	98 a9       	ldd	r25, Y+48	; 0x30
    16ac:	01 97       	sbiw	r24, 0x01	; 1
    16ae:	98 ab       	std	Y+48, r25	; 0x30
    16b0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16b2:	8f a5       	ldd	r24, Y+47	; 0x2f
    16b4:	98 a9       	ldd	r25, Y+48	; 0x30
    16b6:	00 97       	sbiw	r24, 0x00	; 0
    16b8:	69 f7       	brne	.-38     	; 0x1694 <LCD_VidInit+0xce>
    16ba:	14 c0       	rjmp	.+40     	; 0x16e4 <LCD_VidInit+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16bc:	69 a9       	ldd	r22, Y+49	; 0x31
    16be:	7a a9       	ldd	r23, Y+50	; 0x32
    16c0:	8b a9       	ldd	r24, Y+51	; 0x33
    16c2:	9c a9       	ldd	r25, Y+52	; 0x34
    16c4:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    16c8:	dc 01       	movw	r26, r24
    16ca:	cb 01       	movw	r24, r22
    16cc:	98 ab       	std	Y+48, r25	; 0x30
    16ce:	8f a7       	std	Y+47, r24	; 0x2f
    16d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    16d2:	98 a9       	ldd	r25, Y+48	; 0x30
    16d4:	9c a7       	std	Y+44, r25	; 0x2c
    16d6:	8b a7       	std	Y+43, r24	; 0x2b
    16d8:	8b a5       	ldd	r24, Y+43	; 0x2b
    16da:	9c a5       	ldd	r25, Y+44	; 0x2c
    16dc:	01 97       	sbiw	r24, 0x01	; 1
    16de:	f1 f7       	brne	.-4      	; 0x16dc <LCD_VidInit+0x116>
    16e0:	9c a7       	std	Y+44, r25	; 0x2c
    16e2:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(35);
	LCD_VidSendCMD(FUN_SET);
    16e4:	88 e3       	ldi	r24, 0x38	; 56
    16e6:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <LCD_VidSendCMD>
    16ea:	80 e0       	ldi	r24, 0x00	; 0
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	a0 e8       	ldi	r26, 0x80	; 128
    16f0:	bf e3       	ldi	r27, 0x3F	; 63
    16f2:	8f a3       	std	Y+39, r24	; 0x27
    16f4:	98 a7       	std	Y+40, r25	; 0x28
    16f6:	a9 a7       	std	Y+41, r26	; 0x29
    16f8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16fa:	6f a1       	ldd	r22, Y+39	; 0x27
    16fc:	78 a5       	ldd	r23, Y+40	; 0x28
    16fe:	89 a5       	ldd	r24, Y+41	; 0x29
    1700:	9a a5       	ldd	r25, Y+42	; 0x2a
    1702:	20 e0       	ldi	r18, 0x00	; 0
    1704:	30 e0       	ldi	r19, 0x00	; 0
    1706:	4a ef       	ldi	r20, 0xFA	; 250
    1708:	54 e4       	ldi	r21, 0x44	; 68
    170a:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    170e:	dc 01       	movw	r26, r24
    1710:	cb 01       	movw	r24, r22
    1712:	8b a3       	std	Y+35, r24	; 0x23
    1714:	9c a3       	std	Y+36, r25	; 0x24
    1716:	ad a3       	std	Y+37, r26	; 0x25
    1718:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    171a:	6b a1       	ldd	r22, Y+35	; 0x23
    171c:	7c a1       	ldd	r23, Y+36	; 0x24
    171e:	8d a1       	ldd	r24, Y+37	; 0x25
    1720:	9e a1       	ldd	r25, Y+38	; 0x26
    1722:	20 e0       	ldi	r18, 0x00	; 0
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	40 e8       	ldi	r20, 0x80	; 128
    1728:	5f e3       	ldi	r21, 0x3F	; 63
    172a:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    172e:	88 23       	and	r24, r24
    1730:	2c f4       	brge	.+10     	; 0x173c <LCD_VidInit+0x176>
		__ticks = 1;
    1732:	81 e0       	ldi	r24, 0x01	; 1
    1734:	90 e0       	ldi	r25, 0x00	; 0
    1736:	9a a3       	std	Y+34, r25	; 0x22
    1738:	89 a3       	std	Y+33, r24	; 0x21
    173a:	3f c0       	rjmp	.+126    	; 0x17ba <LCD_VidInit+0x1f4>
	else if (__tmp > 65535)
    173c:	6b a1       	ldd	r22, Y+35	; 0x23
    173e:	7c a1       	ldd	r23, Y+36	; 0x24
    1740:	8d a1       	ldd	r24, Y+37	; 0x25
    1742:	9e a1       	ldd	r25, Y+38	; 0x26
    1744:	20 e0       	ldi	r18, 0x00	; 0
    1746:	3f ef       	ldi	r19, 0xFF	; 255
    1748:	4f e7       	ldi	r20, 0x7F	; 127
    174a:	57 e4       	ldi	r21, 0x47	; 71
    174c:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    1750:	18 16       	cp	r1, r24
    1752:	4c f5       	brge	.+82     	; 0x17a6 <LCD_VidInit+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1754:	6f a1       	ldd	r22, Y+39	; 0x27
    1756:	78 a5       	ldd	r23, Y+40	; 0x28
    1758:	89 a5       	ldd	r24, Y+41	; 0x29
    175a:	9a a5       	ldd	r25, Y+42	; 0x2a
    175c:	20 e0       	ldi	r18, 0x00	; 0
    175e:	30 e0       	ldi	r19, 0x00	; 0
    1760:	40 e2       	ldi	r20, 0x20	; 32
    1762:	51 e4       	ldi	r21, 0x41	; 65
    1764:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    1768:	dc 01       	movw	r26, r24
    176a:	cb 01       	movw	r24, r22
    176c:	bc 01       	movw	r22, r24
    176e:	cd 01       	movw	r24, r26
    1770:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    1774:	dc 01       	movw	r26, r24
    1776:	cb 01       	movw	r24, r22
    1778:	9a a3       	std	Y+34, r25	; 0x22
    177a:	89 a3       	std	Y+33, r24	; 0x21
    177c:	0f c0       	rjmp	.+30     	; 0x179c <LCD_VidInit+0x1d6>
    177e:	88 ec       	ldi	r24, 0xC8	; 200
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	98 a3       	std	Y+32, r25	; 0x20
    1784:	8f 8f       	std	Y+31, r24	; 0x1f
    1786:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1788:	98 a1       	ldd	r25, Y+32	; 0x20
    178a:	01 97       	sbiw	r24, 0x01	; 1
    178c:	f1 f7       	brne	.-4      	; 0x178a <LCD_VidInit+0x1c4>
    178e:	98 a3       	std	Y+32, r25	; 0x20
    1790:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1792:	89 a1       	ldd	r24, Y+33	; 0x21
    1794:	9a a1       	ldd	r25, Y+34	; 0x22
    1796:	01 97       	sbiw	r24, 0x01	; 1
    1798:	9a a3       	std	Y+34, r25	; 0x22
    179a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    179c:	89 a1       	ldd	r24, Y+33	; 0x21
    179e:	9a a1       	ldd	r25, Y+34	; 0x22
    17a0:	00 97       	sbiw	r24, 0x00	; 0
    17a2:	69 f7       	brne	.-38     	; 0x177e <LCD_VidInit+0x1b8>
    17a4:	14 c0       	rjmp	.+40     	; 0x17ce <LCD_VidInit+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17a6:	6b a1       	ldd	r22, Y+35	; 0x23
    17a8:	7c a1       	ldd	r23, Y+36	; 0x24
    17aa:	8d a1       	ldd	r24, Y+37	; 0x25
    17ac:	9e a1       	ldd	r25, Y+38	; 0x26
    17ae:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    17b2:	dc 01       	movw	r26, r24
    17b4:	cb 01       	movw	r24, r22
    17b6:	9a a3       	std	Y+34, r25	; 0x22
    17b8:	89 a3       	std	Y+33, r24	; 0x21
    17ba:	89 a1       	ldd	r24, Y+33	; 0x21
    17bc:	9a a1       	ldd	r25, Y+34	; 0x22
    17be:	9e 8f       	std	Y+30, r25	; 0x1e
    17c0:	8d 8f       	std	Y+29, r24	; 0x1d
    17c2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17c4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    17c6:	01 97       	sbiw	r24, 0x01	; 1
    17c8:	f1 f7       	brne	.-4      	; 0x17c6 <LCD_VidInit+0x200>
    17ca:	9e 8f       	std	Y+30, r25	; 0x1e
    17cc:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_VidSendCMD(C_ON_OFF);
    17ce:	8f e0       	ldi	r24, 0x0F	; 15
    17d0:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <LCD_VidSendCMD>
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	a0 e8       	ldi	r26, 0x80	; 128
    17da:	bf e3       	ldi	r27, 0x3F	; 63
    17dc:	89 8f       	std	Y+25, r24	; 0x19
    17de:	9a 8f       	std	Y+26, r25	; 0x1a
    17e0:	ab 8f       	std	Y+27, r26	; 0x1b
    17e2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17e4:	69 8d       	ldd	r22, Y+25	; 0x19
    17e6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17e8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17ea:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	4a ef       	ldi	r20, 0xFA	; 250
    17f2:	54 e4       	ldi	r21, 0x44	; 68
    17f4:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    17f8:	dc 01       	movw	r26, r24
    17fa:	cb 01       	movw	r24, r22
    17fc:	8d 8b       	std	Y+21, r24	; 0x15
    17fe:	9e 8b       	std	Y+22, r25	; 0x16
    1800:	af 8b       	std	Y+23, r26	; 0x17
    1802:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1804:	6d 89       	ldd	r22, Y+21	; 0x15
    1806:	7e 89       	ldd	r23, Y+22	; 0x16
    1808:	8f 89       	ldd	r24, Y+23	; 0x17
    180a:	98 8d       	ldd	r25, Y+24	; 0x18
    180c:	20 e0       	ldi	r18, 0x00	; 0
    180e:	30 e0       	ldi	r19, 0x00	; 0
    1810:	40 e8       	ldi	r20, 0x80	; 128
    1812:	5f e3       	ldi	r21, 0x3F	; 63
    1814:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    1818:	88 23       	and	r24, r24
    181a:	2c f4       	brge	.+10     	; 0x1826 <LCD_VidInit+0x260>
		__ticks = 1;
    181c:	81 e0       	ldi	r24, 0x01	; 1
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	9c 8b       	std	Y+20, r25	; 0x14
    1822:	8b 8b       	std	Y+19, r24	; 0x13
    1824:	3f c0       	rjmp	.+126    	; 0x18a4 <LCD_VidInit+0x2de>
	else if (__tmp > 65535)
    1826:	6d 89       	ldd	r22, Y+21	; 0x15
    1828:	7e 89       	ldd	r23, Y+22	; 0x16
    182a:	8f 89       	ldd	r24, Y+23	; 0x17
    182c:	98 8d       	ldd	r25, Y+24	; 0x18
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	3f ef       	ldi	r19, 0xFF	; 255
    1832:	4f e7       	ldi	r20, 0x7F	; 127
    1834:	57 e4       	ldi	r21, 0x47	; 71
    1836:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    183a:	18 16       	cp	r1, r24
    183c:	4c f5       	brge	.+82     	; 0x1890 <LCD_VidInit+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    183e:	69 8d       	ldd	r22, Y+25	; 0x19
    1840:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1842:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1844:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1846:	20 e0       	ldi	r18, 0x00	; 0
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	40 e2       	ldi	r20, 0x20	; 32
    184c:	51 e4       	ldi	r21, 0x41	; 65
    184e:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    1852:	dc 01       	movw	r26, r24
    1854:	cb 01       	movw	r24, r22
    1856:	bc 01       	movw	r22, r24
    1858:	cd 01       	movw	r24, r26
    185a:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    185e:	dc 01       	movw	r26, r24
    1860:	cb 01       	movw	r24, r22
    1862:	9c 8b       	std	Y+20, r25	; 0x14
    1864:	8b 8b       	std	Y+19, r24	; 0x13
    1866:	0f c0       	rjmp	.+30     	; 0x1886 <LCD_VidInit+0x2c0>
    1868:	88 ec       	ldi	r24, 0xC8	; 200
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	9a 8b       	std	Y+18, r25	; 0x12
    186e:	89 8b       	std	Y+17, r24	; 0x11
    1870:	89 89       	ldd	r24, Y+17	; 0x11
    1872:	9a 89       	ldd	r25, Y+18	; 0x12
    1874:	01 97       	sbiw	r24, 0x01	; 1
    1876:	f1 f7       	brne	.-4      	; 0x1874 <LCD_VidInit+0x2ae>
    1878:	9a 8b       	std	Y+18, r25	; 0x12
    187a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    187c:	8b 89       	ldd	r24, Y+19	; 0x13
    187e:	9c 89       	ldd	r25, Y+20	; 0x14
    1880:	01 97       	sbiw	r24, 0x01	; 1
    1882:	9c 8b       	std	Y+20, r25	; 0x14
    1884:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1886:	8b 89       	ldd	r24, Y+19	; 0x13
    1888:	9c 89       	ldd	r25, Y+20	; 0x14
    188a:	00 97       	sbiw	r24, 0x00	; 0
    188c:	69 f7       	brne	.-38     	; 0x1868 <LCD_VidInit+0x2a2>
    188e:	14 c0       	rjmp	.+40     	; 0x18b8 <LCD_VidInit+0x2f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1890:	6d 89       	ldd	r22, Y+21	; 0x15
    1892:	7e 89       	ldd	r23, Y+22	; 0x16
    1894:	8f 89       	ldd	r24, Y+23	; 0x17
    1896:	98 8d       	ldd	r25, Y+24	; 0x18
    1898:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    189c:	dc 01       	movw	r26, r24
    189e:	cb 01       	movw	r24, r22
    18a0:	9c 8b       	std	Y+20, r25	; 0x14
    18a2:	8b 8b       	std	Y+19, r24	; 0x13
    18a4:	8b 89       	ldd	r24, Y+19	; 0x13
    18a6:	9c 89       	ldd	r25, Y+20	; 0x14
    18a8:	98 8b       	std	Y+16, r25	; 0x10
    18aa:	8f 87       	std	Y+15, r24	; 0x0f
    18ac:	8f 85       	ldd	r24, Y+15	; 0x0f
    18ae:	98 89       	ldd	r25, Y+16	; 0x10
    18b0:	01 97       	sbiw	r24, 0x01	; 1
    18b2:	f1 f7       	brne	.-4      	; 0x18b0 <LCD_VidInit+0x2ea>
    18b4:	98 8b       	std	Y+16, r25	; 0x10
    18b6:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCD_VidSendCMD(LCD_CLR);
    18b8:	81 e0       	ldi	r24, 0x01	; 1
    18ba:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <LCD_VidSendCMD>
    18be:	80 e0       	ldi	r24, 0x00	; 0
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	a0 e0       	ldi	r26, 0x00	; 0
    18c4:	b0 e4       	ldi	r27, 0x40	; 64
    18c6:	8b 87       	std	Y+11, r24	; 0x0b
    18c8:	9c 87       	std	Y+12, r25	; 0x0c
    18ca:	ad 87       	std	Y+13, r26	; 0x0d
    18cc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18ce:	6b 85       	ldd	r22, Y+11	; 0x0b
    18d0:	7c 85       	ldd	r23, Y+12	; 0x0c
    18d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    18d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    18d6:	20 e0       	ldi	r18, 0x00	; 0
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	4a ef       	ldi	r20, 0xFA	; 250
    18dc:	54 e4       	ldi	r21, 0x44	; 68
    18de:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    18e2:	dc 01       	movw	r26, r24
    18e4:	cb 01       	movw	r24, r22
    18e6:	8f 83       	std	Y+7, r24	; 0x07
    18e8:	98 87       	std	Y+8, r25	; 0x08
    18ea:	a9 87       	std	Y+9, r26	; 0x09
    18ec:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    18ee:	6f 81       	ldd	r22, Y+7	; 0x07
    18f0:	78 85       	ldd	r23, Y+8	; 0x08
    18f2:	89 85       	ldd	r24, Y+9	; 0x09
    18f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    18f6:	20 e0       	ldi	r18, 0x00	; 0
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	40 e8       	ldi	r20, 0x80	; 128
    18fc:	5f e3       	ldi	r21, 0x3F	; 63
    18fe:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    1902:	88 23       	and	r24, r24
    1904:	2c f4       	brge	.+10     	; 0x1910 <LCD_VidInit+0x34a>
		__ticks = 1;
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	9e 83       	std	Y+6, r25	; 0x06
    190c:	8d 83       	std	Y+5, r24	; 0x05
    190e:	3f c0       	rjmp	.+126    	; 0x198e <LCD_VidInit+0x3c8>
	else if (__tmp > 65535)
    1910:	6f 81       	ldd	r22, Y+7	; 0x07
    1912:	78 85       	ldd	r23, Y+8	; 0x08
    1914:	89 85       	ldd	r24, Y+9	; 0x09
    1916:	9a 85       	ldd	r25, Y+10	; 0x0a
    1918:	20 e0       	ldi	r18, 0x00	; 0
    191a:	3f ef       	ldi	r19, 0xFF	; 255
    191c:	4f e7       	ldi	r20, 0x7F	; 127
    191e:	57 e4       	ldi	r21, 0x47	; 71
    1920:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    1924:	18 16       	cp	r1, r24
    1926:	4c f5       	brge	.+82     	; 0x197a <LCD_VidInit+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1928:	6b 85       	ldd	r22, Y+11	; 0x0b
    192a:	7c 85       	ldd	r23, Y+12	; 0x0c
    192c:	8d 85       	ldd	r24, Y+13	; 0x0d
    192e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1930:	20 e0       	ldi	r18, 0x00	; 0
    1932:	30 e0       	ldi	r19, 0x00	; 0
    1934:	40 e2       	ldi	r20, 0x20	; 32
    1936:	51 e4       	ldi	r21, 0x41	; 65
    1938:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    193c:	dc 01       	movw	r26, r24
    193e:	cb 01       	movw	r24, r22
    1940:	bc 01       	movw	r22, r24
    1942:	cd 01       	movw	r24, r26
    1944:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    1948:	dc 01       	movw	r26, r24
    194a:	cb 01       	movw	r24, r22
    194c:	9e 83       	std	Y+6, r25	; 0x06
    194e:	8d 83       	std	Y+5, r24	; 0x05
    1950:	0f c0       	rjmp	.+30     	; 0x1970 <LCD_VidInit+0x3aa>
    1952:	88 ec       	ldi	r24, 0xC8	; 200
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	9c 83       	std	Y+4, r25	; 0x04
    1958:	8b 83       	std	Y+3, r24	; 0x03
    195a:	8b 81       	ldd	r24, Y+3	; 0x03
    195c:	9c 81       	ldd	r25, Y+4	; 0x04
    195e:	01 97       	sbiw	r24, 0x01	; 1
    1960:	f1 f7       	brne	.-4      	; 0x195e <LCD_VidInit+0x398>
    1962:	9c 83       	std	Y+4, r25	; 0x04
    1964:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1966:	8d 81       	ldd	r24, Y+5	; 0x05
    1968:	9e 81       	ldd	r25, Y+6	; 0x06
    196a:	01 97       	sbiw	r24, 0x01	; 1
    196c:	9e 83       	std	Y+6, r25	; 0x06
    196e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1970:	8d 81       	ldd	r24, Y+5	; 0x05
    1972:	9e 81       	ldd	r25, Y+6	; 0x06
    1974:	00 97       	sbiw	r24, 0x00	; 0
    1976:	69 f7       	brne	.-38     	; 0x1952 <LCD_VidInit+0x38c>
    1978:	14 c0       	rjmp	.+40     	; 0x19a2 <LCD_VidInit+0x3dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    197a:	6f 81       	ldd	r22, Y+7	; 0x07
    197c:	78 85       	ldd	r23, Y+8	; 0x08
    197e:	89 85       	ldd	r24, Y+9	; 0x09
    1980:	9a 85       	ldd	r25, Y+10	; 0x0a
    1982:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    1986:	dc 01       	movw	r26, r24
    1988:	cb 01       	movw	r24, r22
    198a:	9e 83       	std	Y+6, r25	; 0x06
    198c:	8d 83       	std	Y+5, r24	; 0x05
    198e:	8d 81       	ldd	r24, Y+5	; 0x05
    1990:	9e 81       	ldd	r25, Y+6	; 0x06
    1992:	9a 83       	std	Y+2, r25	; 0x02
    1994:	89 83       	std	Y+1, r24	; 0x01
    1996:	89 81       	ldd	r24, Y+1	; 0x01
    1998:	9a 81       	ldd	r25, Y+2	; 0x02
    199a:	01 97       	sbiw	r24, 0x01	; 1
    199c:	f1 f7       	brne	.-4      	; 0x199a <LCD_VidInit+0x3d4>
    199e:	9a 83       	std	Y+2, r25	; 0x02
    19a0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);


}
    19a2:	e8 96       	adiw	r28, 0x38	; 56
    19a4:	0f b6       	in	r0, 0x3f	; 63
    19a6:	f8 94       	cli
    19a8:	de bf       	out	0x3e, r29	; 62
    19aa:	0f be       	out	0x3f, r0	; 63
    19ac:	cd bf       	out	0x3d, r28	; 61
    19ae:	cf 91       	pop	r28
    19b0:	df 91       	pop	r29
    19b2:	08 95       	ret

000019b4 <LCD_VidSendCMD>:


void LCD_VidSendCMD(u8 Copy_U8CMD)
{
    19b4:	df 93       	push	r29
    19b6:	cf 93       	push	r28
    19b8:	cd b7       	in	r28, 0x3d	; 61
    19ba:	de b7       	in	r29, 0x3e	; 62
    19bc:	2f 97       	sbiw	r28, 0x0f	; 15
    19be:	0f b6       	in	r0, 0x3f	; 63
    19c0:	f8 94       	cli
    19c2:	de bf       	out	0x3e, r29	; 62
    19c4:	0f be       	out	0x3f, r0	; 63
    19c6:	cd bf       	out	0x3d, r28	; 61
    19c8:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_VidSetPinValue(LCD_CMD_PORT,RS,DIO_LOW);
    19ca:	82 e0       	ldi	r24, 0x02	; 2
    19cc:	65 e0       	ldi	r22, 0x05	; 5
    19ce:	40 e0       	ldi	r20, 0x00	; 0
    19d0:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>

	DIO_VidSetPinValue(LCD_CMD_PORT,RW,DIO_LOW);
    19d4:	82 e0       	ldi	r24, 0x02	; 2
    19d6:	66 e0       	ldi	r22, 0x06	; 6
    19d8:	40 e0       	ldi	r20, 0x00	; 0
    19da:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>

	DIO_VidSetPortValue(LCD_DATA_PORT,Copy_U8CMD);
    19de:	80 e0       	ldi	r24, 0x00	; 0
    19e0:	6f 85       	ldd	r22, Y+15	; 0x0f
    19e2:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <DIO_VidSetPortValue>

	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_HIGH);
    19e6:	82 e0       	ldi	r24, 0x02	; 2
    19e8:	67 e0       	ldi	r22, 0x07	; 7
    19ea:	41 e0       	ldi	r20, 0x01	; 1
    19ec:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>
    19f0:	80 e0       	ldi	r24, 0x00	; 0
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	a0 e8       	ldi	r26, 0x80	; 128
    19f6:	bf e3       	ldi	r27, 0x3F	; 63
    19f8:	8b 87       	std	Y+11, r24	; 0x0b
    19fa:	9c 87       	std	Y+12, r25	; 0x0c
    19fc:	ad 87       	std	Y+13, r26	; 0x0d
    19fe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a00:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a02:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a04:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a06:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a08:	20 e0       	ldi	r18, 0x00	; 0
    1a0a:	30 e0       	ldi	r19, 0x00	; 0
    1a0c:	4a ef       	ldi	r20, 0xFA	; 250
    1a0e:	54 e4       	ldi	r21, 0x44	; 68
    1a10:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    1a14:	dc 01       	movw	r26, r24
    1a16:	cb 01       	movw	r24, r22
    1a18:	8f 83       	std	Y+7, r24	; 0x07
    1a1a:	98 87       	std	Y+8, r25	; 0x08
    1a1c:	a9 87       	std	Y+9, r26	; 0x09
    1a1e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a20:	6f 81       	ldd	r22, Y+7	; 0x07
    1a22:	78 85       	ldd	r23, Y+8	; 0x08
    1a24:	89 85       	ldd	r24, Y+9	; 0x09
    1a26:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a28:	20 e0       	ldi	r18, 0x00	; 0
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	40 e8       	ldi	r20, 0x80	; 128
    1a2e:	5f e3       	ldi	r21, 0x3F	; 63
    1a30:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    1a34:	88 23       	and	r24, r24
    1a36:	2c f4       	brge	.+10     	; 0x1a42 <LCD_VidSendCMD+0x8e>
		__ticks = 1;
    1a38:	81 e0       	ldi	r24, 0x01	; 1
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	9e 83       	std	Y+6, r25	; 0x06
    1a3e:	8d 83       	std	Y+5, r24	; 0x05
    1a40:	3f c0       	rjmp	.+126    	; 0x1ac0 <LCD_VidSendCMD+0x10c>
	else if (__tmp > 65535)
    1a42:	6f 81       	ldd	r22, Y+7	; 0x07
    1a44:	78 85       	ldd	r23, Y+8	; 0x08
    1a46:	89 85       	ldd	r24, Y+9	; 0x09
    1a48:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a4a:	20 e0       	ldi	r18, 0x00	; 0
    1a4c:	3f ef       	ldi	r19, 0xFF	; 255
    1a4e:	4f e7       	ldi	r20, 0x7F	; 127
    1a50:	57 e4       	ldi	r21, 0x47	; 71
    1a52:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    1a56:	18 16       	cp	r1, r24
    1a58:	4c f5       	brge	.+82     	; 0x1aac <LCD_VidSendCMD+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a5a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a5c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a5e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a60:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a62:	20 e0       	ldi	r18, 0x00	; 0
    1a64:	30 e0       	ldi	r19, 0x00	; 0
    1a66:	40 e2       	ldi	r20, 0x20	; 32
    1a68:	51 e4       	ldi	r21, 0x41	; 65
    1a6a:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    1a6e:	dc 01       	movw	r26, r24
    1a70:	cb 01       	movw	r24, r22
    1a72:	bc 01       	movw	r22, r24
    1a74:	cd 01       	movw	r24, r26
    1a76:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    1a7a:	dc 01       	movw	r26, r24
    1a7c:	cb 01       	movw	r24, r22
    1a7e:	9e 83       	std	Y+6, r25	; 0x06
    1a80:	8d 83       	std	Y+5, r24	; 0x05
    1a82:	0f c0       	rjmp	.+30     	; 0x1aa2 <LCD_VidSendCMD+0xee>
    1a84:	88 ec       	ldi	r24, 0xC8	; 200
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	9c 83       	std	Y+4, r25	; 0x04
    1a8a:	8b 83       	std	Y+3, r24	; 0x03
    1a8c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a8e:	9c 81       	ldd	r25, Y+4	; 0x04
    1a90:	01 97       	sbiw	r24, 0x01	; 1
    1a92:	f1 f7       	brne	.-4      	; 0x1a90 <LCD_VidSendCMD+0xdc>
    1a94:	9c 83       	std	Y+4, r25	; 0x04
    1a96:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a98:	8d 81       	ldd	r24, Y+5	; 0x05
    1a9a:	9e 81       	ldd	r25, Y+6	; 0x06
    1a9c:	01 97       	sbiw	r24, 0x01	; 1
    1a9e:	9e 83       	std	Y+6, r25	; 0x06
    1aa0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aa2:	8d 81       	ldd	r24, Y+5	; 0x05
    1aa4:	9e 81       	ldd	r25, Y+6	; 0x06
    1aa6:	00 97       	sbiw	r24, 0x00	; 0
    1aa8:	69 f7       	brne	.-38     	; 0x1a84 <LCD_VidSendCMD+0xd0>
    1aaa:	14 c0       	rjmp	.+40     	; 0x1ad4 <LCD_VidSendCMD+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1aac:	6f 81       	ldd	r22, Y+7	; 0x07
    1aae:	78 85       	ldd	r23, Y+8	; 0x08
    1ab0:	89 85       	ldd	r24, Y+9	; 0x09
    1ab2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ab4:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    1ab8:	dc 01       	movw	r26, r24
    1aba:	cb 01       	movw	r24, r22
    1abc:	9e 83       	std	Y+6, r25	; 0x06
    1abe:	8d 83       	std	Y+5, r24	; 0x05
    1ac0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ac2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ac4:	9a 83       	std	Y+2, r25	; 0x02
    1ac6:	89 83       	std	Y+1, r24	; 0x01
    1ac8:	89 81       	ldd	r24, Y+1	; 0x01
    1aca:	9a 81       	ldd	r25, Y+2	; 0x02
    1acc:	01 97       	sbiw	r24, 0x01	; 1
    1ace:	f1 f7       	brne	.-4      	; 0x1acc <LCD_VidSendCMD+0x118>
    1ad0:	9a 83       	std	Y+2, r25	; 0x02
    1ad2:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(1);

	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_LOW);
    1ad4:	82 e0       	ldi	r24, 0x02	; 2
    1ad6:	67 e0       	ldi	r22, 0x07	; 7
    1ad8:	40 e0       	ldi	r20, 0x00	; 0
    1ada:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>
}
    1ade:	2f 96       	adiw	r28, 0x0f	; 15
    1ae0:	0f b6       	in	r0, 0x3f	; 63
    1ae2:	f8 94       	cli
    1ae4:	de bf       	out	0x3e, r29	; 62
    1ae6:	0f be       	out	0x3f, r0	; 63
    1ae8:	cd bf       	out	0x3d, r28	; 61
    1aea:	cf 91       	pop	r28
    1aec:	df 91       	pop	r29
    1aee:	08 95       	ret

00001af0 <LCD_VidSendChar>:

void LCD_VidSendChar(u8 Copy_U8Char)
{
    1af0:	df 93       	push	r29
    1af2:	cf 93       	push	r28
    1af4:	cd b7       	in	r28, 0x3d	; 61
    1af6:	de b7       	in	r29, 0x3e	; 62
    1af8:	2f 97       	sbiw	r28, 0x0f	; 15
    1afa:	0f b6       	in	r0, 0x3f	; 63
    1afc:	f8 94       	cli
    1afe:	de bf       	out	0x3e, r29	; 62
    1b00:	0f be       	out	0x3f, r0	; 63
    1b02:	cd bf       	out	0x3d, r28	; 61
    1b04:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_VidSetPinValue(LCD_CMD_PORT,RS,DIO_HIGH);
    1b06:	82 e0       	ldi	r24, 0x02	; 2
    1b08:	65 e0       	ldi	r22, 0x05	; 5
    1b0a:	41 e0       	ldi	r20, 0x01	; 1
    1b0c:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>

	DIO_VidSetPinValue(LCD_CMD_PORT,RW,DIO_LOW);
    1b10:	82 e0       	ldi	r24, 0x02	; 2
    1b12:	66 e0       	ldi	r22, 0x06	; 6
    1b14:	40 e0       	ldi	r20, 0x00	; 0
    1b16:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>

	DIO_VidSetPortValue(LCD_DATA_PORT,Copy_U8Char);
    1b1a:	80 e0       	ldi	r24, 0x00	; 0
    1b1c:	6f 85       	ldd	r22, Y+15	; 0x0f
    1b1e:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <DIO_VidSetPortValue>

	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_HIGH);
    1b22:	82 e0       	ldi	r24, 0x02	; 2
    1b24:	67 e0       	ldi	r22, 0x07	; 7
    1b26:	41 e0       	ldi	r20, 0x01	; 1
    1b28:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>
    1b2c:	80 e0       	ldi	r24, 0x00	; 0
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	a0 e8       	ldi	r26, 0x80	; 128
    1b32:	bf e3       	ldi	r27, 0x3F	; 63
    1b34:	8b 87       	std	Y+11, r24	; 0x0b
    1b36:	9c 87       	std	Y+12, r25	; 0x0c
    1b38:	ad 87       	std	Y+13, r26	; 0x0d
    1b3a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b3c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b3e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b40:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b42:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b44:	20 e0       	ldi	r18, 0x00	; 0
    1b46:	30 e0       	ldi	r19, 0x00	; 0
    1b48:	4a ef       	ldi	r20, 0xFA	; 250
    1b4a:	54 e4       	ldi	r21, 0x44	; 68
    1b4c:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    1b50:	dc 01       	movw	r26, r24
    1b52:	cb 01       	movw	r24, r22
    1b54:	8f 83       	std	Y+7, r24	; 0x07
    1b56:	98 87       	std	Y+8, r25	; 0x08
    1b58:	a9 87       	std	Y+9, r26	; 0x09
    1b5a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b5c:	6f 81       	ldd	r22, Y+7	; 0x07
    1b5e:	78 85       	ldd	r23, Y+8	; 0x08
    1b60:	89 85       	ldd	r24, Y+9	; 0x09
    1b62:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b64:	20 e0       	ldi	r18, 0x00	; 0
    1b66:	30 e0       	ldi	r19, 0x00	; 0
    1b68:	40 e8       	ldi	r20, 0x80	; 128
    1b6a:	5f e3       	ldi	r21, 0x3F	; 63
    1b6c:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    1b70:	88 23       	and	r24, r24
    1b72:	2c f4       	brge	.+10     	; 0x1b7e <LCD_VidSendChar+0x8e>
		__ticks = 1;
    1b74:	81 e0       	ldi	r24, 0x01	; 1
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	9e 83       	std	Y+6, r25	; 0x06
    1b7a:	8d 83       	std	Y+5, r24	; 0x05
    1b7c:	3f c0       	rjmp	.+126    	; 0x1bfc <LCD_VidSendChar+0x10c>
	else if (__tmp > 65535)
    1b7e:	6f 81       	ldd	r22, Y+7	; 0x07
    1b80:	78 85       	ldd	r23, Y+8	; 0x08
    1b82:	89 85       	ldd	r24, Y+9	; 0x09
    1b84:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b86:	20 e0       	ldi	r18, 0x00	; 0
    1b88:	3f ef       	ldi	r19, 0xFF	; 255
    1b8a:	4f e7       	ldi	r20, 0x7F	; 127
    1b8c:	57 e4       	ldi	r21, 0x47	; 71
    1b8e:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    1b92:	18 16       	cp	r1, r24
    1b94:	4c f5       	brge	.+82     	; 0x1be8 <LCD_VidSendChar+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b96:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b98:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b9a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b9c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b9e:	20 e0       	ldi	r18, 0x00	; 0
    1ba0:	30 e0       	ldi	r19, 0x00	; 0
    1ba2:	40 e2       	ldi	r20, 0x20	; 32
    1ba4:	51 e4       	ldi	r21, 0x41	; 65
    1ba6:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    1baa:	dc 01       	movw	r26, r24
    1bac:	cb 01       	movw	r24, r22
    1bae:	bc 01       	movw	r22, r24
    1bb0:	cd 01       	movw	r24, r26
    1bb2:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    1bb6:	dc 01       	movw	r26, r24
    1bb8:	cb 01       	movw	r24, r22
    1bba:	9e 83       	std	Y+6, r25	; 0x06
    1bbc:	8d 83       	std	Y+5, r24	; 0x05
    1bbe:	0f c0       	rjmp	.+30     	; 0x1bde <LCD_VidSendChar+0xee>
    1bc0:	88 ec       	ldi	r24, 0xC8	; 200
    1bc2:	90 e0       	ldi	r25, 0x00	; 0
    1bc4:	9c 83       	std	Y+4, r25	; 0x04
    1bc6:	8b 83       	std	Y+3, r24	; 0x03
    1bc8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bca:	9c 81       	ldd	r25, Y+4	; 0x04
    1bcc:	01 97       	sbiw	r24, 0x01	; 1
    1bce:	f1 f7       	brne	.-4      	; 0x1bcc <LCD_VidSendChar+0xdc>
    1bd0:	9c 83       	std	Y+4, r25	; 0x04
    1bd2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bd4:	8d 81       	ldd	r24, Y+5	; 0x05
    1bd6:	9e 81       	ldd	r25, Y+6	; 0x06
    1bd8:	01 97       	sbiw	r24, 0x01	; 1
    1bda:	9e 83       	std	Y+6, r25	; 0x06
    1bdc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bde:	8d 81       	ldd	r24, Y+5	; 0x05
    1be0:	9e 81       	ldd	r25, Y+6	; 0x06
    1be2:	00 97       	sbiw	r24, 0x00	; 0
    1be4:	69 f7       	brne	.-38     	; 0x1bc0 <LCD_VidSendChar+0xd0>
    1be6:	14 c0       	rjmp	.+40     	; 0x1c10 <LCD_VidSendChar+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1be8:	6f 81       	ldd	r22, Y+7	; 0x07
    1bea:	78 85       	ldd	r23, Y+8	; 0x08
    1bec:	89 85       	ldd	r24, Y+9	; 0x09
    1bee:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bf0:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    1bf4:	dc 01       	movw	r26, r24
    1bf6:	cb 01       	movw	r24, r22
    1bf8:	9e 83       	std	Y+6, r25	; 0x06
    1bfa:	8d 83       	std	Y+5, r24	; 0x05
    1bfc:	8d 81       	ldd	r24, Y+5	; 0x05
    1bfe:	9e 81       	ldd	r25, Y+6	; 0x06
    1c00:	9a 83       	std	Y+2, r25	; 0x02
    1c02:	89 83       	std	Y+1, r24	; 0x01
    1c04:	89 81       	ldd	r24, Y+1	; 0x01
    1c06:	9a 81       	ldd	r25, Y+2	; 0x02
    1c08:	01 97       	sbiw	r24, 0x01	; 1
    1c0a:	f1 f7       	brne	.-4      	; 0x1c08 <LCD_VidSendChar+0x118>
    1c0c:	9a 83       	std	Y+2, r25	; 0x02
    1c0e:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(1);

	DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_LOW);
    1c10:	82 e0       	ldi	r24, 0x02	; 2
    1c12:	67 e0       	ldi	r22, 0x07	; 7
    1c14:	40 e0       	ldi	r20, 0x00	; 0
    1c16:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>
}
    1c1a:	2f 96       	adiw	r28, 0x0f	; 15
    1c1c:	0f b6       	in	r0, 0x3f	; 63
    1c1e:	f8 94       	cli
    1c20:	de bf       	out	0x3e, r29	; 62
    1c22:	0f be       	out	0x3f, r0	; 63
    1c24:	cd bf       	out	0x3d, r28	; 61
    1c26:	cf 91       	pop	r28
    1c28:	df 91       	pop	r29
    1c2a:	08 95       	ret

00001c2c <LCD_VidSendString>:




void LCD_VidSendString(u8 *Copy_U8ptr)
{
    1c2c:	df 93       	push	r29
    1c2e:	cf 93       	push	r28
    1c30:	00 d0       	rcall	.+0      	; 0x1c32 <LCD_VidSendString+0x6>
    1c32:	cd b7       	in	r28, 0x3d	; 61
    1c34:	de b7       	in	r29, 0x3e	; 62
    1c36:	9b 83       	std	Y+3, r25	; 0x03
    1c38:	8a 83       	std	Y+2, r24	; 0x02
	for(u8 Local_U8Counter=0;Copy_U8ptr[Local_U8Counter]!='\0';Local_U8Counter++)
    1c3a:	19 82       	std	Y+1, r1	; 0x01
    1c3c:	0e c0       	rjmp	.+28     	; 0x1c5a <LCD_VidSendString+0x2e>
	{
		LCD_VidSendChar(Copy_U8ptr[Local_U8Counter]);
    1c3e:	89 81       	ldd	r24, Y+1	; 0x01
    1c40:	28 2f       	mov	r18, r24
    1c42:	30 e0       	ldi	r19, 0x00	; 0
    1c44:	8a 81       	ldd	r24, Y+2	; 0x02
    1c46:	9b 81       	ldd	r25, Y+3	; 0x03
    1c48:	fc 01       	movw	r30, r24
    1c4a:	e2 0f       	add	r30, r18
    1c4c:	f3 1f       	adc	r31, r19
    1c4e:	80 81       	ld	r24, Z
    1c50:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <LCD_VidSendChar>



void LCD_VidSendString(u8 *Copy_U8ptr)
{
	for(u8 Local_U8Counter=0;Copy_U8ptr[Local_U8Counter]!='\0';Local_U8Counter++)
    1c54:	89 81       	ldd	r24, Y+1	; 0x01
    1c56:	8f 5f       	subi	r24, 0xFF	; 255
    1c58:	89 83       	std	Y+1, r24	; 0x01
    1c5a:	89 81       	ldd	r24, Y+1	; 0x01
    1c5c:	28 2f       	mov	r18, r24
    1c5e:	30 e0       	ldi	r19, 0x00	; 0
    1c60:	8a 81       	ldd	r24, Y+2	; 0x02
    1c62:	9b 81       	ldd	r25, Y+3	; 0x03
    1c64:	fc 01       	movw	r30, r24
    1c66:	e2 0f       	add	r30, r18
    1c68:	f3 1f       	adc	r31, r19
    1c6a:	80 81       	ld	r24, Z
    1c6c:	88 23       	and	r24, r24
    1c6e:	39 f7       	brne	.-50     	; 0x1c3e <LCD_VidSendString+0x12>
	{
		LCD_VidSendChar(Copy_U8ptr[Local_U8Counter]);
	}
}
    1c70:	0f 90       	pop	r0
    1c72:	0f 90       	pop	r0
    1c74:	0f 90       	pop	r0
    1c76:	cf 91       	pop	r28
    1c78:	df 91       	pop	r29
    1c7a:	08 95       	ret

00001c7c <LCD_VidLocation>:


void LCD_VidLocation(u8 Copy_U8Line,u8 Copy_U8CharNum)
{
    1c7c:	df 93       	push	r29
    1c7e:	cf 93       	push	r28
    1c80:	00 d0       	rcall	.+0      	; 0x1c82 <LCD_VidLocation+0x6>
    1c82:	0f 92       	push	r0
    1c84:	cd b7       	in	r28, 0x3d	; 61
    1c86:	de b7       	in	r29, 0x3e	; 62
    1c88:	89 83       	std	Y+1, r24	; 0x01
    1c8a:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_U8Line)
    1c8c:	89 81       	ldd	r24, Y+1	; 0x01
    1c8e:	28 2f       	mov	r18, r24
    1c90:	30 e0       	ldi	r19, 0x00	; 0
    1c92:	3c 83       	std	Y+4, r19	; 0x04
    1c94:	2b 83       	std	Y+3, r18	; 0x03
    1c96:	8b 81       	ldd	r24, Y+3	; 0x03
    1c98:	9c 81       	ldd	r25, Y+4	; 0x04
    1c9a:	00 97       	sbiw	r24, 0x00	; 0
    1c9c:	31 f0       	breq	.+12     	; 0x1caa <LCD_VidLocation+0x2e>
    1c9e:	2b 81       	ldd	r18, Y+3	; 0x03
    1ca0:	3c 81       	ldd	r19, Y+4	; 0x04
    1ca2:	21 30       	cpi	r18, 0x01	; 1
    1ca4:	31 05       	cpc	r19, r1
    1ca6:	31 f0       	breq	.+12     	; 0x1cb4 <LCD_VidLocation+0x38>
    1ca8:	09 c0       	rjmp	.+18     	; 0x1cbc <LCD_VidLocation+0x40>
	{
	case LINE_1:LCD_VidSendCMD(0x80+Copy_U8CharNum);break;
    1caa:	8a 81       	ldd	r24, Y+2	; 0x02
    1cac:	80 58       	subi	r24, 0x80	; 128
    1cae:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <LCD_VidSendCMD>
    1cb2:	04 c0       	rjmp	.+8      	; 0x1cbc <LCD_VidLocation+0x40>
	case LINE_2:LCD_VidSendCMD(0xc0+Copy_U8CharNum);break;
    1cb4:	8a 81       	ldd	r24, Y+2	; 0x02
    1cb6:	80 54       	subi	r24, 0x40	; 64
    1cb8:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <LCD_VidSendCMD>

	}
}
    1cbc:	0f 90       	pop	r0
    1cbe:	0f 90       	pop	r0
    1cc0:	0f 90       	pop	r0
    1cc2:	0f 90       	pop	r0
    1cc4:	cf 91       	pop	r28
    1cc6:	df 91       	pop	r29
    1cc8:	08 95       	ret

00001cca <LCD_VidSendSpecialChar>:


void LCD_VidSendSpecialChar(u8 Copy_U8CharNum,u8 *Copy_U8Ptr)
{
    1cca:	df 93       	push	r29
    1ccc:	cf 93       	push	r28
    1cce:	00 d0       	rcall	.+0      	; 0x1cd0 <LCD_VidSendSpecialChar+0x6>
    1cd0:	0f 92       	push	r0
    1cd2:	cd b7       	in	r28, 0x3d	; 61
    1cd4:	de b7       	in	r29, 0x3e	; 62
    1cd6:	8a 83       	std	Y+2, r24	; 0x02
    1cd8:	7c 83       	std	Y+4, r23	; 0x04
    1cda:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_U8Counter;
	LCD_VidSendCMD(0x40+(Copy_U8CharNum*8));
    1cdc:	8a 81       	ldd	r24, Y+2	; 0x02
    1cde:	88 2f       	mov	r24, r24
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	08 96       	adiw	r24, 0x08	; 8
    1ce4:	88 0f       	add	r24, r24
    1ce6:	99 1f       	adc	r25, r25
    1ce8:	88 0f       	add	r24, r24
    1cea:	99 1f       	adc	r25, r25
    1cec:	88 0f       	add	r24, r24
    1cee:	99 1f       	adc	r25, r25
    1cf0:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <LCD_VidSendCMD>

	for(Local_U8Counter=0;Local_U8Counter<8;Local_U8Counter++)
    1cf4:	19 82       	std	Y+1, r1	; 0x01
    1cf6:	0e c0       	rjmp	.+28     	; 0x1d14 <LCD_VidSendSpecialChar+0x4a>
		LCD_VidSendChar(Copy_U8Ptr[Local_U8Counter]);
    1cf8:	89 81       	ldd	r24, Y+1	; 0x01
    1cfa:	28 2f       	mov	r18, r24
    1cfc:	30 e0       	ldi	r19, 0x00	; 0
    1cfe:	8b 81       	ldd	r24, Y+3	; 0x03
    1d00:	9c 81       	ldd	r25, Y+4	; 0x04
    1d02:	fc 01       	movw	r30, r24
    1d04:	e2 0f       	add	r30, r18
    1d06:	f3 1f       	adc	r31, r19
    1d08:	80 81       	ld	r24, Z
    1d0a:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <LCD_VidSendChar>
void LCD_VidSendSpecialChar(u8 Copy_U8CharNum,u8 *Copy_U8Ptr)
{
	u8 Local_U8Counter;
	LCD_VidSendCMD(0x40+(Copy_U8CharNum*8));

	for(Local_U8Counter=0;Local_U8Counter<8;Local_U8Counter++)
    1d0e:	89 81       	ldd	r24, Y+1	; 0x01
    1d10:	8f 5f       	subi	r24, 0xFF	; 255
    1d12:	89 83       	std	Y+1, r24	; 0x01
    1d14:	89 81       	ldd	r24, Y+1	; 0x01
    1d16:	88 30       	cpi	r24, 0x08	; 8
    1d18:	78 f3       	brcs	.-34     	; 0x1cf8 <LCD_VidSendSpecialChar+0x2e>
		LCD_VidSendChar(Copy_U8Ptr[Local_U8Counter]);
}
    1d1a:	0f 90       	pop	r0
    1d1c:	0f 90       	pop	r0
    1d1e:	0f 90       	pop	r0
    1d20:	0f 90       	pop	r0
    1d22:	cf 91       	pop	r28
    1d24:	df 91       	pop	r29
    1d26:	08 95       	ret

00001d28 <LCD_VidSendSingleInt>:





void LCD_VidSendSingleInt(u8 Copy_U8SingleInt){
    1d28:	df 93       	push	r29
    1d2a:	cf 93       	push	r28
    1d2c:	cd b7       	in	r28, 0x3d	; 61
    1d2e:	de b7       	in	r29, 0x3e	; 62
    1d30:	2f 97       	sbiw	r28, 0x0f	; 15
    1d32:	0f b6       	in	r0, 0x3f	; 63
    1d34:	f8 94       	cli
    1d36:	de bf       	out	0x3e, r29	; 62
    1d38:	0f be       	out	0x3f, r0	; 63
    1d3a:	cd bf       	out	0x3d, r28	; 61
    1d3c:	8f 87       	std	Y+15, r24	; 0x0f
    //u8 Local_Copy_Tochar=2Copy_U8SingleInt;

    DIO_VidSetPinValue(LCD_CMD_PORT,RS,DIO_HIGH);
    1d3e:	82 e0       	ldi	r24, 0x02	; 2
    1d40:	65 e0       	ldi	r22, 0x05	; 5
    1d42:	41 e0       	ldi	r20, 0x01	; 1
    1d44:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>

    DIO_VidSetPinValue(LCD_CMD_PORT,RW,DIO_LOW);
    1d48:	82 e0       	ldi	r24, 0x02	; 2
    1d4a:	66 e0       	ldi	r22, 0x06	; 6
    1d4c:	40 e0       	ldi	r20, 0x00	; 0
    1d4e:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>

    DIO_VidSetPortValue(LCD_DATA_PORT,Copy_U8SingleInt+48);
    1d52:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d54:	98 2f       	mov	r25, r24
    1d56:	90 5d       	subi	r25, 0xD0	; 208
    1d58:	80 e0       	ldi	r24, 0x00	; 0
    1d5a:	69 2f       	mov	r22, r25
    1d5c:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <DIO_VidSetPortValue>

    DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_HIGH);
    1d60:	82 e0       	ldi	r24, 0x02	; 2
    1d62:	67 e0       	ldi	r22, 0x07	; 7
    1d64:	41 e0       	ldi	r20, 0x01	; 1
    1d66:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>
    1d6a:	80 e0       	ldi	r24, 0x00	; 0
    1d6c:	90 e0       	ldi	r25, 0x00	; 0
    1d6e:	a0 e8       	ldi	r26, 0x80	; 128
    1d70:	bf e3       	ldi	r27, 0x3F	; 63
    1d72:	8b 87       	std	Y+11, r24	; 0x0b
    1d74:	9c 87       	std	Y+12, r25	; 0x0c
    1d76:	ad 87       	std	Y+13, r26	; 0x0d
    1d78:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d7a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d7c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d7e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d80:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d82:	20 e0       	ldi	r18, 0x00	; 0
    1d84:	30 e0       	ldi	r19, 0x00	; 0
    1d86:	4a ef       	ldi	r20, 0xFA	; 250
    1d88:	54 e4       	ldi	r21, 0x44	; 68
    1d8a:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    1d8e:	dc 01       	movw	r26, r24
    1d90:	cb 01       	movw	r24, r22
    1d92:	8f 83       	std	Y+7, r24	; 0x07
    1d94:	98 87       	std	Y+8, r25	; 0x08
    1d96:	a9 87       	std	Y+9, r26	; 0x09
    1d98:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d9a:	6f 81       	ldd	r22, Y+7	; 0x07
    1d9c:	78 85       	ldd	r23, Y+8	; 0x08
    1d9e:	89 85       	ldd	r24, Y+9	; 0x09
    1da0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1da2:	20 e0       	ldi	r18, 0x00	; 0
    1da4:	30 e0       	ldi	r19, 0x00	; 0
    1da6:	40 e8       	ldi	r20, 0x80	; 128
    1da8:	5f e3       	ldi	r21, 0x3F	; 63
    1daa:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    1dae:	88 23       	and	r24, r24
    1db0:	2c f4       	brge	.+10     	; 0x1dbc <LCD_VidSendSingleInt+0x94>
		__ticks = 1;
    1db2:	81 e0       	ldi	r24, 0x01	; 1
    1db4:	90 e0       	ldi	r25, 0x00	; 0
    1db6:	9e 83       	std	Y+6, r25	; 0x06
    1db8:	8d 83       	std	Y+5, r24	; 0x05
    1dba:	3f c0       	rjmp	.+126    	; 0x1e3a <LCD_VidSendSingleInt+0x112>
	else if (__tmp > 65535)
    1dbc:	6f 81       	ldd	r22, Y+7	; 0x07
    1dbe:	78 85       	ldd	r23, Y+8	; 0x08
    1dc0:	89 85       	ldd	r24, Y+9	; 0x09
    1dc2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dc4:	20 e0       	ldi	r18, 0x00	; 0
    1dc6:	3f ef       	ldi	r19, 0xFF	; 255
    1dc8:	4f e7       	ldi	r20, 0x7F	; 127
    1dca:	57 e4       	ldi	r21, 0x47	; 71
    1dcc:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    1dd0:	18 16       	cp	r1, r24
    1dd2:	4c f5       	brge	.+82     	; 0x1e26 <LCD_VidSendSingleInt+0xfe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dd4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1dd6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1dd8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1dda:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ddc:	20 e0       	ldi	r18, 0x00	; 0
    1dde:	30 e0       	ldi	r19, 0x00	; 0
    1de0:	40 e2       	ldi	r20, 0x20	; 32
    1de2:	51 e4       	ldi	r21, 0x41	; 65
    1de4:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    1de8:	dc 01       	movw	r26, r24
    1dea:	cb 01       	movw	r24, r22
    1dec:	bc 01       	movw	r22, r24
    1dee:	cd 01       	movw	r24, r26
    1df0:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    1df4:	dc 01       	movw	r26, r24
    1df6:	cb 01       	movw	r24, r22
    1df8:	9e 83       	std	Y+6, r25	; 0x06
    1dfa:	8d 83       	std	Y+5, r24	; 0x05
    1dfc:	0f c0       	rjmp	.+30     	; 0x1e1c <LCD_VidSendSingleInt+0xf4>
    1dfe:	88 ec       	ldi	r24, 0xC8	; 200
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	9c 83       	std	Y+4, r25	; 0x04
    1e04:	8b 83       	std	Y+3, r24	; 0x03
    1e06:	8b 81       	ldd	r24, Y+3	; 0x03
    1e08:	9c 81       	ldd	r25, Y+4	; 0x04
    1e0a:	01 97       	sbiw	r24, 0x01	; 1
    1e0c:	f1 f7       	brne	.-4      	; 0x1e0a <LCD_VidSendSingleInt+0xe2>
    1e0e:	9c 83       	std	Y+4, r25	; 0x04
    1e10:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e12:	8d 81       	ldd	r24, Y+5	; 0x05
    1e14:	9e 81       	ldd	r25, Y+6	; 0x06
    1e16:	01 97       	sbiw	r24, 0x01	; 1
    1e18:	9e 83       	std	Y+6, r25	; 0x06
    1e1a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e1c:	8d 81       	ldd	r24, Y+5	; 0x05
    1e1e:	9e 81       	ldd	r25, Y+6	; 0x06
    1e20:	00 97       	sbiw	r24, 0x00	; 0
    1e22:	69 f7       	brne	.-38     	; 0x1dfe <LCD_VidSendSingleInt+0xd6>
    1e24:	14 c0       	rjmp	.+40     	; 0x1e4e <LCD_VidSendSingleInt+0x126>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e26:	6f 81       	ldd	r22, Y+7	; 0x07
    1e28:	78 85       	ldd	r23, Y+8	; 0x08
    1e2a:	89 85       	ldd	r24, Y+9	; 0x09
    1e2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e2e:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    1e32:	dc 01       	movw	r26, r24
    1e34:	cb 01       	movw	r24, r22
    1e36:	9e 83       	std	Y+6, r25	; 0x06
    1e38:	8d 83       	std	Y+5, r24	; 0x05
    1e3a:	8d 81       	ldd	r24, Y+5	; 0x05
    1e3c:	9e 81       	ldd	r25, Y+6	; 0x06
    1e3e:	9a 83       	std	Y+2, r25	; 0x02
    1e40:	89 83       	std	Y+1, r24	; 0x01
    1e42:	89 81       	ldd	r24, Y+1	; 0x01
    1e44:	9a 81       	ldd	r25, Y+2	; 0x02
    1e46:	01 97       	sbiw	r24, 0x01	; 1
    1e48:	f1 f7       	brne	.-4      	; 0x1e46 <LCD_VidSendSingleInt+0x11e>
    1e4a:	9a 83       	std	Y+2, r25	; 0x02
    1e4c:	89 83       	std	Y+1, r24	; 0x01

    _delay_ms(1);

    DIO_VidSetPinValue(LCD_CMD_PORT,EN,DIO_LOW);
    1e4e:	82 e0       	ldi	r24, 0x02	; 2
    1e50:	67 e0       	ldi	r22, 0x07	; 7
    1e52:	40 e0       	ldi	r20, 0x00	; 0
    1e54:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPinValue>
}
    1e58:	2f 96       	adiw	r28, 0x0f	; 15
    1e5a:	0f b6       	in	r0, 0x3f	; 63
    1e5c:	f8 94       	cli
    1e5e:	de bf       	out	0x3e, r29	; 62
    1e60:	0f be       	out	0x3f, r0	; 63
    1e62:	cd bf       	out	0x3d, r28	; 61
    1e64:	cf 91       	pop	r28
    1e66:	df 91       	pop	r29
    1e68:	08 95       	ret

00001e6a <LCD_VidSendMultiInt>:

void LCD_VidSendMultiInt(u32 Copy_U8MultiInt){
    1e6a:	df 93       	push	r29
    1e6c:	cf 93       	push	r28
    1e6e:	cd b7       	in	r28, 0x3d	; 61
    1e70:	de b7       	in	r29, 0x3e	; 62
    1e72:	2d 97       	sbiw	r28, 0x0d	; 13
    1e74:	0f b6       	in	r0, 0x3f	; 63
    1e76:	f8 94       	cli
    1e78:	de bf       	out	0x3e, r29	; 62
    1e7a:	0f be       	out	0x3f, r0	; 63
    1e7c:	cd bf       	out	0x3d, r28	; 61
    1e7e:	6a 87       	std	Y+10, r22	; 0x0a
    1e80:	7b 87       	std	Y+11, r23	; 0x0b
    1e82:	8c 87       	std	Y+12, r24	; 0x0c
    1e84:	9d 87       	std	Y+13, r25	; 0x0d
    u32 Local_Div = 1;
    1e86:	81 e0       	ldi	r24, 0x01	; 1
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	a0 e0       	ldi	r26, 0x00	; 0
    1e8c:	b0 e0       	ldi	r27, 0x00	; 0
    1e8e:	8e 83       	std	Y+6, r24	; 0x06
    1e90:	9f 83       	std	Y+7, r25	; 0x07
    1e92:	a8 87       	std	Y+8, r26	; 0x08
    1e94:	b9 87       	std	Y+9, r27	; 0x09
    u32 Local_Temp = Copy_U8MultiInt;
    1e96:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e98:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e9a:	ac 85       	ldd	r26, Y+12	; 0x0c
    1e9c:	bd 85       	ldd	r27, Y+13	; 0x0d
    1e9e:	8a 83       	std	Y+2, r24	; 0x02
    1ea0:	9b 83       	std	Y+3, r25	; 0x03
    1ea2:	ac 83       	std	Y+4, r26	; 0x04
    1ea4:	bd 83       	std	Y+5, r27	; 0x05
    1ea6:	24 c0       	rjmp	.+72     	; 0x1ef0 <LCD_VidSendMultiInt+0x86>
    u8 Copy_U8SingleInt;
    while(Local_Temp >= 10){
        Local_Div *= 10;
    1ea8:	8e 81       	ldd	r24, Y+6	; 0x06
    1eaa:	9f 81       	ldd	r25, Y+7	; 0x07
    1eac:	a8 85       	ldd	r26, Y+8	; 0x08
    1eae:	b9 85       	ldd	r27, Y+9	; 0x09
    1eb0:	2a e0       	ldi	r18, 0x0A	; 10
    1eb2:	30 e0       	ldi	r19, 0x00	; 0
    1eb4:	40 e0       	ldi	r20, 0x00	; 0
    1eb6:	50 e0       	ldi	r21, 0x00	; 0
    1eb8:	bc 01       	movw	r22, r24
    1eba:	cd 01       	movw	r24, r26
    1ebc:	0e 94 54 13 	call	0x26a8	; 0x26a8 <__mulsi3>
    1ec0:	dc 01       	movw	r26, r24
    1ec2:	cb 01       	movw	r24, r22
    1ec4:	8e 83       	std	Y+6, r24	; 0x06
    1ec6:	9f 83       	std	Y+7, r25	; 0x07
    1ec8:	a8 87       	std	Y+8, r26	; 0x08
    1eca:	b9 87       	std	Y+9, r27	; 0x09
        Local_Temp /= 10;
    1ecc:	8a 81       	ldd	r24, Y+2	; 0x02
    1ece:	9b 81       	ldd	r25, Y+3	; 0x03
    1ed0:	ac 81       	ldd	r26, Y+4	; 0x04
    1ed2:	bd 81       	ldd	r27, Y+5	; 0x05
    1ed4:	2a e0       	ldi	r18, 0x0A	; 10
    1ed6:	30 e0       	ldi	r19, 0x00	; 0
    1ed8:	40 e0       	ldi	r20, 0x00	; 0
    1eda:	50 e0       	ldi	r21, 0x00	; 0
    1edc:	bc 01       	movw	r22, r24
    1ede:	cd 01       	movw	r24, r26
    1ee0:	0e 94 73 13 	call	0x26e6	; 0x26e6 <__udivmodsi4>
    1ee4:	da 01       	movw	r26, r20
    1ee6:	c9 01       	movw	r24, r18
    1ee8:	8a 83       	std	Y+2, r24	; 0x02
    1eea:	9b 83       	std	Y+3, r25	; 0x03
    1eec:	ac 83       	std	Y+4, r26	; 0x04
    1eee:	bd 83       	std	Y+5, r27	; 0x05

void LCD_VidSendMultiInt(u32 Copy_U8MultiInt){
    u32 Local_Div = 1;
    u32 Local_Temp = Copy_U8MultiInt;
    u8 Copy_U8SingleInt;
    while(Local_Temp >= 10){
    1ef0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ef2:	9b 81       	ldd	r25, Y+3	; 0x03
    1ef4:	ac 81       	ldd	r26, Y+4	; 0x04
    1ef6:	bd 81       	ldd	r27, Y+5	; 0x05
    1ef8:	8a 30       	cpi	r24, 0x0A	; 10
    1efa:	91 05       	cpc	r25, r1
    1efc:	a1 05       	cpc	r26, r1
    1efe:	b1 05       	cpc	r27, r1
    1f00:	98 f6       	brcc	.-90     	; 0x1ea8 <LCD_VidSendMultiInt+0x3e>
    1f02:	36 c0       	rjmp	.+108    	; 0x1f70 <LCD_VidSendMultiInt+0x106>
        Local_Div *= 10;
        Local_Temp /= 10;
    }

    while(Local_Div >= 1){
        Copy_U8SingleInt = Copy_U8MultiInt / Local_Div;
    1f04:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f06:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f08:	ac 85       	ldd	r26, Y+12	; 0x0c
    1f0a:	bd 85       	ldd	r27, Y+13	; 0x0d
    1f0c:	2e 81       	ldd	r18, Y+6	; 0x06
    1f0e:	3f 81       	ldd	r19, Y+7	; 0x07
    1f10:	48 85       	ldd	r20, Y+8	; 0x08
    1f12:	59 85       	ldd	r21, Y+9	; 0x09
    1f14:	bc 01       	movw	r22, r24
    1f16:	cd 01       	movw	r24, r26
    1f18:	0e 94 73 13 	call	0x26e6	; 0x26e6 <__udivmodsi4>
    1f1c:	da 01       	movw	r26, r20
    1f1e:	c9 01       	movw	r24, r18
    1f20:	89 83       	std	Y+1, r24	; 0x01
        LCD_VidSendSingleInt(Copy_U8SingleInt);
    1f22:	89 81       	ldd	r24, Y+1	; 0x01
    1f24:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <LCD_VidSendSingleInt>
        Copy_U8MultiInt %= Local_Div;
    1f28:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f2a:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f2c:	ac 85       	ldd	r26, Y+12	; 0x0c
    1f2e:	bd 85       	ldd	r27, Y+13	; 0x0d
    1f30:	2e 81       	ldd	r18, Y+6	; 0x06
    1f32:	3f 81       	ldd	r19, Y+7	; 0x07
    1f34:	48 85       	ldd	r20, Y+8	; 0x08
    1f36:	59 85       	ldd	r21, Y+9	; 0x09
    1f38:	bc 01       	movw	r22, r24
    1f3a:	cd 01       	movw	r24, r26
    1f3c:	0e 94 73 13 	call	0x26e6	; 0x26e6 <__udivmodsi4>
    1f40:	dc 01       	movw	r26, r24
    1f42:	cb 01       	movw	r24, r22
    1f44:	8a 87       	std	Y+10, r24	; 0x0a
    1f46:	9b 87       	std	Y+11, r25	; 0x0b
    1f48:	ac 87       	std	Y+12, r26	; 0x0c
    1f4a:	bd 87       	std	Y+13, r27	; 0x0d
        Local_Div /= 10;
    1f4c:	8e 81       	ldd	r24, Y+6	; 0x06
    1f4e:	9f 81       	ldd	r25, Y+7	; 0x07
    1f50:	a8 85       	ldd	r26, Y+8	; 0x08
    1f52:	b9 85       	ldd	r27, Y+9	; 0x09
    1f54:	2a e0       	ldi	r18, 0x0A	; 10
    1f56:	30 e0       	ldi	r19, 0x00	; 0
    1f58:	40 e0       	ldi	r20, 0x00	; 0
    1f5a:	50 e0       	ldi	r21, 0x00	; 0
    1f5c:	bc 01       	movw	r22, r24
    1f5e:	cd 01       	movw	r24, r26
    1f60:	0e 94 73 13 	call	0x26e6	; 0x26e6 <__udivmodsi4>
    1f64:	da 01       	movw	r26, r20
    1f66:	c9 01       	movw	r24, r18
    1f68:	8e 83       	std	Y+6, r24	; 0x06
    1f6a:	9f 83       	std	Y+7, r25	; 0x07
    1f6c:	a8 87       	std	Y+8, r26	; 0x08
    1f6e:	b9 87       	std	Y+9, r27	; 0x09
    while(Local_Temp >= 10){
        Local_Div *= 10;
        Local_Temp /= 10;
    }

    while(Local_Div >= 1){
    1f70:	8e 81       	ldd	r24, Y+6	; 0x06
    1f72:	9f 81       	ldd	r25, Y+7	; 0x07
    1f74:	a8 85       	ldd	r26, Y+8	; 0x08
    1f76:	b9 85       	ldd	r27, Y+9	; 0x09
    1f78:	00 97       	sbiw	r24, 0x00	; 0
    1f7a:	a1 05       	cpc	r26, r1
    1f7c:	b1 05       	cpc	r27, r1
    1f7e:	11 f6       	brne	.-124    	; 0x1f04 <LCD_VidSendMultiInt+0x9a>
        Copy_U8SingleInt = Copy_U8MultiInt / Local_Div;
        LCD_VidSendSingleInt(Copy_U8SingleInt);
        Copy_U8MultiInt %= Local_Div;
        Local_Div /= 10;
    }
}
    1f80:	2d 96       	adiw	r28, 0x0d	; 13
    1f82:	0f b6       	in	r0, 0x3f	; 63
    1f84:	f8 94       	cli
    1f86:	de bf       	out	0x3e, r29	; 62
    1f88:	0f be       	out	0x3f, r0	; 63
    1f8a:	cd bf       	out	0x3d, r28	; 61
    1f8c:	cf 91       	pop	r28
    1f8e:	df 91       	pop	r29
    1f90:	08 95       	ret

00001f92 <LCD_Clear>:
void LCD_Clear (void){
    1f92:	df 93       	push	r29
    1f94:	cf 93       	push	r28
    1f96:	cd b7       	in	r28, 0x3d	; 61
    1f98:	de b7       	in	r29, 0x3e	; 62
    LCD_VidSendCMD(0x01);
    1f9a:	81 e0       	ldi	r24, 0x01	; 1
    1f9c:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <LCD_VidSendCMD>
    LCD_VidSendChar(' ');
    1fa0:	80 e2       	ldi	r24, 0x20	; 32
    1fa2:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <LCD_VidSendChar>
    LCD_VidLocation(LINE_1,0);
    1fa6:	80 e0       	ldi	r24, 0x00	; 0
    1fa8:	60 e0       	ldi	r22, 0x00	; 0
    1faa:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <LCD_VidLocation>
}
    1fae:	cf 91       	pop	r28
    1fb0:	df 91       	pop	r29
    1fb2:	08 95       	ret

00001fb4 <Timer1_Init>:
 *      Author: seif alrahman
 */
#include <avr/io.h>

void Timer1_Init()
{
    1fb4:	df 93       	push	r29
    1fb6:	cf 93       	push	r28
    1fb8:	cd b7       	in	r28, 0x3d	; 61
    1fba:	de b7       	in	r29, 0x3e	; 62
    // Set Timer1 to normal mode
    TCCR1A = 0;
    1fbc:	e0 e8       	ldi	r30, 0x80	; 128
    1fbe:	f0 e0       	ldi	r31, 0x00	; 0
    1fc0:	10 82       	st	Z, r1
    TCCR1B = 0;
    1fc2:	e1 e8       	ldi	r30, 0x81	; 129
    1fc4:	f0 e0       	ldi	r31, 0x00	; 0
    1fc6:	10 82       	st	Z, r1

    // Set prescaler to 256
    TCCR1B |= (1 << CS12);
    1fc8:	a1 e8       	ldi	r26, 0x81	; 129
    1fca:	b0 e0       	ldi	r27, 0x00	; 0
    1fcc:	e1 e8       	ldi	r30, 0x81	; 129
    1fce:	f0 e0       	ldi	r31, 0x00	; 0
    1fd0:	80 81       	ld	r24, Z
    1fd2:	84 60       	ori	r24, 0x04	; 4
    1fd4:	8c 93       	st	X, r24



    TCNT1 = 0;
    1fd6:	e4 e8       	ldi	r30, 0x84	; 132
    1fd8:	f0 e0       	ldi	r31, 0x00	; 0
    1fda:	11 82       	std	Z+1, r1	; 0x01
    1fdc:	10 82       	st	Z, r1


}
    1fde:	cf 91       	pop	r28
    1fe0:	df 91       	pop	r29
    1fe2:	08 95       	ret

00001fe4 <UART_Init>:
#include <avr/io.h>

// UART initialization
void UART_Init()
{
    1fe4:	df 93       	push	r29
    1fe6:	cf 93       	push	r28
    1fe8:	cd b7       	in	r28, 0x3d	; 61
    1fea:	de b7       	in	r29, 0x3e	; 62
    // Set baud rate to 9600 (F_CPU = 8MHz)
    UBRR0H = 0;
    1fec:	e5 ec       	ldi	r30, 0xC5	; 197
    1fee:	f0 e0       	ldi	r31, 0x00	; 0
    1ff0:	10 82       	st	Z, r1
    UBRR0L = 51;
    1ff2:	e4 ec       	ldi	r30, 0xC4	; 196
    1ff4:	f0 e0       	ldi	r31, 0x00	; 0
    1ff6:	83 e3       	ldi	r24, 0x33	; 51
    1ff8:	80 83       	st	Z, r24

    // Enable receiver and transmitter
    UCSR0B = (1 << RXEN0) | (1 << TXEN0);
    1ffa:	e1 ec       	ldi	r30, 0xC1	; 193
    1ffc:	f0 e0       	ldi	r31, 0x00	; 0
    1ffe:	88 e1       	ldi	r24, 0x18	; 24
    2000:	80 83       	st	Z, r24

    // Set frame format: 8-bit data, 1 stop bit
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
    2002:	e2 ec       	ldi	r30, 0xC2	; 194
    2004:	f0 e0       	ldi	r31, 0x00	; 0
    2006:	86 e0       	ldi	r24, 0x06	; 6
    2008:	80 83       	st	Z, r24
}
    200a:	cf 91       	pop	r28
    200c:	df 91       	pop	r29
    200e:	08 95       	ret

00002010 <UART_Transmit>:

// UART transmit data
void UART_Transmit(unsigned char data)
{
    2010:	df 93       	push	r29
    2012:	cf 93       	push	r28
    2014:	0f 92       	push	r0
    2016:	cd b7       	in	r28, 0x3d	; 61
    2018:	de b7       	in	r29, 0x3e	; 62
    201a:	89 83       	std	Y+1, r24	; 0x01
    // Wait for empty transmit buffer
    while (!(UCSR0A & (1 << UDRE0)));
    201c:	e0 ec       	ldi	r30, 0xC0	; 192
    201e:	f0 e0       	ldi	r31, 0x00	; 0
    2020:	80 81       	ld	r24, Z
    2022:	88 2f       	mov	r24, r24
    2024:	90 e0       	ldi	r25, 0x00	; 0
    2026:	80 72       	andi	r24, 0x20	; 32
    2028:	90 70       	andi	r25, 0x00	; 0
    202a:	00 97       	sbiw	r24, 0x00	; 0
    202c:	b9 f3       	breq	.-18     	; 0x201c <UART_Transmit+0xc>

    // Put data into buffer, sends the data
    UDR0 = data;
    202e:	e6 ec       	ldi	r30, 0xC6	; 198
    2030:	f0 e0       	ldi	r31, 0x00	; 0
    2032:	89 81       	ldd	r24, Y+1	; 0x01
    2034:	80 83       	st	Z, r24
}
    2036:	0f 90       	pop	r0
    2038:	cf 91       	pop	r28
    203a:	df 91       	pop	r29
    203c:	08 95       	ret

0000203e <UART_Receive>:

// UART receive data
unsigned char UART_Receive()
{
    203e:	df 93       	push	r29
    2040:	cf 93       	push	r28
    2042:	cd b7       	in	r28, 0x3d	; 61
    2044:	de b7       	in	r29, 0x3e	; 62
    // Wait for data to be received
    while (!(UCSR0A & (1 << RXC0)));
    2046:	e0 ec       	ldi	r30, 0xC0	; 192
    2048:	f0 e0       	ldi	r31, 0x00	; 0
    204a:	80 81       	ld	r24, Z
    204c:	88 23       	and	r24, r24
    204e:	dc f7       	brge	.-10     	; 0x2046 <UART_Receive+0x8>

    // Get and return received data from buffer
    return UDR0;
    2050:	e6 ec       	ldi	r30, 0xC6	; 198
    2052:	f0 e0       	ldi	r31, 0x00	; 0
    2054:	80 81       	ld	r24, Z
}
    2056:	cf 91       	pop	r28
    2058:	df 91       	pop	r29
    205a:	08 95       	ret

0000205c <ultrasonic_in_action>:

u16 pulse=0 ;
u8  i =0 ;
f32 distance = 0 ;

void ultrasonic_in_action(void){
    205c:	df 93       	push	r29
    205e:	cf 93       	push	r28
    2060:	cd b7       	in	r28, 0x3d	; 61
    2062:	de b7       	in	r29, 0x3e	; 62
    2064:	aa 97       	sbiw	r28, 0x2a	; 42
    2066:	0f b6       	in	r0, 0x3f	; 63
    2068:	f8 94       	cli
    206a:	de bf       	out	0x3e, r29	; 62
    206c:	0f be       	out	0x3f, r0	; 63
    206e:	cd bf       	out	0x3d, r28	; 61

	if(i==1){
    2070:	80 91 20 03 	lds	r24, 0x0320
    2074:	81 30       	cpi	r24, 0x01	; 1
    2076:	09 f0       	breq	.+2      	; 0x207a <ultrasonic_in_action+0x1e>
    2078:	ce c1       	rjmp	.+924    	; 0x2416 <__stack+0x217>
		pulse=TCNT1;
    207a:	e4 e8       	ldi	r30, 0x84	; 132
    207c:	f0 e0       	ldi	r31, 0x00	; 0
    207e:	80 81       	ld	r24, Z
    2080:	91 81       	ldd	r25, Z+1	; 0x01
    2082:	90 93 1f 03 	sts	0x031F, r25
    2086:	80 93 1e 03 	sts	0x031E, r24
		i=0;
    208a:	10 92 20 03 	sts	0x0320, r1
		distance=(pulse/2)*(float)(1.0976);//cm
    208e:	80 91 1e 03 	lds	r24, 0x031E
    2092:	90 91 1f 03 	lds	r25, 0x031F
    2096:	96 95       	lsr	r25
    2098:	87 95       	ror	r24
    209a:	cc 01       	movw	r24, r24
    209c:	a0 e0       	ldi	r26, 0x00	; 0
    209e:	b0 e0       	ldi	r27, 0x00	; 0
    20a0:	bc 01       	movw	r22, r24
    20a2:	cd 01       	movw	r24, r26
    20a4:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__floatunsisf>
    20a8:	dc 01       	movw	r26, r24
    20aa:	cb 01       	movw	r24, r22
    20ac:	bc 01       	movw	r22, r24
    20ae:	cd 01       	movw	r24, r26
    20b0:	28 e2       	ldi	r18, 0x28	; 40
    20b2:	3e e7       	ldi	r19, 0x7E	; 126
    20b4:	4c e8       	ldi	r20, 0x8C	; 140
    20b6:	5f e3       	ldi	r21, 0x3F	; 63
    20b8:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    20bc:	dc 01       	movw	r26, r24
    20be:	cb 01       	movw	r24, r22
    20c0:	80 93 21 03 	sts	0x0321, r24
    20c4:	90 93 22 03 	sts	0x0322, r25
    20c8:	a0 93 23 03 	sts	0x0323, r26
    20cc:	b0 93 24 03 	sts	0x0324, r27
		if(distance< MINIMUM_DISTANCE ){
    20d0:	80 91 21 03 	lds	r24, 0x0321
    20d4:	90 91 22 03 	lds	r25, 0x0322
    20d8:	a0 91 23 03 	lds	r26, 0x0323
    20dc:	b0 91 24 03 	lds	r27, 0x0324
    20e0:	bc 01       	movw	r22, r24
    20e2:	cd 01       	movw	r24, r26
    20e4:	20 e0       	ldi	r18, 0x00	; 0
    20e6:	30 e0       	ldi	r19, 0x00	; 0
    20e8:	44 eb       	ldi	r20, 0xB4	; 180
    20ea:	52 e4       	ldi	r21, 0x42	; 66
    20ec:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    20f0:	88 23       	and	r24, r24
    20f2:	0c f0       	brlt	.+2      	; 0x20f6 <ultrasonic_in_action+0x9a>
    20f4:	fd c0       	rjmp	.+506    	; 0x22f0 <__stack+0xf1>
			LCD_VidSendString("WARNING");
    20f6:	80 e0       	ldi	r24, 0x00	; 0
    20f8:	92 e0       	ldi	r25, 0x02	; 2
    20fa:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <LCD_VidSendString>
    20fe:	80 e0       	ldi	r24, 0x00	; 0
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	aa e7       	ldi	r26, 0x7A	; 122
    2104:	b3 e4       	ldi	r27, 0x43	; 67
    2106:	8f a3       	std	Y+39, r24	; 0x27
    2108:	98 a7       	std	Y+40, r25	; 0x28
    210a:	a9 a7       	std	Y+41, r26	; 0x29
    210c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    210e:	6f a1       	ldd	r22, Y+39	; 0x27
    2110:	78 a5       	ldd	r23, Y+40	; 0x28
    2112:	89 a5       	ldd	r24, Y+41	; 0x29
    2114:	9a a5       	ldd	r25, Y+42	; 0x2a
    2116:	20 e0       	ldi	r18, 0x00	; 0
    2118:	30 e0       	ldi	r19, 0x00	; 0
    211a:	4a ef       	ldi	r20, 0xFA	; 250
    211c:	54 e4       	ldi	r21, 0x44	; 68
    211e:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    2122:	dc 01       	movw	r26, r24
    2124:	cb 01       	movw	r24, r22
    2126:	8b a3       	std	Y+35, r24	; 0x23
    2128:	9c a3       	std	Y+36, r25	; 0x24
    212a:	ad a3       	std	Y+37, r26	; 0x25
    212c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    212e:	6b a1       	ldd	r22, Y+35	; 0x23
    2130:	7c a1       	ldd	r23, Y+36	; 0x24
    2132:	8d a1       	ldd	r24, Y+37	; 0x25
    2134:	9e a1       	ldd	r25, Y+38	; 0x26
    2136:	20 e0       	ldi	r18, 0x00	; 0
    2138:	30 e0       	ldi	r19, 0x00	; 0
    213a:	40 e8       	ldi	r20, 0x80	; 128
    213c:	5f e3       	ldi	r21, 0x3F	; 63
    213e:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    2142:	88 23       	and	r24, r24
    2144:	2c f4       	brge	.+10     	; 0x2150 <ultrasonic_in_action+0xf4>
		__ticks = 1;
    2146:	81 e0       	ldi	r24, 0x01	; 1
    2148:	90 e0       	ldi	r25, 0x00	; 0
    214a:	9a a3       	std	Y+34, r25	; 0x22
    214c:	89 a3       	std	Y+33, r24	; 0x21
    214e:	3f c0       	rjmp	.+126    	; 0x21ce <ultrasonic_in_action+0x172>
	else if (__tmp > 65535)
    2150:	6b a1       	ldd	r22, Y+35	; 0x23
    2152:	7c a1       	ldd	r23, Y+36	; 0x24
    2154:	8d a1       	ldd	r24, Y+37	; 0x25
    2156:	9e a1       	ldd	r25, Y+38	; 0x26
    2158:	20 e0       	ldi	r18, 0x00	; 0
    215a:	3f ef       	ldi	r19, 0xFF	; 255
    215c:	4f e7       	ldi	r20, 0x7F	; 127
    215e:	57 e4       	ldi	r21, 0x47	; 71
    2160:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    2164:	18 16       	cp	r1, r24
    2166:	4c f5       	brge	.+82     	; 0x21ba <ultrasonic_in_action+0x15e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2168:	6f a1       	ldd	r22, Y+39	; 0x27
    216a:	78 a5       	ldd	r23, Y+40	; 0x28
    216c:	89 a5       	ldd	r24, Y+41	; 0x29
    216e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2170:	20 e0       	ldi	r18, 0x00	; 0
    2172:	30 e0       	ldi	r19, 0x00	; 0
    2174:	40 e2       	ldi	r20, 0x20	; 32
    2176:	51 e4       	ldi	r21, 0x41	; 65
    2178:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    217c:	dc 01       	movw	r26, r24
    217e:	cb 01       	movw	r24, r22
    2180:	bc 01       	movw	r22, r24
    2182:	cd 01       	movw	r24, r26
    2184:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    2188:	dc 01       	movw	r26, r24
    218a:	cb 01       	movw	r24, r22
    218c:	9a a3       	std	Y+34, r25	; 0x22
    218e:	89 a3       	std	Y+33, r24	; 0x21
    2190:	0f c0       	rjmp	.+30     	; 0x21b0 <ultrasonic_in_action+0x154>
    2192:	88 ec       	ldi	r24, 0xC8	; 200
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	98 a3       	std	Y+32, r25	; 0x20
    2198:	8f 8f       	std	Y+31, r24	; 0x1f
    219a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    219c:	98 a1       	ldd	r25, Y+32	; 0x20
    219e:	01 97       	sbiw	r24, 0x01	; 1
    21a0:	f1 f7       	brne	.-4      	; 0x219e <ultrasonic_in_action+0x142>
    21a2:	98 a3       	std	Y+32, r25	; 0x20
    21a4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21a6:	89 a1       	ldd	r24, Y+33	; 0x21
    21a8:	9a a1       	ldd	r25, Y+34	; 0x22
    21aa:	01 97       	sbiw	r24, 0x01	; 1
    21ac:	9a a3       	std	Y+34, r25	; 0x22
    21ae:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21b0:	89 a1       	ldd	r24, Y+33	; 0x21
    21b2:	9a a1       	ldd	r25, Y+34	; 0x22
    21b4:	00 97       	sbiw	r24, 0x00	; 0
    21b6:	69 f7       	brne	.-38     	; 0x2192 <ultrasonic_in_action+0x136>
    21b8:	14 c0       	rjmp	.+40     	; 0x21e2 <ultrasonic_in_action+0x186>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21ba:	6b a1       	ldd	r22, Y+35	; 0x23
    21bc:	7c a1       	ldd	r23, Y+36	; 0x24
    21be:	8d a1       	ldd	r24, Y+37	; 0x25
    21c0:	9e a1       	ldd	r25, Y+38	; 0x26
    21c2:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    21c6:	dc 01       	movw	r26, r24
    21c8:	cb 01       	movw	r24, r22
    21ca:	9a a3       	std	Y+34, r25	; 0x22
    21cc:	89 a3       	std	Y+33, r24	; 0x21
    21ce:	89 a1       	ldd	r24, Y+33	; 0x21
    21d0:	9a a1       	ldd	r25, Y+34	; 0x22
    21d2:	9e 8f       	std	Y+30, r25	; 0x1e
    21d4:	8d 8f       	std	Y+29, r24	; 0x1d
    21d6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21d8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    21da:	01 97       	sbiw	r24, 0x01	; 1
    21dc:	f1 f7       	brne	.-4      	; 0x21da <ultrasonic_in_action+0x17e>
    21de:	9e 8f       	std	Y+30, r25	; 0x1e
    21e0:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(250);
			LCD_Clear();
    21e2:	0e 94 c9 0f 	call	0x1f92	; 0x1f92 <LCD_Clear>
			UART_Transmit(1);
    21e6:	81 e0       	ldi	r24, 0x01	; 1
    21e8:	0e 94 08 10 	call	0x2010	; 0x2010 <UART_Transmit>
			UART_Transmit(distance);
    21ec:	80 91 21 03 	lds	r24, 0x0321
    21f0:	90 91 22 03 	lds	r25, 0x0322
    21f4:	a0 91 23 03 	lds	r26, 0x0323
    21f8:	b0 91 24 03 	lds	r27, 0x0324
    21fc:	bc 01       	movw	r22, r24
    21fe:	cd 01       	movw	r24, r26
    2200:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    2204:	dc 01       	movw	r26, r24
    2206:	cb 01       	movw	r24, r22
    2208:	0e 94 08 10 	call	0x2010	; 0x2010 <UART_Transmit>
    220c:	80 e0       	ldi	r24, 0x00	; 0
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	aa e7       	ldi	r26, 0x7A	; 122
    2212:	b3 e4       	ldi	r27, 0x43	; 67
    2214:	89 8f       	std	Y+25, r24	; 0x19
    2216:	9a 8f       	std	Y+26, r25	; 0x1a
    2218:	ab 8f       	std	Y+27, r26	; 0x1b
    221a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    221c:	69 8d       	ldd	r22, Y+25	; 0x19
    221e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2220:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2222:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2224:	20 e0       	ldi	r18, 0x00	; 0
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	4a ef       	ldi	r20, 0xFA	; 250
    222a:	54 e4       	ldi	r21, 0x44	; 68
    222c:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    2230:	dc 01       	movw	r26, r24
    2232:	cb 01       	movw	r24, r22
    2234:	8d 8b       	std	Y+21, r24	; 0x15
    2236:	9e 8b       	std	Y+22, r25	; 0x16
    2238:	af 8b       	std	Y+23, r26	; 0x17
    223a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    223c:	6d 89       	ldd	r22, Y+21	; 0x15
    223e:	7e 89       	ldd	r23, Y+22	; 0x16
    2240:	8f 89       	ldd	r24, Y+23	; 0x17
    2242:	98 8d       	ldd	r25, Y+24	; 0x18
    2244:	20 e0       	ldi	r18, 0x00	; 0
    2246:	30 e0       	ldi	r19, 0x00	; 0
    2248:	40 e8       	ldi	r20, 0x80	; 128
    224a:	5f e3       	ldi	r21, 0x3F	; 63
    224c:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    2250:	88 23       	and	r24, r24
    2252:	2c f4       	brge	.+10     	; 0x225e <__stack+0x5f>
		__ticks = 1;
    2254:	81 e0       	ldi	r24, 0x01	; 1
    2256:	90 e0       	ldi	r25, 0x00	; 0
    2258:	9c 8b       	std	Y+20, r25	; 0x14
    225a:	8b 8b       	std	Y+19, r24	; 0x13
    225c:	3f c0       	rjmp	.+126    	; 0x22dc <__stack+0xdd>
	else if (__tmp > 65535)
    225e:	6d 89       	ldd	r22, Y+21	; 0x15
    2260:	7e 89       	ldd	r23, Y+22	; 0x16
    2262:	8f 89       	ldd	r24, Y+23	; 0x17
    2264:	98 8d       	ldd	r25, Y+24	; 0x18
    2266:	20 e0       	ldi	r18, 0x00	; 0
    2268:	3f ef       	ldi	r19, 0xFF	; 255
    226a:	4f e7       	ldi	r20, 0x7F	; 127
    226c:	57 e4       	ldi	r21, 0x47	; 71
    226e:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    2272:	18 16       	cp	r1, r24
    2274:	4c f5       	brge	.+82     	; 0x22c8 <__stack+0xc9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2276:	69 8d       	ldd	r22, Y+25	; 0x19
    2278:	7a 8d       	ldd	r23, Y+26	; 0x1a
    227a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    227c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    227e:	20 e0       	ldi	r18, 0x00	; 0
    2280:	30 e0       	ldi	r19, 0x00	; 0
    2282:	40 e2       	ldi	r20, 0x20	; 32
    2284:	51 e4       	ldi	r21, 0x41	; 65
    2286:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    228a:	dc 01       	movw	r26, r24
    228c:	cb 01       	movw	r24, r22
    228e:	bc 01       	movw	r22, r24
    2290:	cd 01       	movw	r24, r26
    2292:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    2296:	dc 01       	movw	r26, r24
    2298:	cb 01       	movw	r24, r22
    229a:	9c 8b       	std	Y+20, r25	; 0x14
    229c:	8b 8b       	std	Y+19, r24	; 0x13
    229e:	0f c0       	rjmp	.+30     	; 0x22be <__stack+0xbf>
    22a0:	88 ec       	ldi	r24, 0xC8	; 200
    22a2:	90 e0       	ldi	r25, 0x00	; 0
    22a4:	9a 8b       	std	Y+18, r25	; 0x12
    22a6:	89 8b       	std	Y+17, r24	; 0x11
    22a8:	89 89       	ldd	r24, Y+17	; 0x11
    22aa:	9a 89       	ldd	r25, Y+18	; 0x12
    22ac:	01 97       	sbiw	r24, 0x01	; 1
    22ae:	f1 f7       	brne	.-4      	; 0x22ac <__stack+0xad>
    22b0:	9a 8b       	std	Y+18, r25	; 0x12
    22b2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22b4:	8b 89       	ldd	r24, Y+19	; 0x13
    22b6:	9c 89       	ldd	r25, Y+20	; 0x14
    22b8:	01 97       	sbiw	r24, 0x01	; 1
    22ba:	9c 8b       	std	Y+20, r25	; 0x14
    22bc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22be:	8b 89       	ldd	r24, Y+19	; 0x13
    22c0:	9c 89       	ldd	r25, Y+20	; 0x14
    22c2:	00 97       	sbiw	r24, 0x00	; 0
    22c4:	69 f7       	brne	.-38     	; 0x22a0 <__stack+0xa1>
    22c6:	14 c0       	rjmp	.+40     	; 0x22f0 <__stack+0xf1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22c8:	6d 89       	ldd	r22, Y+21	; 0x15
    22ca:	7e 89       	ldd	r23, Y+22	; 0x16
    22cc:	8f 89       	ldd	r24, Y+23	; 0x17
    22ce:	98 8d       	ldd	r25, Y+24	; 0x18
    22d0:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    22d4:	dc 01       	movw	r26, r24
    22d6:	cb 01       	movw	r24, r22
    22d8:	9c 8b       	std	Y+20, r25	; 0x14
    22da:	8b 8b       	std	Y+19, r24	; 0x13
    22dc:	8b 89       	ldd	r24, Y+19	; 0x13
    22de:	9c 89       	ldd	r25, Y+20	; 0x14
    22e0:	98 8b       	std	Y+16, r25	; 0x10
    22e2:	8f 87       	std	Y+15, r24	; 0x0f
    22e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    22e6:	98 89       	ldd	r25, Y+16	; 0x10
    22e8:	01 97       	sbiw	r24, 0x01	; 1
    22ea:	f1 f7       	brne	.-4      	; 0x22e8 <__stack+0xe9>
    22ec:	98 8b       	std	Y+16, r25	; 0x10
    22ee:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(250);


		}
		LCD_Clear() ;
    22f0:	0e 94 c9 0f 	call	0x1f92	; 0x1f92 <LCD_Clear>
		LCD_VidLocation(LINE_1,2);
    22f4:	80 e0       	ldi	r24, 0x00	; 0
    22f6:	62 e0       	ldi	r22, 0x02	; 2
    22f8:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <LCD_VidLocation>
		LCD_VidSendString("Distance is ");
    22fc:	88 e0       	ldi	r24, 0x08	; 8
    22fe:	92 e0       	ldi	r25, 0x02	; 2
    2300:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <LCD_VidSendString>
		LCD_VidLocation(LINE_2,7);
    2304:	81 e0       	ldi	r24, 0x01	; 1
    2306:	67 e0       	ldi	r22, 0x07	; 7
    2308:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <LCD_VidLocation>
		LCD_VidSendMultiInt(distance) ;
    230c:	80 91 21 03 	lds	r24, 0x0321
    2310:	90 91 22 03 	lds	r25, 0x0322
    2314:	a0 91 23 03 	lds	r26, 0x0323
    2318:	b0 91 24 03 	lds	r27, 0x0324
    231c:	bc 01       	movw	r22, r24
    231e:	cd 01       	movw	r24, r26
    2320:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    2324:	dc 01       	movw	r26, r24
    2326:	cb 01       	movw	r24, r22
    2328:	bc 01       	movw	r22, r24
    232a:	cd 01       	movw	r24, r26
    232c:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <LCD_VidSendMultiInt>
    2330:	80 e0       	ldi	r24, 0x00	; 0
    2332:	90 e0       	ldi	r25, 0x00	; 0
    2334:	aa e7       	ldi	r26, 0x7A	; 122
    2336:	b3 e4       	ldi	r27, 0x43	; 67
    2338:	8b 87       	std	Y+11, r24	; 0x0b
    233a:	9c 87       	std	Y+12, r25	; 0x0c
    233c:	ad 87       	std	Y+13, r26	; 0x0d
    233e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2340:	6b 85       	ldd	r22, Y+11	; 0x0b
    2342:	7c 85       	ldd	r23, Y+12	; 0x0c
    2344:	8d 85       	ldd	r24, Y+13	; 0x0d
    2346:	9e 85       	ldd	r25, Y+14	; 0x0e
    2348:	20 e0       	ldi	r18, 0x00	; 0
    234a:	30 e0       	ldi	r19, 0x00	; 0
    234c:	4a ef       	ldi	r20, 0xFA	; 250
    234e:	54 e4       	ldi	r21, 0x44	; 68
    2350:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    2354:	dc 01       	movw	r26, r24
    2356:	cb 01       	movw	r24, r22
    2358:	8f 83       	std	Y+7, r24	; 0x07
    235a:	98 87       	std	Y+8, r25	; 0x08
    235c:	a9 87       	std	Y+9, r26	; 0x09
    235e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2360:	6f 81       	ldd	r22, Y+7	; 0x07
    2362:	78 85       	ldd	r23, Y+8	; 0x08
    2364:	89 85       	ldd	r24, Y+9	; 0x09
    2366:	9a 85       	ldd	r25, Y+10	; 0x0a
    2368:	20 e0       	ldi	r18, 0x00	; 0
    236a:	30 e0       	ldi	r19, 0x00	; 0
    236c:	40 e8       	ldi	r20, 0x80	; 128
    236e:	5f e3       	ldi	r21, 0x3F	; 63
    2370:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    2374:	88 23       	and	r24, r24
    2376:	2c f4       	brge	.+10     	; 0x2382 <__stack+0x183>
		__ticks = 1;
    2378:	81 e0       	ldi	r24, 0x01	; 1
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	9e 83       	std	Y+6, r25	; 0x06
    237e:	8d 83       	std	Y+5, r24	; 0x05
    2380:	3f c0       	rjmp	.+126    	; 0x2400 <__stack+0x201>
	else if (__tmp > 65535)
    2382:	6f 81       	ldd	r22, Y+7	; 0x07
    2384:	78 85       	ldd	r23, Y+8	; 0x08
    2386:	89 85       	ldd	r24, Y+9	; 0x09
    2388:	9a 85       	ldd	r25, Y+10	; 0x0a
    238a:	20 e0       	ldi	r18, 0x00	; 0
    238c:	3f ef       	ldi	r19, 0xFF	; 255
    238e:	4f e7       	ldi	r20, 0x7F	; 127
    2390:	57 e4       	ldi	r21, 0x47	; 71
    2392:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    2396:	18 16       	cp	r1, r24
    2398:	4c f5       	brge	.+82     	; 0x23ec <__stack+0x1ed>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    239a:	6b 85       	ldd	r22, Y+11	; 0x0b
    239c:	7c 85       	ldd	r23, Y+12	; 0x0c
    239e:	8d 85       	ldd	r24, Y+13	; 0x0d
    23a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    23a2:	20 e0       	ldi	r18, 0x00	; 0
    23a4:	30 e0       	ldi	r19, 0x00	; 0
    23a6:	40 e2       	ldi	r20, 0x20	; 32
    23a8:	51 e4       	ldi	r21, 0x41	; 65
    23aa:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    23ae:	dc 01       	movw	r26, r24
    23b0:	cb 01       	movw	r24, r22
    23b2:	bc 01       	movw	r22, r24
    23b4:	cd 01       	movw	r24, r26
    23b6:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    23ba:	dc 01       	movw	r26, r24
    23bc:	cb 01       	movw	r24, r22
    23be:	9e 83       	std	Y+6, r25	; 0x06
    23c0:	8d 83       	std	Y+5, r24	; 0x05
    23c2:	0f c0       	rjmp	.+30     	; 0x23e2 <__stack+0x1e3>
    23c4:	88 ec       	ldi	r24, 0xC8	; 200
    23c6:	90 e0       	ldi	r25, 0x00	; 0
    23c8:	9c 83       	std	Y+4, r25	; 0x04
    23ca:	8b 83       	std	Y+3, r24	; 0x03
    23cc:	8b 81       	ldd	r24, Y+3	; 0x03
    23ce:	9c 81       	ldd	r25, Y+4	; 0x04
    23d0:	01 97       	sbiw	r24, 0x01	; 1
    23d2:	f1 f7       	brne	.-4      	; 0x23d0 <__stack+0x1d1>
    23d4:	9c 83       	std	Y+4, r25	; 0x04
    23d6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23d8:	8d 81       	ldd	r24, Y+5	; 0x05
    23da:	9e 81       	ldd	r25, Y+6	; 0x06
    23dc:	01 97       	sbiw	r24, 0x01	; 1
    23de:	9e 83       	std	Y+6, r25	; 0x06
    23e0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23e2:	8d 81       	ldd	r24, Y+5	; 0x05
    23e4:	9e 81       	ldd	r25, Y+6	; 0x06
    23e6:	00 97       	sbiw	r24, 0x00	; 0
    23e8:	69 f7       	brne	.-38     	; 0x23c4 <__stack+0x1c5>
    23ea:	22 c0       	rjmp	.+68     	; 0x2430 <__stack+0x231>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23ec:	6f 81       	ldd	r22, Y+7	; 0x07
    23ee:	78 85       	ldd	r23, Y+8	; 0x08
    23f0:	89 85       	ldd	r24, Y+9	; 0x09
    23f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    23f4:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    23f8:	dc 01       	movw	r26, r24
    23fa:	cb 01       	movw	r24, r22
    23fc:	9e 83       	std	Y+6, r25	; 0x06
    23fe:	8d 83       	std	Y+5, r24	; 0x05
    2400:	8d 81       	ldd	r24, Y+5	; 0x05
    2402:	9e 81       	ldd	r25, Y+6	; 0x06
    2404:	9a 83       	std	Y+2, r25	; 0x02
    2406:	89 83       	std	Y+1, r24	; 0x01
    2408:	89 81       	ldd	r24, Y+1	; 0x01
    240a:	9a 81       	ldd	r25, Y+2	; 0x02
    240c:	01 97       	sbiw	r24, 0x01	; 1
    240e:	f1 f7       	brne	.-4      	; 0x240c <__stack+0x20d>
    2410:	9a 83       	std	Y+2, r25	; 0x02
    2412:	89 83       	std	Y+1, r24	; 0x01
    2414:	0d c0       	rjmp	.+26     	; 0x2430 <__stack+0x231>
		_delay_ms(250) ;


	}else if(i==0){
    2416:	80 91 20 03 	lds	r24, 0x0320
    241a:	88 23       	and	r24, r24
    241c:	49 f4       	brne	.+18     	; 0x2430 <__stack+0x231>
		TCNT1=0 ;
    241e:	e4 e8       	ldi	r30, 0x84	; 132
    2420:	f0 e0       	ldi	r31, 0x00	; 0
    2422:	11 82       	std	Z+1, r1	; 0x01
    2424:	10 82       	st	Z, r1
		i=1;
    2426:	81 e0       	ldi	r24, 0x01	; 1
    2428:	80 93 20 03 	sts	0x0320, r24
		LCD_Clear() ;
    242c:	0e 94 c9 0f 	call	0x1f92	; 0x1f92 <LCD_Clear>
	}
}
    2430:	aa 96       	adiw	r28, 0x2a	; 42
    2432:	0f b6       	in	r0, 0x3f	; 63
    2434:	f8 94       	cli
    2436:	de bf       	out	0x3e, r29	; 62
    2438:	0f be       	out	0x3f, r0	; 63
    243a:	cd bf       	out	0x3d, r28	; 61
    243c:	cf 91       	pop	r28
    243e:	df 91       	pop	r29
    2440:	08 95       	ret

00002442 <INT0_init>:
#include "Timer1.h"
#include "LCD.h"
#include "UART.h"
#include "ULTRASONIC.h"

void INT0_init() {
    2442:	df 93       	push	r29
    2444:	cf 93       	push	r28
    2446:	cd b7       	in	r28, 0x3d	; 61
    2448:	de b7       	in	r29, 0x3e	; 62

	DDRD &= ~(1 << 0);
    244a:	aa e2       	ldi	r26, 0x2A	; 42
    244c:	b0 e0       	ldi	r27, 0x00	; 0
    244e:	ea e2       	ldi	r30, 0x2A	; 42
    2450:	f0 e0       	ldi	r31, 0x00	; 0
    2452:	80 81       	ld	r24, Z
    2454:	8e 7f       	andi	r24, 0xFE	; 254
    2456:	8c 93       	st	X, r24


	EICRA |= (1 << ISC00);
    2458:	a9 e6       	ldi	r26, 0x69	; 105
    245a:	b0 e0       	ldi	r27, 0x00	; 0
    245c:	e9 e6       	ldi	r30, 0x69	; 105
    245e:	f0 e0       	ldi	r31, 0x00	; 0
    2460:	80 81       	ld	r24, Z
    2462:	81 60       	ori	r24, 0x01	; 1
    2464:	8c 93       	st	X, r24
	EIMSK |= (1 << INT0);
    2466:	ad e3       	ldi	r26, 0x3D	; 61
    2468:	b0 e0       	ldi	r27, 0x00	; 0
    246a:	ed e3       	ldi	r30, 0x3D	; 61
    246c:	f0 e0       	ldi	r31, 0x00	; 0
    246e:	80 81       	ld	r24, Z
    2470:	81 60       	ori	r24, 0x01	; 1
    2472:	8c 93       	st	X, r24


	sei();
    2474:	78 94       	sei
}
    2476:	cf 91       	pop	r28
    2478:	df 91       	pop	r29
    247a:	08 95       	ret

0000247c <main>:

void main (void){
    247c:	df 93       	push	r29
    247e:	cf 93       	push	r28
    2480:	cd b7       	in	r28, 0x3d	; 61
    2482:	de b7       	in	r29, 0x3e	; 62
    2484:	68 97       	sbiw	r28, 0x18	; 24
    2486:	0f b6       	in	r0, 0x3f	; 63
    2488:	f8 94       	cli
    248a:	de bf       	out	0x3e, r29	; 62
    248c:	0f be       	out	0x3f, r0	; 63
    248e:	cd bf       	out	0x3d, r28	; 61
	Timer1_Init();
    2490:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <Timer1_Init>
	UART_Init();
    2494:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <UART_Init>
	LCD_VidInit();
    2498:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <LCD_VidInit>
	INT0_init();
    249c:	0e 94 21 12 	call	0x2442	; 0x2442 <INT0_init>
	DDRD|=(1<<7);
    24a0:	aa e2       	ldi	r26, 0x2A	; 42
    24a2:	b0 e0       	ldi	r27, 0x00	; 0
    24a4:	ea e2       	ldi	r30, 0x2A	; 42
    24a6:	f0 e0       	ldi	r31, 0x00	; 0
    24a8:	80 81       	ld	r24, Z
    24aa:	80 68       	ori	r24, 0x80	; 128
    24ac:	8c 93       	st	X, r24

	while(1){
		PORTD|=(1<<7);
    24ae:	ab e2       	ldi	r26, 0x2B	; 43
    24b0:	b0 e0       	ldi	r27, 0x00	; 0
    24b2:	eb e2       	ldi	r30, 0x2B	; 43
    24b4:	f0 e0       	ldi	r31, 0x00	; 0
    24b6:	80 81       	ld	r24, Z
    24b8:	80 68       	ori	r24, 0x80	; 128
    24ba:	8c 93       	st	X, r24
    24bc:	80 e0       	ldi	r24, 0x00	; 0
    24be:	90 e0       	ldi	r25, 0x00	; 0
    24c0:	a0 e7       	ldi	r26, 0x70	; 112
    24c2:	b1 e4       	ldi	r27, 0x41	; 65
    24c4:	8d 8b       	std	Y+21, r24	; 0x15
    24c6:	9e 8b       	std	Y+22, r25	; 0x16
    24c8:	af 8b       	std	Y+23, r26	; 0x17
    24ca:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    24cc:	6d 89       	ldd	r22, Y+21	; 0x15
    24ce:	7e 89       	ldd	r23, Y+22	; 0x16
    24d0:	8f 89       	ldd	r24, Y+23	; 0x17
    24d2:	98 8d       	ldd	r25, Y+24	; 0x18
    24d4:	2b ea       	ldi	r18, 0xAB	; 171
    24d6:	3a ea       	ldi	r19, 0xAA	; 170
    24d8:	4a e2       	ldi	r20, 0x2A	; 42
    24da:	50 e4       	ldi	r21, 0x40	; 64
    24dc:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    24e0:	dc 01       	movw	r26, r24
    24e2:	cb 01       	movw	r24, r22
    24e4:	89 8b       	std	Y+17, r24	; 0x11
    24e6:	9a 8b       	std	Y+18, r25	; 0x12
    24e8:	ab 8b       	std	Y+19, r26	; 0x13
    24ea:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    24ec:	69 89       	ldd	r22, Y+17	; 0x11
    24ee:	7a 89       	ldd	r23, Y+18	; 0x12
    24f0:	8b 89       	ldd	r24, Y+19	; 0x13
    24f2:	9c 89       	ldd	r25, Y+20	; 0x14
    24f4:	20 e0       	ldi	r18, 0x00	; 0
    24f6:	30 e0       	ldi	r19, 0x00	; 0
    24f8:	40 e8       	ldi	r20, 0x80	; 128
    24fa:	5f e3       	ldi	r21, 0x3F	; 63
    24fc:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    2500:	88 23       	and	r24, r24
    2502:	1c f4       	brge	.+6      	; 0x250a <main+0x8e>
		__ticks = 1;
    2504:	81 e0       	ldi	r24, 0x01	; 1
    2506:	88 8b       	std	Y+16, r24	; 0x10
    2508:	91 c0       	rjmp	.+290    	; 0x262c <main+0x1b0>
	else if (__tmp > 255)
    250a:	69 89       	ldd	r22, Y+17	; 0x11
    250c:	7a 89       	ldd	r23, Y+18	; 0x12
    250e:	8b 89       	ldd	r24, Y+19	; 0x13
    2510:	9c 89       	ldd	r25, Y+20	; 0x14
    2512:	20 e0       	ldi	r18, 0x00	; 0
    2514:	30 e0       	ldi	r19, 0x00	; 0
    2516:	4f e7       	ldi	r20, 0x7F	; 127
    2518:	53 e4       	ldi	r21, 0x43	; 67
    251a:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    251e:	18 16       	cp	r1, r24
    2520:	0c f0       	brlt	.+2      	; 0x2524 <main+0xa8>
    2522:	7b c0       	rjmp	.+246    	; 0x261a <main+0x19e>
	{
		_delay_ms(__us / 1000.0);
    2524:	6d 89       	ldd	r22, Y+21	; 0x15
    2526:	7e 89       	ldd	r23, Y+22	; 0x16
    2528:	8f 89       	ldd	r24, Y+23	; 0x17
    252a:	98 8d       	ldd	r25, Y+24	; 0x18
    252c:	20 e0       	ldi	r18, 0x00	; 0
    252e:	30 e0       	ldi	r19, 0x00	; 0
    2530:	4a e7       	ldi	r20, 0x7A	; 122
    2532:	54 e4       	ldi	r21, 0x44	; 68
    2534:	0e 94 65 03 	call	0x6ca	; 0x6ca <__divsf3>
    2538:	dc 01       	movw	r26, r24
    253a:	cb 01       	movw	r24, r22
    253c:	8c 87       	std	Y+12, r24	; 0x0c
    253e:	9d 87       	std	Y+13, r25	; 0x0d
    2540:	ae 87       	std	Y+14, r26	; 0x0e
    2542:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2544:	6c 85       	ldd	r22, Y+12	; 0x0c
    2546:	7d 85       	ldd	r23, Y+13	; 0x0d
    2548:	8e 85       	ldd	r24, Y+14	; 0x0e
    254a:	9f 85       	ldd	r25, Y+15	; 0x0f
    254c:	20 e0       	ldi	r18, 0x00	; 0
    254e:	30 e0       	ldi	r19, 0x00	; 0
    2550:	4a ef       	ldi	r20, 0xFA	; 250
    2552:	54 e4       	ldi	r21, 0x44	; 68
    2554:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    2558:	dc 01       	movw	r26, r24
    255a:	cb 01       	movw	r24, r22
    255c:	88 87       	std	Y+8, r24	; 0x08
    255e:	99 87       	std	Y+9, r25	; 0x09
    2560:	aa 87       	std	Y+10, r26	; 0x0a
    2562:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    2564:	68 85       	ldd	r22, Y+8	; 0x08
    2566:	79 85       	ldd	r23, Y+9	; 0x09
    2568:	8a 85       	ldd	r24, Y+10	; 0x0a
    256a:	9b 85       	ldd	r25, Y+11	; 0x0b
    256c:	20 e0       	ldi	r18, 0x00	; 0
    256e:	30 e0       	ldi	r19, 0x00	; 0
    2570:	40 e8       	ldi	r20, 0x80	; 128
    2572:	5f e3       	ldi	r21, 0x3F	; 63
    2574:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__ltsf2>
    2578:	88 23       	and	r24, r24
    257a:	2c f4       	brge	.+10     	; 0x2586 <main+0x10a>
		__ticks = 1;
    257c:	81 e0       	ldi	r24, 0x01	; 1
    257e:	90 e0       	ldi	r25, 0x00	; 0
    2580:	9f 83       	std	Y+7, r25	; 0x07
    2582:	8e 83       	std	Y+6, r24	; 0x06
    2584:	3f c0       	rjmp	.+126    	; 0x2604 <main+0x188>
	else if (__tmp > 65535)
    2586:	68 85       	ldd	r22, Y+8	; 0x08
    2588:	79 85       	ldd	r23, Y+9	; 0x09
    258a:	8a 85       	ldd	r24, Y+10	; 0x0a
    258c:	9b 85       	ldd	r25, Y+11	; 0x0b
    258e:	20 e0       	ldi	r18, 0x00	; 0
    2590:	3f ef       	ldi	r19, 0xFF	; 255
    2592:	4f e7       	ldi	r20, 0x7F	; 127
    2594:	57 e4       	ldi	r21, 0x47	; 71
    2596:	0e 94 11 04 	call	0x822	; 0x822 <__gtsf2>
    259a:	18 16       	cp	r1, r24
    259c:	4c f5       	brge	.+82     	; 0x25f0 <main+0x174>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    259e:	6c 85       	ldd	r22, Y+12	; 0x0c
    25a0:	7d 85       	ldd	r23, Y+13	; 0x0d
    25a2:	8e 85       	ldd	r24, Y+14	; 0x0e
    25a4:	9f 85       	ldd	r25, Y+15	; 0x0f
    25a6:	20 e0       	ldi	r18, 0x00	; 0
    25a8:	30 e0       	ldi	r19, 0x00	; 0
    25aa:	40 e2       	ldi	r20, 0x20	; 32
    25ac:	51 e4       	ldi	r21, 0x41	; 65
    25ae:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__mulsf3>
    25b2:	dc 01       	movw	r26, r24
    25b4:	cb 01       	movw	r24, r22
    25b6:	bc 01       	movw	r22, r24
    25b8:	cd 01       	movw	r24, r26
    25ba:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    25be:	dc 01       	movw	r26, r24
    25c0:	cb 01       	movw	r24, r22
    25c2:	9f 83       	std	Y+7, r25	; 0x07
    25c4:	8e 83       	std	Y+6, r24	; 0x06
    25c6:	0f c0       	rjmp	.+30     	; 0x25e6 <main+0x16a>
    25c8:	88 ec       	ldi	r24, 0xC8	; 200
    25ca:	90 e0       	ldi	r25, 0x00	; 0
    25cc:	9d 83       	std	Y+5, r25	; 0x05
    25ce:	8c 83       	std	Y+4, r24	; 0x04
    25d0:	8c 81       	ldd	r24, Y+4	; 0x04
    25d2:	9d 81       	ldd	r25, Y+5	; 0x05
    25d4:	01 97       	sbiw	r24, 0x01	; 1
    25d6:	f1 f7       	brne	.-4      	; 0x25d4 <main+0x158>
    25d8:	9d 83       	std	Y+5, r25	; 0x05
    25da:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25dc:	8e 81       	ldd	r24, Y+6	; 0x06
    25de:	9f 81       	ldd	r25, Y+7	; 0x07
    25e0:	01 97       	sbiw	r24, 0x01	; 1
    25e2:	9f 83       	std	Y+7, r25	; 0x07
    25e4:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25e6:	8e 81       	ldd	r24, Y+6	; 0x06
    25e8:	9f 81       	ldd	r25, Y+7	; 0x07
    25ea:	00 97       	sbiw	r24, 0x00	; 0
    25ec:	69 f7       	brne	.-38     	; 0x25c8 <main+0x14c>
    25ee:	24 c0       	rjmp	.+72     	; 0x2638 <main+0x1bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25f0:	68 85       	ldd	r22, Y+8	; 0x08
    25f2:	79 85       	ldd	r23, Y+9	; 0x09
    25f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    25f6:	9b 85       	ldd	r25, Y+11	; 0x0b
    25f8:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    25fc:	dc 01       	movw	r26, r24
    25fe:	cb 01       	movw	r24, r22
    2600:	9f 83       	std	Y+7, r25	; 0x07
    2602:	8e 83       	std	Y+6, r24	; 0x06
    2604:	8e 81       	ldd	r24, Y+6	; 0x06
    2606:	9f 81       	ldd	r25, Y+7	; 0x07
    2608:	9b 83       	std	Y+3, r25	; 0x03
    260a:	8a 83       	std	Y+2, r24	; 0x02
    260c:	8a 81       	ldd	r24, Y+2	; 0x02
    260e:	9b 81       	ldd	r25, Y+3	; 0x03
    2610:	01 97       	sbiw	r24, 0x01	; 1
    2612:	f1 f7       	brne	.-4      	; 0x2610 <main+0x194>
    2614:	9b 83       	std	Y+3, r25	; 0x03
    2616:	8a 83       	std	Y+2, r24	; 0x02
    2618:	0f c0       	rjmp	.+30     	; 0x2638 <main+0x1bc>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    261a:	69 89       	ldd	r22, Y+17	; 0x11
    261c:	7a 89       	ldd	r23, Y+18	; 0x12
    261e:	8b 89       	ldd	r24, Y+19	; 0x13
    2620:	9c 89       	ldd	r25, Y+20	; 0x14
    2622:	0e 94 95 00 	call	0x12a	; 0x12a <__fixunssfsi>
    2626:	dc 01       	movw	r26, r24
    2628:	cb 01       	movw	r24, r22
    262a:	88 8b       	std	Y+16, r24	; 0x10
    262c:	88 89       	ldd	r24, Y+16	; 0x10
    262e:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2630:	89 81       	ldd	r24, Y+1	; 0x01
    2632:	8a 95       	dec	r24
    2634:	f1 f7       	brne	.-4      	; 0x2632 <main+0x1b6>
    2636:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(15);
		PORTD &=~(1<<7) ;
    2638:	ab e2       	ldi	r26, 0x2B	; 43
    263a:	b0 e0       	ldi	r27, 0x00	; 0
    263c:	eb e2       	ldi	r30, 0x2B	; 43
    263e:	f0 e0       	ldi	r31, 0x00	; 0
    2640:	80 81       	ld	r24, Z
    2642:	8f 77       	andi	r24, 0x7F	; 127
    2644:	8c 93       	st	X, r24
    2646:	33 cf       	rjmp	.-410    	; 0x24ae <main+0x32>

00002648 <__vector_1>:
	}
}

ISR(INT0_vect) {
    2648:	1f 92       	push	r1
    264a:	0f 92       	push	r0
    264c:	0f b6       	in	r0, 0x3f	; 63
    264e:	0f 92       	push	r0
    2650:	00 90 5b 00 	lds	r0, 0x005B
    2654:	0f 92       	push	r0
    2656:	11 24       	eor	r1, r1
    2658:	2f 93       	push	r18
    265a:	3f 93       	push	r19
    265c:	4f 93       	push	r20
    265e:	5f 93       	push	r21
    2660:	6f 93       	push	r22
    2662:	7f 93       	push	r23
    2664:	8f 93       	push	r24
    2666:	9f 93       	push	r25
    2668:	af 93       	push	r26
    266a:	bf 93       	push	r27
    266c:	ef 93       	push	r30
    266e:	ff 93       	push	r31
    2670:	df 93       	push	r29
    2672:	cf 93       	push	r28
    2674:	cd b7       	in	r28, 0x3d	; 61
    2676:	de b7       	in	r29, 0x3e	; 62
	ultrasonic_in_action();
    2678:	0e 94 2e 10 	call	0x205c	; 0x205c <ultrasonic_in_action>
}
    267c:	cf 91       	pop	r28
    267e:	df 91       	pop	r29
    2680:	ff 91       	pop	r31
    2682:	ef 91       	pop	r30
    2684:	bf 91       	pop	r27
    2686:	af 91       	pop	r26
    2688:	9f 91       	pop	r25
    268a:	8f 91       	pop	r24
    268c:	7f 91       	pop	r23
    268e:	6f 91       	pop	r22
    2690:	5f 91       	pop	r21
    2692:	4f 91       	pop	r20
    2694:	3f 91       	pop	r19
    2696:	2f 91       	pop	r18
    2698:	0f 90       	pop	r0
    269a:	00 92 5b 00 	sts	0x005B, r0
    269e:	0f 90       	pop	r0
    26a0:	0f be       	out	0x3f, r0	; 63
    26a2:	0f 90       	pop	r0
    26a4:	1f 90       	pop	r1
    26a6:	18 95       	reti

000026a8 <__mulsi3>:
    26a8:	62 9f       	mul	r22, r18
    26aa:	d0 01       	movw	r26, r0
    26ac:	73 9f       	mul	r23, r19
    26ae:	f0 01       	movw	r30, r0
    26b0:	82 9f       	mul	r24, r18
    26b2:	e0 0d       	add	r30, r0
    26b4:	f1 1d       	adc	r31, r1
    26b6:	64 9f       	mul	r22, r20
    26b8:	e0 0d       	add	r30, r0
    26ba:	f1 1d       	adc	r31, r1
    26bc:	92 9f       	mul	r25, r18
    26be:	f0 0d       	add	r31, r0
    26c0:	83 9f       	mul	r24, r19
    26c2:	f0 0d       	add	r31, r0
    26c4:	74 9f       	mul	r23, r20
    26c6:	f0 0d       	add	r31, r0
    26c8:	65 9f       	mul	r22, r21
    26ca:	f0 0d       	add	r31, r0
    26cc:	99 27       	eor	r25, r25
    26ce:	72 9f       	mul	r23, r18
    26d0:	b0 0d       	add	r27, r0
    26d2:	e1 1d       	adc	r30, r1
    26d4:	f9 1f       	adc	r31, r25
    26d6:	63 9f       	mul	r22, r19
    26d8:	b0 0d       	add	r27, r0
    26da:	e1 1d       	adc	r30, r1
    26dc:	f9 1f       	adc	r31, r25
    26de:	bd 01       	movw	r22, r26
    26e0:	cf 01       	movw	r24, r30
    26e2:	11 24       	eor	r1, r1
    26e4:	08 95       	ret

000026e6 <__udivmodsi4>:
    26e6:	a1 e2       	ldi	r26, 0x21	; 33
    26e8:	1a 2e       	mov	r1, r26
    26ea:	aa 1b       	sub	r26, r26
    26ec:	bb 1b       	sub	r27, r27
    26ee:	fd 01       	movw	r30, r26
    26f0:	0d c0       	rjmp	.+26     	; 0x270c <__udivmodsi4_ep>

000026f2 <__udivmodsi4_loop>:
    26f2:	aa 1f       	adc	r26, r26
    26f4:	bb 1f       	adc	r27, r27
    26f6:	ee 1f       	adc	r30, r30
    26f8:	ff 1f       	adc	r31, r31
    26fa:	a2 17       	cp	r26, r18
    26fc:	b3 07       	cpc	r27, r19
    26fe:	e4 07       	cpc	r30, r20
    2700:	f5 07       	cpc	r31, r21
    2702:	20 f0       	brcs	.+8      	; 0x270c <__udivmodsi4_ep>
    2704:	a2 1b       	sub	r26, r18
    2706:	b3 0b       	sbc	r27, r19
    2708:	e4 0b       	sbc	r30, r20
    270a:	f5 0b       	sbc	r31, r21

0000270c <__udivmodsi4_ep>:
    270c:	66 1f       	adc	r22, r22
    270e:	77 1f       	adc	r23, r23
    2710:	88 1f       	adc	r24, r24
    2712:	99 1f       	adc	r25, r25
    2714:	1a 94       	dec	r1
    2716:	69 f7       	brne	.-38     	; 0x26f2 <__udivmodsi4_loop>
    2718:	60 95       	com	r22
    271a:	70 95       	com	r23
    271c:	80 95       	com	r24
    271e:	90 95       	com	r25
    2720:	9b 01       	movw	r18, r22
    2722:	ac 01       	movw	r20, r24
    2724:	bd 01       	movw	r22, r26
    2726:	cf 01       	movw	r24, r30
    2728:	08 95       	ret

0000272a <__prologue_saves__>:
    272a:	2f 92       	push	r2
    272c:	3f 92       	push	r3
    272e:	4f 92       	push	r4
    2730:	5f 92       	push	r5
    2732:	6f 92       	push	r6
    2734:	7f 92       	push	r7
    2736:	8f 92       	push	r8
    2738:	9f 92       	push	r9
    273a:	af 92       	push	r10
    273c:	bf 92       	push	r11
    273e:	cf 92       	push	r12
    2740:	df 92       	push	r13
    2742:	ef 92       	push	r14
    2744:	ff 92       	push	r15
    2746:	0f 93       	push	r16
    2748:	1f 93       	push	r17
    274a:	cf 93       	push	r28
    274c:	df 93       	push	r29
    274e:	cd b7       	in	r28, 0x3d	; 61
    2750:	de b7       	in	r29, 0x3e	; 62
    2752:	ca 1b       	sub	r28, r26
    2754:	db 0b       	sbc	r29, r27
    2756:	0f b6       	in	r0, 0x3f	; 63
    2758:	f8 94       	cli
    275a:	de bf       	out	0x3e, r29	; 62
    275c:	0f be       	out	0x3f, r0	; 63
    275e:	cd bf       	out	0x3d, r28	; 61
    2760:	19 94       	eijmp

00002762 <__epilogue_restores__>:
    2762:	2a 88       	ldd	r2, Y+18	; 0x12
    2764:	39 88       	ldd	r3, Y+17	; 0x11
    2766:	48 88       	ldd	r4, Y+16	; 0x10
    2768:	5f 84       	ldd	r5, Y+15	; 0x0f
    276a:	6e 84       	ldd	r6, Y+14	; 0x0e
    276c:	7d 84       	ldd	r7, Y+13	; 0x0d
    276e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2770:	9b 84       	ldd	r9, Y+11	; 0x0b
    2772:	aa 84       	ldd	r10, Y+10	; 0x0a
    2774:	b9 84       	ldd	r11, Y+9	; 0x09
    2776:	c8 84       	ldd	r12, Y+8	; 0x08
    2778:	df 80       	ldd	r13, Y+7	; 0x07
    277a:	ee 80       	ldd	r14, Y+6	; 0x06
    277c:	fd 80       	ldd	r15, Y+5	; 0x05
    277e:	0c 81       	ldd	r16, Y+4	; 0x04
    2780:	1b 81       	ldd	r17, Y+3	; 0x03
    2782:	aa 81       	ldd	r26, Y+2	; 0x02
    2784:	b9 81       	ldd	r27, Y+1	; 0x01
    2786:	ce 0f       	add	r28, r30
    2788:	d1 1d       	adc	r29, r1
    278a:	0f b6       	in	r0, 0x3f	; 63
    278c:	f8 94       	cli
    278e:	de bf       	out	0x3e, r29	; 62
    2790:	0f be       	out	0x3f, r0	; 63
    2792:	cd bf       	out	0x3d, r28	; 61
    2794:	ed 01       	movw	r28, r26
    2796:	08 95       	ret

00002798 <_exit>:
    2798:	f8 94       	cli

0000279a <__stop_program>:
    279a:	ff cf       	rjmp	.-2      	; 0x279a <__stop_program>
